import numpy as np

def get_coefficients(calc, zeta, m3, m2, m1, z3, z2, z1, m4=None, z4=None):


	z1_conj = np.conj(z1)
	z2_conj = np.conj(z2)
	z3_conj = np.conj(z3)
	zeta_conj = np.conj(zeta)

	if calc == 'geo_cent':

		coeff10 = ((zeta_conj - z2)*(zeta_conj + z2)*(zeta_conj - z3_conj))

		coeff9 = (zeta_conj**2*(2*(m3 + m2 + m1) - zeta_conj*(zeta + 3*z3)) + (-m2 + m1)*zeta_conj*z2 - (m2 + m1 - zeta_conj*(zeta + 3*z3))*z2**2 + (-2*m3*zeta_conj + m2*(-zeta_conj + z2) - (m1 - (zeta + 3*z3)*(zeta_conj - z2))*(zeta_conj + z2))*z3_conj)

		coeff8 = (-((m2 - m1)*(m3 + m2 + m1 - 3*zeta_conj*z3)*z2) + z2**2*(m2*zeta + m1*zeta + m3*(zeta - z3) + 3*m2*z3 + 3*m1*z3 - m2*z2 + m1*z2 - 3*zeta_conj*(zeta*z3 + z3**2 - z2**2)) + zeta_conj*((m3 + m2 + m1)**2 + 3*zeta_conj**2*(zeta*z3 + z3**2 - z2**2) - 3*zeta_conj*(m3*(zeta + z3) + m2*(zeta + 2*z3 - z2) + m1*(zeta + 2*z3 + z2))) + (-(m3*(m3 + m2 + m1)) + 3*(-m2 + m1)*z3*z2 - 
				3*zeta_conj**2*(zeta*z3 + z3**2 - z2**2) + 3*z2**2*(zeta*z3 + z3**2 - z2**2) + zeta_conj*(2*m3*(zeta + 2*z3) + m2*(2*zeta + 3*z3 - 2*z2) + m1*(2*zeta + 3*z3 + 2*z2)))*z3_conj)

		coeff7 = ((m2 - m1)*z2*(2*m3*z3 + 3*m2*z3 + 3*m1*z3 - 3*zeta_conj*z3**2 - m2*z2 + m1*z2 + 3*zeta_conj*z2**2) + z2**2*(-3*m1*zeta*z3 - 3*m1*z3**2 + 3*zeta*zeta_conj*z3**2 + zeta_conj*z3**3 + 2*m3*z3*(-zeta + z3) - m1*zeta*z2 - 3*m1*z3*z2 + 2*m1*z2**2 - 3*zeta*zeta_conj*z2**2 - 9*zeta_conj*z3*z2**2 + m2*(-3*zeta*z3 - 3*z3**2 + zeta*z2 + 3*z3*z2 + 2*z2**2)) - 
				zeta_conj*((m3 + m2 + m1)*(3*m3*zeta + 3*m2*zeta + 3*m1*zeta - m3*z3 + 3*m2*z3 + 3*m1*z3 - 4*m2*z2 + 4*m1*z2) + zeta_conj**2*(z3**3 - 9*z3*z2**2 + 3*zeta*(z3**2 - z2**2)) - 3*zeta_conj*(2*m3*(zeta*z3 - z2**2) + m1*(2*z3**2 + (zeta - z2)*z2 + 3*z3*(zeta + z2)) + m2*(2*z3**2 + 3*z3*(zeta - z2) - z2*(zeta + z2)))) + (m3**2*zeta + 2*m3*m2*zeta + 
				m2**2*zeta + 2*m3*m1*zeta + 2*m2*m1*zeta + m1**2*zeta + m3**2*z3 + 2*m3*m2*z3 + 2*m3*m1*z3 - 2*m3*m2*z2 - m2**2*z2 + 2*m3*m1*z2 + m1**2*z2 + 3*(m2 - m1)*z2*(z3**2 - z2**2) + z2**2*(-3*zeta*z3**2 - z3**3 + 3*zeta*z2**2 + 9*z3*z2**2) + zeta_conj**2*(z3**3 - 9*z3*z2**2 + 3*zeta*(z3**2 - z2**2)) + zeta_conj*(-2*m3*(2*zeta*z3 + z3**2 - 3*z2**2) + 
				m2*(-6*zeta*z3 - 3*z3**2 + 2*zeta*z2 + 6*z3*z2 + z2**2) + m1*(-3*z3**2 + z2*(-2*zeta + z2) - 6*z3*(zeta + z2))))*z3_conj)

		coeff6 = (-(m3**3*zeta) - 3*m3**2*m2*zeta - 3*m3*m2**2*zeta - m2**3*zeta - 3*m3**2*m1*zeta - 6*m3*m2*m1*zeta - 3*m2**2*m1*zeta - 3*m3*m1**2*zeta - 3*m2*m1**2*zeta - m1**3*zeta + m3**3*z3 + 2*m3**2*m2*z3 + m3*m2**2*z3 + 2*m3**2*m1*z3 + 2*m3*m2*m1*z3 + m3*m1**2*z3 + 3*m3**2*zeta*zeta_conj*z3 + 12*m3*m2*zeta*zeta_conj*z3 + 
				9*m2**2*zeta*zeta_conj*z3 + 12*m3*m1*zeta*zeta_conj*z3 + 18*m2*m1*zeta*zeta_conj*z3 + 9*m1**2*zeta*zeta_conj*z3 - 2*m3**2*zeta_conj*z3**2 - 2*m3*m2*zeta_conj*z3**2 + 3*m2**2*zeta_conj*z3**2 - 2*m3*m1*zeta_conj*z3**2 + 6*m2*m1*zeta_conj*z3**2 + 3*m1**2*zeta_conj*z3**2 - 3*m3*zeta*zeta_conj**2*z3**2 - 9*m2*zeta*zeta_conj**2*z3**2 - 9*m1*zeta*zeta_conj**2*z3**2 + 
				m3*zeta_conj**2*z3**3 - 2*m2*zeta_conj**2*z3**3 - 2*m1*zeta_conj**2*z3**3 + zeta*zeta_conj**3*z3**3 + m3**2*m2*z2 + 2*m3*m2**2*z2 + m2**3*z2 - m3**2*m1*z2 + m2**2*m1*z2 - 2*m3*m1**2*z2 - m2*m1**2*z2 - m1**3*z2 - 6*m3*m2*zeta*zeta_conj*z2 - 6*m2**2*zeta*zeta_conj*z2 + 6*m3*m1*zeta*zeta_conj*z2 + 6*m1**2*zeta*zeta_conj*z2 - 6*m3*m2*zeta_conj*z3*z2 - 
				12*m2**2*zeta_conj*z3*z2 + 6*m3*m1*zeta_conj*z3*z2 + 12*m1**2*zeta_conj*z3*z2 + 9*m2*zeta*zeta_conj**2*z3*z2 - 9*m1*zeta*zeta_conj**2*z3*z2 + 9*m2*zeta_conj**2*z3**2*z2 - 9*m1*zeta_conj**2*z3**2*z2 - 3*m3**2*zeta_conj*z2**2 - 2*m3*m2*zeta_conj*z2**2 + 4*m2**2*zeta_conj*z2**2 - 2*m3*m1*zeta_conj*z2**2 - 4*m2*m1*zeta_conj*z2**2 + 4*m1**2*zeta_conj*z2**2 + 9*m3*zeta*zeta_conj**2*z2**2 + 
				6*m2*zeta*zeta_conj**2*z2**2 + 6*m1*zeta*zeta_conj**2*z2**2 + 9*m3*zeta_conj**2*z3*z2**2 + 9*m2*zeta_conj**2*z3*z2**2 + 9*m1*zeta_conj**2*z3*z2**2 - 9*zeta*zeta_conj**3*z3*z2**2 - 9*zeta_conj**3*z3**2*z2**2 - 6*m2*zeta_conj**2*z2**3 + 6*m1*zeta_conj**2*z2**3 + 3*zeta_conj**3*z2**4 + (m2 - m1)*z2*(-(m3*z3**2) - 3*m2*z3**2 - 3*m1*z3**2 + zeta_conj*z3**3 + 3*m2*z3*z2 - 3*m1*z3*z2 + 
				3*m3*z2**2 + 2*m2*z2**2 + 2*m1*z2**2 - 9*zeta_conj*z3*z2**2) + z2**2*(3*m1*zeta*z3**2 + m1*z3**3 - zeta*zeta_conj*z3**3 + 3*m1*zeta*z3*z2 + 3*m1*z3**2*z2 - 2*m1*zeta*z2**2 - 6*m1*z3*z2**2 + 9*zeta*zeta_conj*z3*z2**2 + 9*zeta_conj*z3**2*z2**2 - 2*m1*z2**3 - 3*zeta_conj*z2**4 + m3*(zeta - z3)*(z3**2 - 3*z2**2) + m2*(3*zeta*z3**2 + z3**3 - 3*zeta*z3*z2 - 3*z3**2*z2 - 
				2*zeta*z2**2 - 6*z3*z2**2 + 2*z2**3)) - (m3**2*zeta*z3 + 4*m3*m2*zeta*z3 + 3*m2**2*zeta*z3 + 4*m3*m1*zeta*z3 + 6*m2*m1*zeta*z3 + 3*m1**2*zeta*z3 + m3*m2*z3**2 + m3*m1*z3**2 - 2*m3*m2*zeta*z2 - 2*m2**2*zeta*z2 + 2*m3*m1*zeta*z2 + 2*m1**2*zeta*z2 - 4*m3*m2*z3*z2 - 3*m2**2*z3*z2 + 4*m3*m1*z3*z2 + 3*m1**2*z3*z2 - 3*m3**2*z2**2 - 
				m3*m2*z2**2 + 2*m2**2*z2**2 - m3*m1*z2**2 + 2*m1**2*z2**2 - zeta*z3**3*z2**2 + 9*zeta*z3*z2**4 + 9*z3**2*z2**4 - 3*z2**6 + (m2 - m1)*z3*z2*(z3**2 - 9*z2**2) + zeta_conj**2*(-9*z3**2*z2**2 + 3*z2**4 + zeta*(z3**3 - 9*z3*z2**2)) + zeta_conj*(2*m3*(-(zeta*z3**2) + 3*zeta*z2**2 + 6*z3*z2**2) - m1*(z3**3 - 3*z3*z2*(-2*zeta + z2) + 6*z3**2*(zeta + z2) - 
				4*z2**2*(zeta + z2)) + m2*(-z3**3 + 4*(zeta - z2)*z2**2 + 6*z3**2*(-zeta + z2) + 3*z3*z2*(2*zeta + z2))))*z3_conj)

		coeff5 = (3*m3**2*m2*zeta*z3 + 6*m3*m2**2*zeta*z3 + 3*m2**3*zeta*z3 + 3*m3**2*m1*zeta*z3 + 12*m3*m2*m1*zeta*z3 + 9*m2**2*m1*zeta*z3 + 6*m3*m1**2*zeta*z3 + 9*m2*m1**2*zeta*z3 + 3*m1**3*zeta*z3 - 2*m3**2*m2*z3**2 - 2*m3*m2**2*z3**2 - 2*m3**2*m1*z3**2 - 4*m3*m2*m1*z3**2 - 2*m3*m1**2*z3**2 - 6*m3*m2*zeta*zeta_conj*z3**2 - 
				9*m2**2*zeta*zeta_conj*z3**2 - 6*m3*m1*zeta*zeta_conj*z3**2 - 18*m2*m1*zeta*zeta_conj*z3**2 - 9*m1**2*zeta*zeta_conj*z3**2 + 2*m3*m2*zeta_conj*z3**3 - m2**2*zeta_conj*z3**3 + 2*m3*m1*zeta_conj*z3**3 - 2*m2*m1*zeta_conj*z3**3 - m1**2*zeta_conj*z3**3 + 3*m2*zeta*zeta_conj**2*z3**3 + 3*m1*zeta*zeta_conj**2*z3**3 - 3*m3**2*m2*zeta*z2 - 6*m3*m2**2*zeta*z2 - 
				3*m2**3*zeta*z2 + 3*m3**2*m1*zeta*z2 - 3*m2**2*m1*zeta*z2 + 6*m3*m1**2*zeta*z2 + 3*m2*m1**2*zeta*z2 + 3*m1**3*zeta*z2 + m3**2*m2*z3*z2 - 2*m3*m2**2*z3*z2 - 3*m2**3*z3*z2 - m3**2*m1*z3*z2 - 3*m2**2*m1*z3*z2 + 2*m3*m1**2*z3*z2 + 3*m2*m1**2*z3*z2 + 3*m1**3*z3*z2 + 12*m3*m2*zeta*zeta_conj*z3*z2 + 18*m2**2*zeta*zeta_conj*z3*z2 - 
				12*m3*m1*zeta*zeta_conj*z3*z2 - 18*m1**2*zeta*zeta_conj*z3*z2 + 12*m2**2*zeta_conj*z3**2*z2 - 12*m1**2*zeta_conj*z3**2*z2 - 9*m2*zeta*zeta_conj**2*z3**2*z2 + 9*m1*zeta*zeta_conj**2*z3**2*z2 - 3*m2*zeta_conj**2*z3**3*z2 + 3*m1*zeta_conj**2*z3**3*z2 + m3**2*m2*z2**2 + 4*m3*m2**2*z2**2 + 3*m2**3*z2**2 + m3**2*m1*z2**2 + m2**2*m1*z2**2 + 4*m3*m1**2*z2**2 + 
				m2*m1**2*z2**2 + 3*m1**3*z2**2 + 9*m3**2*zeta*zeta_conj*z2**2 + 12*m3*m2*zeta*zeta_conj*z2**2 + 12*m3*m1*zeta*zeta_conj*z2**2 + 12*m2*m1*zeta*zeta_conj*z2**2 - 3*m3**2*zeta_conj*z3*z2**2 - 12*m2**2*zeta_conj*z3*z2**2 + 12*m2*m1*zeta_conj*z3*z2**2 - 12*m1**2*zeta_conj*z3*z2**2 - 18*m3*zeta*zeta_conj**2*z3*z2**2 - 18*m2*zeta*zeta_conj**2*z3*z2**2 - 18*m1*zeta*zeta_conj**2*z3*z2**2 - 
				9*m2*zeta_conj**2*z3**2*z2**2 - 9*m1*zeta_conj**2*z3**2*z2**2 + 9*zeta*zeta_conj**3*z3**2*z2**2 + 3*zeta_conj**3*z3**3*z2**2 - 8*m3*m2*zeta_conj*z2**3 - 2*m2**2*zeta_conj*z2**3 + 8*m3*m1*zeta_conj*z2**3 + 2*m1**2*zeta_conj*z2**3 + 6*m2*zeta*zeta_conj**2*z2**3 - 6*m1*zeta*zeta_conj**2*z2**3 + 18*m2*zeta_conj**2*z3*z2**3 - 18*m1*zeta_conj**2*z3*z2**3 + 6*m3*zeta_conj**2*z2**4 - 3*zeta*zeta_conj**3*z2**4 - 
				9*zeta_conj**3*z3*z2**4 + (m2 - m1)*z2*(-3*z2**2*(2*m3*z3 - 3*zeta_conj*z3**2 + zeta_conj*z2**2) + m1*(z3**3 + 3*z3**2*z2 - 6*z3*z2**2 - 2*z2**3) + m2*(z3**3 - 3*z3**2*z2 - 6*z3*z2**2 + 2*z2**3)) + z2**2*(-3*z2**2*(2*m3*z3*(-zeta + z3) + zeta_conj*(3*zeta*z3**2 + z3**3 - zeta*z2**2 - 3*z3*z2**2)) - m1*(zeta*(z3**3 + 3*z3**2*z2 - 6*z3*z2**2 - 2*z2**3) + z2*(z3**3 - 6*z3**2*z2 - 
				6*z3*z2**2 + z2**3)) - m2*(z2*(-z3**3 - 6*z3**2*z2 + 6*z3*z2**2 + z2**3) + zeta*(z3**3 - 3*z3**2*z2 - 6*z3*z2**2 + 2*z2**3))) + (2*m3*m2*zeta*z3**2 + 3*m2**2*zeta*z3**2 + 2*m3*m1*zeta*z3**2 + 6*m2*m1*zeta*z3**2 + 3*m1**2*zeta*z3**2 - 4*m3*m2*zeta*z3*z2 - 6*m2**2*zeta*z3*z2 + 4*m3*m1*zeta*z3*z2 + 6*m1**2*zeta*z3*z2 - 2*m3*m2*z3**2*z2 - 3*m2**2*z3**2*z2 + 
				2*m3*m1*z3**2*z2 + 3*m1**2*z3**2*z2 - 3*m3**2*zeta*z2**2 - 4*m3*m2*zeta*z2**2 - 4*m3*m1*zeta*z2**2 - 4*m2*m1*zeta*z2**2 - 3*m3**2*z3*z2**2 - 2*m3*m2*z3*z2**2 + 6*m2**2*z3*z2**2 - 2*m3*m1*z3*z2**2 + 6*m1**2*z3*z2**2 + 4*m3*m2*z2**3 - 4*m3*m1*z2**3 + 3*(m2 - m1)*z2**3*(-3*z3**2 + z2**2) + 3*z2**4*(3*zeta*z3**2 + z3**3 - zeta*z2**2 - 3*z3*z2**2) + 
				3*zeta_conj**2*z2**2*(-z3**3 + 3*z3*z2**2 + zeta*(-3*z3**2 + z2**2)) + zeta_conj*(6*m3*z2**2*(2*zeta*z3 + z3**2 - z2**2) + m2*(z2**3*(-4*zeta + z2) + 2*z3**3*(-zeta + z2) - 12*z3*z2**2*(-zeta + z2) + 3*z3**2*z2*(2*zeta + z2)) + m1*(3*z3**2*z2*(-2*zeta + z2) - 2*z3**3*(zeta + z2) + 12*z3*z2**2*(zeta + z2) + z2**3*(4*zeta + z2))))*z3_conj)

		coeff4 = (-3*m3*m2**2*zeta*z3**2 - 3*m2**3*zeta*z3**2 - 6*m3*m2*m1*zeta*z3**2 - 9*m2**2*m1*zeta*z3**2 - 3*m3*m1**2*zeta*z3**2 - 9*m2*m1**2*zeta*z3**2 - 3*m1**3*zeta*z3**2 + m3*m2**2*z3**3 + 2*m3*m2*m1*z3**3 + m3*m1**2*z3**3 + 3*m2**2*zeta*zeta_conj*z3**3 + 6*m2*m1*zeta*zeta_conj*z3**3 + 3*m1**2*zeta*zeta_conj*z3**3 + 3*m3**2*m2*zeta*z3*z2 + 
				12*m3*m2**2*zeta*z3*z2 + 9*m2**3*zeta*z3*z2 - 3*m3**2*m1*zeta*z3*z2 + 9*m2**2*m1*zeta*z3*z2 - 12*m3*m1**2*zeta*z3*z2 - 9*m2*m1**2*zeta*z3*z2 - 9*m1**3*zeta*z3*z2 - 2*m3**2*m2*z3**2*z2 - 2*m3*m2**2*z3**2*z2 + 3*m2**3*z3**2*z2 + 2*m3**2*m1*z3**2*z2 + 3*m2**2*m1*z3**2*z2 + 2*m3*m1**2*z3**2*z2 - 3*m2*m1**2*z3**2*z2 - 
				3*m1**3*z3**2*z2 - 6*m3*m2*zeta*zeta_conj*z3**2*z2 - 18*m2**2*zeta*zeta_conj*z3**2*z2 + 6*m3*m1*zeta*zeta_conj*z3**2*z2 + 18*m1**2*zeta*zeta_conj*z3**2*z2 + 2*m3*m2*zeta_conj*z3**3*z2 - 4*m2**2*zeta_conj*z3**3*z2 - 2*m3*m1*zeta_conj*z3**3*z2 + 4*m1**2*zeta_conj*z3**3*z2 + 3*m2*zeta*zeta_conj**2*z3**3*z2 - 3*m1*zeta*zeta_conj**2*z3**3*z2 + 3*m3**3*zeta*z2**2 + 
				6*m3**2*m2*zeta*z2**2 - 3*m2**3*zeta*z2**2 + 6*m3**2*m1*zeta*z2**2 + 12*m3*m2*m1*zeta*z2**2 + 3*m2**2*m1*zeta*z2**2 + 3*m2*m1**2*zeta*z2**2 - 3*m1**3*zeta*z2**2 - 3*m3**3*z3*z2**2 - 5*m3**2*m2*z3*z2**2 - 8*m3*m2**2*z3*z2**2 - 9*m2**3*z3*z2**2 - 5*m3**2*m1*z3*z2**2 - 4*m3*m2*m1*z3*z2**2 - 3*m2**2*m1*z3*z2**2 - 8*m3*m1**2*z3*z2**2 - 
				3*m2*m1**2*z3*z2**2 - 9*m1**3*z3*z2**2 - 9*m3**2*zeta*zeta_conj*z3*z2**2 - 24*m3*m2*zeta*zeta_conj*z3*z2**2 - 24*m3*m1*zeta*zeta_conj*z3*z2**2 - 36*m2*m1*zeta*zeta_conj*z3*z2**2 + 6*m3**2*zeta_conj*z3**2*z2**2 + 6*m3*m2*zeta_conj*z3**2*z2**2 + 12*m2**2*zeta_conj*z3**2*z2**2 + 6*m3*m1*zeta_conj*z3**2*z2**2 - 12*m2*m1*zeta_conj*z3**2*z2**2 + 12*m1**2*zeta_conj*z3**2*z2**2 + 
				9*m3*zeta*zeta_conj**2*z3**2*z2**2 + 18*m2*zeta*zeta_conj**2*z3**2*z2**2 + 18*m1*zeta*zeta_conj**2*z3**2*z2**2 - 3*m3*zeta_conj**2*z3**3*z2**2 + 3*m2*zeta_conj**2*z3**3*z2**2 + 3*m1*zeta_conj**2*z3**3*z2**2 - 3*zeta*zeta_conj**3*z3**3*z2**2 - 2*m3**2*m2*z2**3 + 3*m2**3*z2**3 + 2*m3**2*m1*z2**3 - m2**2*m1*z2**3 + m2*m1**2*z2**3 - 3*m1**3*z2**3 + 12*m3*m2*zeta*zeta_conj*z2**3 + 
				6*m2**2*zeta*zeta_conj*z2**3 - 12*m3*m1*zeta*zeta_conj*z2**3 - 6*m1**2*zeta*zeta_conj*z2**3 + 12*m3*m2*zeta_conj*z3*z2**3 + 6*m2**2*zeta_conj*z3*z2**3 - 12*m3*m1*zeta_conj*z3*z2**3 - 6*m1**2*zeta_conj*z3*z2**3 - 18*m2*zeta*zeta_conj**2*z3*z2**3 + 18*m1*zeta*zeta_conj**2*z3*z2**3 - 18*m2*zeta_conj**2*z3**2*z2**3 + 18*m1*zeta_conj**2*z3**2*z2**3 + 3*m3**2*zeta_conj*z2**4 - 
				2*m3*m2*zeta_conj*z2**4 - 5*m2**2*zeta_conj*z2**4 - 2*m3*m1*zeta_conj*z2**4 + 2*m2*m1*zeta_conj*z2**4 - 5*m1**2*zeta_conj*z2**4 - 9*m3*zeta*zeta_conj**2*z2**4 - 3*m2*zeta*zeta_conj**2*z2**4 - 3*m1*zeta*zeta_conj**2*z2**4 - 9*m3*zeta_conj**2*z3*z2**4 + 9*zeta*zeta_conj**3*z3*z2**4 + 9*zeta_conj**3*z3**2*z2**4 + 3*m2*zeta_conj**2*z2**5 - 3*m1*zeta_conj**2*z2**5 - zeta_conj**3*z2**6 - 
				(m2 - m1)*z2**2*(3*zeta_conj*z3*z2*(z3**2 - 3*z2**2) + m2*(-z3**3 - 6*z3**2*z2 + 6*z3*z2**2 + z2**3) + (z3 + z2)*(3*m3*z2*(-z3 + z2) + m1*(z3**2 - 7*z3*z2 + z2**2))) + z2**3*(-(m2*(zeta*(z3**3 + 6*z3**2*z2 - 6*z3*z2**2 - z2**3) + z2*(2*z3**3 - 6*z3**2*z2 - 3*z3*z2**2 + z2**3))) + m1*(zeta*(z3**3 - 6*z3**2*z2 - 6*z3*z2**2 + z2**3) + 
				z2*(-2*z3**3 - 6*z3**2*z2 + 3*z3*z2**2 + z2**3)) + z2*(-3*m3*(zeta - z3)*(z3**2 - z2**2) + zeta_conj*(3*zeta*z3**3 - 9*zeta*z3*z2**2 - 9*z3**2*z2**2 + z2**4))) + (-(m1**2*(zeta + z2)*(z3**3 + 6*z3**2*z2 - 2*z2**3)) - m2**2*(zeta - z2)*(z3**3 - 6*z3**2*z2 + 2*z2**3) + z2**2*(3*m3**2*(zeta*z3 - z2**2) + 6*m3*zeta_conj*(2*z3*z2**2 + zeta*(-z3**2 + z2**2)) + 
				(zeta_conj**2 - z2**2)*(-9*z3**2*z2**2 + z2**4 + 3*zeta*(z3**3 - 3*z3*z2**2))) + m1*z2*(2*zeta*zeta_conj*(z3**3 - 6*z3**2*z2 - 6*z3*z2**2 + z2**3) + m3*(z2*(z3**2 + 8*z3*z2 + z2**2) + zeta*(-2*z3**2 + 8*z3*z2 + 4*z2**2)) + z2*(-3*z3**3*z2 + 9*z3*z2**3 - zeta_conj*(z3**3 + 12*z3**2*z2 + 3*z3*z2**2 - 2*z2**3))) + m2*(-2*m1*zeta*z3*(z3**2 - 6*z2**2) + 
				z2*(-2*zeta*zeta_conj*(z3**3 + 6*z3**2*z2 - 6*z3*z2**2 - z2**3) + m3*(2*zeta*(z3**2 + 4*z3*z2 - 2*z2**2) + z2*(z3**2 - 8*z3*z2 + z2**2)) - z2*(-3*z3**3*z2 + 9*z3*z2**3 + zeta_conj*(z3**3 - 12*z3**2*z2 + 3*z3*z2**2 + 2*z2**3))))) *z3_conj)

		coeff3 = (m1**3*zeta*z3**3 + 6*m3*m1**2*zeta*z3**2*z2 + 9*m1**3*zeta*z3**2*z2 - 2*m3*m1**2*z3**3*z2 + m1**3*z3**3*z2 - 6*m1**2*zeta*zeta_conj*z3**3*z2 - 6*m3**2*m1*zeta*z3*z2**2 + 9*m1**3*zeta*z3*z2**2 + 4*m3**2*m1*z3**2*z2**2 + 4*m3*m1**2*z3**2*z2**2 + 9*m1**3*z3**2*z2**2 + 12*m3*m1*zeta*zeta_conj*z3**2*z2**2 - 
				4*m3*m1*zeta_conj*z3**3*z2**2 - 4*m1**2*zeta_conj*z3**3*z2**2 - 6*m1*zeta*zeta_conj**2*z3**3*z2**2 - 6*m3**2*m1*zeta*z2**3 - 6*m3*m1**2*zeta*z2**3 + m1**3*zeta*z2**3 + 2*m3**2*m1*z3*z2**3 + 2*m3*m1**2*z3*z2**3 + 9*m1**3*z3*z2**3 + 24*m3*m1*zeta*zeta_conj*z3*z2**3 + 18*m1**2*zeta*zeta_conj*z3*z2**3 + 6*m1**2*zeta_conj*z3**2*z2**3 - 
				18*m1*zeta*zeta_conj**2*z3**2*z2**3 + 2*m1**2*z3**3*z2**3 - 6*m1*zeta_conj**2*z3**3*z2**3 - 2*m3**2*m1*z2**4 - 4*m3*m1**2*z2**4 + m1**3*z2**4 - 9*m3**2*zeta*zeta_conj*z2**4 - 6*m3*m1*zeta*zeta_conj*z2**4 + 3*m1**2*zeta*zeta_conj*z2**4 + 3*m3**2*zeta_conj*z3*z2**4 + 6*m3*m1*zeta_conj*z3*z2**4 + 15*m1**2*zeta_conj*z3*z2**4 + 18*m3*zeta*zeta_conj**2*z3*z2**4 + 
				9*m1*zeta*zeta_conj**2*z3*z2**4 + 6*m1**2*z3**2*z2**4 - 9*zeta*zeta_conj**3*z3**2*z2**4 + 2*m1*zeta*z3**3*z2**4 - 3*zeta_conj**3*z3**3*z2**4 - 4*m3*m1*zeta_conj*z2**5 + 2*m1**2*zeta_conj*z2**5 + 3*m1*zeta*zeta_conj**2*z2**5 - 6*m3*m1*z3*z2**5 - 3*m1**2*z3*z2**5 + 9*m1*zeta_conj**2*z3*z2**5 + 6*m1*zeta*z3**2*z2**5 + 9*m1*zeta_conj*z3**2*z2**5 + 2*m1*z3**3*z2**5 - 
				m1**2*z2**6 - 2*m3*zeta_conj**2*z2**6 + m1*zeta_conj**2*z2**6 + zeta*zeta_conj**3*z2**6 - 6*m3*zeta*z3*z2**6 - 3*m1*zeta*z3*z2**6 + 3*zeta_conj**3*z3*z2**6 + 6*m3*z3**2*z2**6 - 3*m1*z3**2*z2**6 + 9*zeta*zeta_conj*z3**2*z2**6 + 3*zeta_conj*z3**3*z2**6 - m1*zeta*z2**7 - m1*zeta_conj*z2**7 - 3*m1*z3*z2**7 - zeta*zeta_conj*z2**8 - 3*zeta_conj*z3*z2**8 + 
				m2**3*(zeta - z2)*(z3**3 - 9*z3**2*z2 + 9*z3*z2**2 - z2**3) + m2*(m1**2*(3*zeta + z2)*(z3**3 + 3*z3**2*z2 - 3*z3*z2**2 - z2**3) + 2*m1*z2**2*(2*zeta_conj*z3**3 + 4*m3*z3*(-3*zeta + z3) - 3*zeta_conj*z3*z2**2 - 6*z3**2*z2**2 + z2**4 + 3*zeta*zeta_conj*(6*z3**2 - z2**2)) + z2**2*(-2*m3**2*(3*zeta - 2*z3 - z2)*(z3 - z2) + 6*zeta_conj**2*z3**3*z2 - 
				9*zeta_conj**2*z3*z2**3 - 9*zeta_conj*z3**2*z2**3 - 2*z3**3*z2**3 + zeta_conj**2*z2**4 - 3*z3**2*z2**4 + zeta_conj*z2**5 + 3*z3*z2**5 - zeta*(3*zeta_conj**2 - z2**2)*(2*z3**3 - 6*z3**2*z2 - 3*z3*z2**2 + z2**3) + 2*m3*(-2*zeta_conj*z3**3 + 3*zeta_conj*z3*z2**2 + 2*zeta_conj*z2**3 + 3*z3*z2**3 + 3*zeta*zeta_conj*(2*z3**2 - 4*z3*z2 - z2**2)))) + 
				m2**2*(m1*(3*zeta - z2)*(z3**3 - 3*z3**2*z2 - 3*z3*z2**2 + z2**3) - z2*(2*m3*(3*zeta - z3 - 2*z2)*(z3**2 - z2**2) - 3*zeta*zeta_conj*(2*z3**3 - 6*z3*z2**2 + z2**3) + z2*(z2*(2*z3**3 - 6*z3**2*z2 - 3*z3*z2**2 + z2**3) + zeta_conj*(4*z3**3 + 6*z3**2*z2 - 15*z3*z2**2 + 2*z2**3)))) - z2*(m2**2*(zeta - z2)*(2*z3**3 - 6*z3*z2**2 + z2**3) + 
				m1**2*(zeta + z2)*(-2*z3**3 + 6*z3*z2**2 + z2**3) + z2**3*(-3*m3**2*(zeta + z3) + 2*m3*zeta_conj*(6*zeta*z3 + 3*z3**2 - z2**2) + (zeta_conj**2 - z2**2)*(-3*z3**3 + 3*z3*z2**2 + zeta*(-9*z3**2 + z2**2))) + m2*z2*(-4*zeta*zeta_conj*z3**3 + 12*zeta*zeta_conj*z3**2*z2 + 4*zeta_conj*z3**3*z2 + 6*zeta*zeta_conj*z3*z2**2 - 3*zeta_conj*z3**2*z2**2 - 2*zeta*zeta_conj*z2**3 - 
				6*zeta_conj*z3*z2**3 - 9*z3**2*z2**3 + zeta_conj*z2**4 + z2**5 + 2*m1*zeta*(6*z3**2 - z2**2) + 2*m3*(zeta*(2*z3**2 - 4*z3*z2 - z2**2) + z2*(-2*z3**2 + z3*z2 + z2**2))) + m1*z2*(2*zeta*zeta_conj*(-2*z3**3 - 6*z3**2*z2 + 3*z3*z2**2 + z2**3) + 2*m3*(z2*(2*z3**2 + z3*z2 - z2**2) + zeta*(2*z3**2 + 4*z3*z2 - z2**2)) + z2*(9*z3**2*z2**2 - 
				z2**4 + zeta_conj*(-4*z3**3 - 3*z3**2*z2 + 6*z3*z2**2 + z2**3))))*z3_conj) 

		coeff2 = (z2*(-3*m1**3*zeta*z3**3 - 9*m1**3*zeta*z3**2*z2 - 3*m1**3*z3**3*z2 + 6*m3**2*m1*zeta*z3*z2**2 + 12*m3*m1**2*zeta*z3*z2**2 - 3*m1**3*zeta*z3*z2**2 - 4*m3**2*m1*z3**2*z2**2 - 4*m3*m1**2*z3**2*z2**2 - 9*m1**3*z3**2*z2**2 - 12*m3*m1*zeta*zeta_conj*z3**2*z2**2 - 18*m1**2*zeta*zeta_conj*z3**2*z2**2 + 4*m3*m1*zeta_conj*z3**3*z2**2 - 
				2*m1**2*zeta_conj*z3**3*z2**2 + 6*m1*zeta*zeta_conj**2*z3**3*z2**2 - 3*m3**3*zeta*z2**3 - 3*m3**2*m1*zeta*z2**3 + 3*m3*m1**2*zeta*z2**3 + 3*m3**3*z3*z2**3 + 4*m3**2*m1*z3*z2**3 + 7*m3*m1**2*z3*z2**3 - 3*m1**3*z3*z2**3 + 9*m3**2*zeta*zeta_conj*z3*z2**3 + 12*m3*m1*zeta*zeta_conj*z3*z2**3 - 9*m1**2*zeta*zeta_conj*z3*z2**3 - 6*m3**2*zeta_conj*z3**2*z2**3 - 
				6*m3*m1*zeta_conj*z3**2*z2**3 - 15*m1**2*zeta_conj*z3**2*z2**3 - 9*m3*zeta*zeta_conj**2*z3**2*z2**3 - 9*m1*zeta*zeta_conj**2*z3**2*z2**3 - 2*m1**2*z3**3*z2**3 + 3*m3*zeta_conj**2*z3**3*z2**3 + 3*zeta*zeta_conj**3*z3**3*z2**3 - m3**2*m1*z2**4 + 2*m3*m1**2*z2**4 + 6*m3*m1*zeta*zeta_conj*z2**4 + 6*m3*m1*zeta_conj*z3*z2**4 - 6*m1**2*zeta_conj*z3*z2**4 - 9*m1*zeta*zeta_conj**2*z3*z2**4 + 
				3*m3*m1*z3**2*z2**4 + 3*m1**2*z3**2*z2**4 - 9*m1*zeta_conj**2*z3**2*z2**4 - 2*m1*zeta*z3**3*z2**4 - 3*m1*zeta_conj*z3**3*z2**4 - m3**2*zeta_conj*z2**5 + 2*m3*m1*zeta_conj*z2**5 + 3*m3*zeta*zeta_conj**2*z2**5 + 3*m1**2*z3*z2**5 + 3*m3*zeta_conj**2*z3*z2**5 - 3*m1*zeta_conj**2*z3*z2**5 - 3*zeta*zeta_conj**3*z3*z2**5 + 3*m3*zeta*z3**2*z2**5 + 3*m1*zeta*z3**2*z2**5 - 
				3*zeta_conj**3*z3**2*z2**5 - 3*m3*z3**3*z2**5 + m1*z3**3*z2**5 - 3*zeta*zeta_conj*z3**3*z2**5 - m3*m1*z2**6 + 3*m1*zeta*z3*z2**6 + 3*m1*zeta_conj*z3*z2**6 + 3*m1*z3**2*z2**6 - m3*zeta*z2**7 + m3*z3*z2**7 + 3*zeta*zeta_conj*z3*z2**7 + 3*zeta_conj*z3**2*z2**7 + 3*m2**3*z3*(zeta - z2)*(z3**2 - 3*z3*z2 + z2**2) + m2**2*(m1*z3*(3*zeta - z2)*(z3**2 + 3*z3*z2 - 
				3*z2**2) + z2**2*(-(m3*(3*zeta - z3 - 2*z2)*(4*z3 - z2)) + z3*(18*zeta*zeta_conj*z3 + 2*zeta_conj*z3**2 - 9*zeta*zeta_conj*z2 - 15*zeta_conj*z3*z2 - 2*z3**2*z2 + 6*zeta_conj*z2**2 - 3*z3*z2**2 + 3*z2**3))) + m2*(m1**2*z3*(3*zeta + z2)*(-z3**2 + 3*z3*z2 + 3*z2**2) + 2*m1*z2*(m3*(3*zeta - z3)*(2*z3**2 - z2**2) + z3*(z2**2*(3*zeta_conj*z3 + 2*z3**2 - 3*z2**2) + 
				zeta*zeta_conj*(-6*z3**2 + 9*z2**2))) + z2**2*(-(m3**2*(3*zeta - 2*z3 - z2)*(2*z3 + z2)) + m3*(-3*z3**2*z2**2 + z2**4 + 6*zeta*zeta_conj*(2*z3**2 + 2*z3*z2 - z2**2) - 2*zeta_conj*(2*z3**3 + 3*z3**2*z2 + 3*z3*z2**2 - z2**3)) + z3*(zeta*(2*z3**2 + 3*z3*z2 - 3*z2**2)*(-3*zeta_conj**2 + z2**2) + z2**2*(zeta_conj**2*(9*z3 - 3*z2) + z3*(z3 - 3*z2)*z2 + 
				3*zeta_conj*(z3**2 - z2**2))))) + z2*(3*m2**2*z3*(zeta - z2)*z2*(-2*z3 + z2) + z2*(m3**2*(-3*zeta*z3*z2 + z2**3) + m3*(m1*(zeta*(4*z3**2 - 4*z3*z2 - 2*z2**2) + z2*(z3**2 - 4*z3*z2 - z2**2)) - 2*zeta_conj*z2*(2*z3*z2**2 + zeta*(-3*z3**2 + z2**2))) + z3*(3*m1**2*(zeta + z2)*(2*z3 + z2) + 3*z2*(zeta_conj**2 - z2**2)*(z3*z2**2 + zeta*(-z3**2 + z2**2)) + 
				m1*(zeta*zeta_conj*(-4*z3**2 + 6*z3*z2 + 6*z2**2) + z2*(-(zeta_conj*z3**2) + 6*zeta_conj*z3*z2 + 3*z3**2*z2 + 3*zeta_conj*z2**2 - 3*z2**3)))) + m2*(m1*zeta*(4*z3**3 - 6*z3*z2**2) + z2*(m3*(z2*(z3**2 + 4*z3*z2 - z2**2) + zeta*(-4*z3**2 - 4*z3*z2 + 2*z2**2)) + z3*(2*zeta*zeta_conj*(2*z3**2 + 3*z3*z2 - 3*z2**2) + z2*(-3*z3**2*z2 + 3*z2**3 - zeta_conj*(z3**2 + 6*z3*z2 - 3*z2**2))))))*z3_conj))

		coeff1 = (z2**2*((m2 - m1)*z3*z2**3*(m2*z3*(z3 - 3*z2) + (-2*m3 + 3*zeta_conj*z3)*z2**2 + m1*z3*(z3 + 3*z2)) - z3*z2**4*((-2*m3*(zeta - z3) + zeta_conj*z3*(3*zeta + z3))*z2**2 + m2*z3*(zeta*(z3 - 3*z2) - z3*z2) + m1*z3*(z3*z2 + zeta*(z3 + 3*z2))) - (m2*z3 - m1*z3 + (m3 - zeta_conj*z3)*z2)*(zeta_conj**2*z3*(3*zeta + z3)*z2**3 + 
				z3*(2*m2*m1*(-3*zeta + z3)*z2 + 3*m2**2*(zeta - z2)*(-z3 + z2) + 3*m1**2*(zeta + z2)*(z3 + z2)) - m3*z2*(m1*(3*zeta - 2*z3 + z2)*(z3 + z2) - m2*(z3 - z2)*(-3*zeta + 2*z3 + z2)) + zeta_conj*z2*(m3*(-3*zeta + z3)*z2**2 + m1*z3*(3*zeta*z3 + 6*zeta*z2 + 2*z3*z2 + 3*z2**2) + m2*z3*(3*zeta*(z3 - 2*z2) + z2*(-2*z3 + 3*z2)))) - 
				z2*(m2**2*z3**2*(2*z3 - 3*z2)*(-zeta + z2) + m1**2*z3**2*(zeta + z2)*(2*z3 + 3*z2) + z2**3*(m3**2*(zeta + z3) - 2*m3*zeta_conj*z3*(2*zeta + z3) + z3**2*(3*zeta + z3)*(zeta_conj**2 - z2**2)) + m1*z3*z2*(-2*m3*(z2*(z3 + z2) + zeta*(z3 + 2*z2)) + z3*(2*zeta*zeta_conj*(z3 + 3*z2) + z2*(2*zeta_conj*z3 + 3*zeta_conj*z2 - 3*z2**2))) + 
				m2*z3*z2*(-2*m3*(zeta*(z3 - 2*z2) + z2*(-z3 + z2)) + z3*(-6*m1*zeta + 2*zeta*zeta_conj*(z3 - 3*z2) + z2*(-2*zeta_conj*z3 + 3*zeta_conj*z2 + 3*z2**2))))*z3_conj))

		coeff0 = (z2**3*(-(z3*z2**2*(-(z3*z2**2*((-m2 + m1)*zeta*z3 + zeta*zeta_conj*z3*z2 + m3*(-zeta + z3)*z2)) - (-(m2*z3) + m1*z3 - m3*z2 + zeta_conj*z3*z2)*(-(m2*zeta*z3) + (-(m3*zeta) + m3*z3 + zeta*zeta_conj*z3)*z2 + m1*z3*(zeta + z2)))) + (-(m2*z3) + m1*z3 - m3*z2 + zeta_conj*z3*z2)*(-(z3*z2**2*(m1*zeta*z3 + (-(m3*zeta) + m3*z3 + zeta*zeta_conj*z3)*z2 + m2*z3*(-zeta + z2))) +
				(m2*z3 - m1*z3 + (m3 - zeta_conj*z3)*z2)*((-(m3*zeta) + m3*z3 + zeta*zeta_conj*z3)*z2 + m2*z3*(-zeta + z2) + m1*z3*(zeta + z2))) - z3*z2*((-m2 + m1)*z3**2*z2**3 + zeta*z3**2*z2**4 + (m2*z3 - m1*z3 + (m3 - zeta_conj*z3)*z2)*(zeta*(-m3 + zeta_conj*z3)*z2 + m2*z3*(-zeta + z2) + m1*z3*(zeta + z2)))*z3_conj))

	elif calc == 'body2':

		coeff10 = (zeta_conj*(zeta_conj - z1)*(zeta_conj - z3_conj))

		coeff9 = (-(zeta_conj*(m3*(-2*zeta_conj + z1) + m2*(-2*zeta_conj + z1) + (zeta_conj - z1)*(-2*m1 + zeta_conj*(zeta + 3*(z3 + z1))))) + (-(m2*zeta_conj) + m3*(-2*zeta_conj + z1) + (zeta_conj - z1)*(-m1 + zeta_conj*(zeta + 3*(z3 + z1))))*z3_conj)

		coeff8 = (zeta_conj*((m3 + m2 + m1)**2 + 3*zeta_conj**2*(z3**2 + 3*z3*z1 + z1**2 + zeta*(z3 + z1)) - 3*zeta_conj*(m1*(zeta + 2*z3 + z1) + m3*(zeta + z3 + 2*z1) + m2*(zeta + 2*(z3 + z1)))) - z1*(m1*(m3 + m2 + m1) + 3*zeta_conj**2*(z3**2 + 3*z3*z1 + z1**2 + zeta*(z3 + z1)) - zeta_conj*(2*m1*(zeta + 3*z3 + 2*z1) + m3*(2*zeta + z3 + 3*z1) + 
				m2*(2*zeta + 3*(z3 + z1)))) - (m3*(m3 + m2 + m1) + 3*zeta_conj**2*(z3**2 + 3*z3*z1 + z1**2 + zeta*(z3 + z1)) - zeta_conj*(m1*(2*zeta + 3*z3 + z1) + 2*m3*(zeta + 2*z3 + 3*z1) + m2*(2*zeta + 3*(z3 + z1))) + z1*(m2*zeta + m1*zeta + 3*m1*z3 + 2*m1*z1 + m3*(zeta + 2*z3 + 3*z1) - 3*zeta_conj*(z3**2 + 3*z3*z1 + z1**2 + zeta*(z3 + z1))))*z3_conj)

		coeff7 = (z1*(m3**2*zeta + 2*m3*m2*zeta + m2**2*zeta + 2*m3*m1*zeta + 2*m2*m1*zeta + m1**2*zeta - m3**2*z3 - m3*m2*z3 + m3*m1*z3 + 3*m2*m1*z3 + 3*m1**2*z3 + 2*m3*m1*z1 + 2*m2*m1*z1 + m1**2*z1 + zeta_conj**2*(z3**3 + 9*z3*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 3*z3**2*(zeta + 3*z1)) + zeta_conj*(-2*m1*(3*zeta*z3 + 
				3*z3**2 + 2*zeta*z1 + 6*z3*z1 + z1**2) - 3*m2*(z3**2 + 3*z3*z1 + z1**2 + 2*zeta*(z3 + z1)) + m3*(z3**2 - 3*z1*(2*zeta + z1) - z3*(4*zeta + 3*z1)))) - zeta_conj*(zeta_conj**2*(z3**3 + 9*z3*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 3*z3**2*(zeta + 3*z1)) - (m3 + m2 + m1)*(m1*(-3*zeta - 3*z3 + z1) - 3*m2*(zeta + z3 + z1) + 
				m3*(z3 - 3*(zeta + z1))) - 3*zeta_conj*(m3*(2*zeta*z3 + 3*zeta*z1 + 3*z3*z1 + 2*z1**2) + m1*(2*z3**2 + 2*zeta*z1 + 3*z3*(zeta + z1)) + m2*(3*zeta*(z3 + z1) + 2*(z3**2 + 3*z3*z1 + z1**2)))) + (m3**2*zeta + 2*m3*m2*zeta + m2**2*zeta + 2*m3*m1*zeta + 2*m2*m1*zeta + m1**2*zeta + m3**2*z3 + 2*m3*m2*z3 + 2*m3*m1*z3 + 
				3*m3**2*z1 + 3*m3*m2*z1 + m3*m1*z1 - m2*m1*z1 - m1**2*z1 + zeta_conj**2*(z3**3 + 9*z3*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 3*z3**2*(zeta + 3*z1)) - zeta_conj*(m1*(6*zeta*z3 + 3*z3**2 + 4*zeta*z1 + 3*z3*z1 - z1**2) + 3*m2*(z3**2 + 3*z3*z1 + z1**2 + 2*zeta*(z3 + z1)) + 2*m3*(z3**2 + 3*z1*(zeta + z1) + 2*z3*(zeta + 3*z1))) + 
				z1*(3*m2*zeta*z3 + 3*m1*zeta*z3 + 3*m1*z3**2 + 3*m2*zeta*z1 + 2*m1*zeta*z1 + 6*m1*z3*z1 + m1*z1**2 + m3*(z3**2 + 3*z1*(zeta + z1) + 2*z3*(zeta + 3*z1)) - zeta_conj*(z3**3 + 9*z3*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 3*z3**2*(zeta + 3*z1))))*z3_conj)

		coeff6 = (-(m3**3*zeta) - 3*m3**2*m2*zeta - 3*m3*m2**2*zeta - m2**3*zeta - 3*m3**2*m1*zeta - 6*m3*m2*m1*zeta - 3*m2**2*m1*zeta - 3*m3*m1**2*zeta - 3*m2*m1**2*zeta - m1**3*zeta + m3**3*z3 + 2*m3**2*m2*z3 + m3*m2**2*z3 + 2*m3**2*m1*z3 + 2*m3*m2*m1*z3 + m3*m1**2*z3 + 3*m3**2*zeta*zeta_conj*z3 + 12*m3*m2*zeta*zeta_conj*z3 + 
				9*m2**2*zeta*zeta_conj*z3 + 12*m3*m1*zeta*zeta_conj*z3 + 18*m2*m1*zeta*zeta_conj*z3 + 9*m1**2*zeta*zeta_conj*z3 - 2*m3**2*zeta_conj*z3**2 - 2*m3*m2*zeta_conj*z3**2 + 3*m2**2*zeta_conj*z3**2 - 2*m3*m1*zeta_conj*z3**2 + 6*m2*m1*zeta_conj*z3**2 + 3*m1**2*zeta_conj*z3**2 - 3*m3*zeta*zeta_conj**2*z3**2 - 9*m2*zeta*zeta_conj**2*z3**2 - 9*m1*zeta*zeta_conj**2*z3**2 + 
				m3*zeta_conj**2*z3**3 - 2*m2*zeta_conj**2*z3**3 - 2*m1*zeta_conj**2*z3**3 + zeta*zeta_conj**3*z3**3 + m3**2*m1*z1 + 2*m3*m2*m1*z1 + m2**2*m1*z1 + 2*m3*m1**2*z1 + 2*m2*m1**2*z1 + m1**3*z1 + 9*m3**2*zeta*zeta_conj*z1 + 18*m3*m2*zeta*zeta_conj*z1 + 9*m2**2*zeta*zeta_conj*z1 + 12*m3*m1*zeta*zeta_conj*z1 + 12*m2*m1*zeta*zeta_conj*z1 + 
				3*m1**2*zeta*zeta_conj*z1 - 3*m3**2*zeta_conj*z3*z1 + 6*m3*m2*zeta_conj*z3*z1 + 9*m2**2*zeta_conj*z3*z1 + 6*m2*m1*zeta_conj*z3*z1 - 3*m1**2*zeta_conj*z3*z1 - 18*m3*zeta*zeta_conj**2*z3*z1 - 27*m2*zeta*zeta_conj**2*z3*z1 - 18*m1*zeta*zeta_conj**2*z3*z1 - 18*m2*zeta_conj**2*z3**2*z1 - 9*m1*zeta_conj**2*z3**2*z1 + 9*zeta*zeta_conj**3*z3**2*z1 + 
				3*zeta_conj**3*z3**3*z1 + 3*m3**2*zeta_conj*z1**2 + 6*m3*m2*zeta_conj*z1**2 + 3*m2**2*zeta_conj*z1**2 - 2*m3*m1*zeta_conj*z1**2 - 2*m2*m1*zeta_conj*z1**2 - 2*m1**2*zeta_conj*z1**2 - 9*m3*zeta*zeta_conj**2*z1**2 - 9*m2*zeta*zeta_conj**2*z1**2 - 3*m1*zeta*zeta_conj**2*z1**2 - 9*m3*zeta_conj**2*z3*z1**2 - 18*m2*zeta_conj**2*z3*z1**2 + 9*zeta*zeta_conj**3*z3*z1**2 + 
				9*zeta_conj**3*z3**2*z1**2 - 2*m3*zeta_conj**2*z1**3 - 2*m2*zeta_conj**2*z1**3 + m1*zeta_conj**2*z1**3 + zeta*zeta_conj**3*z1**3 + 3*zeta_conj**3*z3*z1**3 + z1*(-3*m2**2*zeta*z3 - 6*m2*m1*zeta*z3 - 3*m1**2*zeta*z3 - 3*m2*m1*z3**2 - 3*m1**2*z3**2 - 3*m2**2*zeta*z1 - 4*m2*m1*zeta*z1 - m1**2*zeta*z1 - 6*m2*m1*z3*z1 - 3*m1**2*z3*z1 - 
				m2*m1*z1**2 + m3**2*(-zeta + z3)*(z3 + 3*z1) - zeta_conj**2*(zeta*z1**3 + 9*z3**2*z1*(zeta + z1) + 3*z3*z1**2*(3*zeta + z1) + z3**3*(zeta + 3*z1)) + m3*(m2*(-2*zeta + z3)*(2*z3 + 3*z1) + m1*(z3**2 - 2*z3*z1 - z1**2 - 4*zeta*(z3 + z1))) + zeta_conj*(m3*(-z3**3 + z3**2*(2*zeta - 3*z1) + 3*z3*z1*(4*zeta + z1) + z1**2*(6*zeta + z1)) + 
				2*m1*(z3**3 + zeta*z1**2 + 3*z3*z1*(2*zeta + z1) + 3*z3**2*(zeta + 2*z1)) + m2*(z3**3 + 9*z3**2*z1 + 9*z3*z1**2 + z1**3 + 6*zeta*(z3**2 + 3*z3*z1 + z1**2)))) - (m3**2*zeta*z3 + 4*m3*m2*zeta*z3 + 3*m2**2*zeta*z3 + 4*m3*m1*zeta*z3 + 6*m2*m1*zeta*z3 + 3*m1**2*zeta*z3 + m3*m2*z3**2 + m3*m1*z3**2 + 3*m3**2*zeta*z1 + 
				6*m3*m2*zeta*z1 + 3*m2**2*zeta*z1 + 4*m3*m1*zeta*z1 + 4*m2*m1*zeta*z1 + m1**2*zeta*z1 + 3*m3**2*z3*z1 + 6*m3*m2*z3*z1 + 2*m3*m1*z3*z1 - 3*m2*m1*z3*z1 - 3*m1**2*z3*z1 + 3*m3**2*z1**2 + 3*m3*m2*z1**2 - m3*m1*z1**2 - 2*m2*m1*z1**2 - m1**2*z1**2 + zeta_conj**2*(zeta*z1**3 + 9*z3**2*z1*(zeta + z1) + 
				3*z3*z1**2*(3*zeta + z1) + z3**3*(zeta + 3*z1)) + z1*(m3*zeta*z3**2 + 3*m2*zeta*z3**2 + 6*m3*zeta*z3*z1 + 9*m2*zeta*z3*z1 + 3*m3*z3**2*z1 + 3*m3*zeta*z1**2 + 3*m2*zeta*z1**2 + 6*m3*z3*z1**2 + m3*z1**3 + m1*(z3**3 + zeta*z1**2 + 3*z3*z1*(2*zeta + z1) + 3*z3**2*(zeta + 2*z1)) - zeta_conj*(zeta*z1**3 + 9*z3**2*z1*(zeta + z1) + 
				3*z3*z1**2*(3*zeta + z1) + z3**3*(zeta + 3*z1))) - zeta_conj*(m1*(z3**3 - 3*z3*z1*(-4*zeta + z1) - z1**2*(-2*zeta + z1) + 3*z3**2*(2*zeta + z1)) + 2*m3*(6*z3*z1*(zeta + z1) + z1**2*(3*zeta + z1) + z3**2*(zeta + 3*z1)) + m2*(z3**3 + 9*z3**2*z1 + 9*z3*z1**2 + z1**3 + 6*zeta*(z3**2 + 3*z3*z1 + z1**2)))) *z3_conj)

		coeff5 = (3*m3**2*m2*zeta*z3 + 6*m3*m2**2*zeta*z3 + 3*m2**3*zeta*z3 + 3*m3**2*m1*zeta*z3 + 12*m3*m2*m1*zeta*z3 + 9*m2**2*m1*zeta*z3 + 6*m3*m1**2*zeta*z3 + 9*m2*m1**2*zeta*z3 + 3*m1**3*zeta*z3 - 2*m3**2*m2*z3**2 - 2*m3*m2**2*z3**2 - 2*m3**2*m1*z3**2 - 4*m3*m2*m1*z3**2 - 2*m3*m1**2*z3**2 - 6*m3*m2*zeta*zeta_conj*z3**2 - 
				9*m2**2*zeta*zeta_conj*z3**2 - 6*m3*m1*zeta*zeta_conj*z3**2 - 18*m2*m1*zeta*zeta_conj*z3**2 - 9*m1**2*zeta*zeta_conj*z3**2 + 2*m3*m2*zeta_conj*z3**3 - m2**2*zeta_conj*z3**3 + 2*m3*m1*zeta_conj*z3**3 - 2*m2*m1*zeta_conj*z3**3 - m1**2*zeta_conj*z3**3 + 3*m2*zeta*zeta_conj**2*z3**3 + 3*m1*zeta*zeta_conj**2*z3**3 + 3*m3**3*zeta*z1 + 9*m3**2*m2*zeta*z1 + 9*m3*m2**2*zeta*z1 + 
				3*m2**3*zeta*z1 + 6*m3**2*m1*zeta*z1 + 12*m3*m2*m1*zeta*z1 + 6*m2**2*m1*zeta*z1 + 3*m3*m1**2*zeta*z1 + 3*m2*m1**2*zeta*z1 - 3*m3**3*z3*z1 - 6*m3**2*m2*z3*z1 - 3*m3*m2**2*z3*z1 - 5*m3**2*m1*z3*z1 - 8*m3*m2*m1*z3*z1 - 3*m2**2*m1*z3*z1 - 5*m3*m1**2*z3*z1 - 6*m2*m1**2*z3*z1 - 3*m1**3*z3*z1 - 9*m3**2*zeta*zeta_conj*z3*z1 - 
				36*m3*m2*zeta*zeta_conj*z3*z1 - 27*m2**2*zeta*zeta_conj*z3*z1 - 24*m3*m1*zeta*zeta_conj*z3*z1 - 36*m2*m1*zeta*zeta_conj*z3*z1 - 9*m1**2*zeta*zeta_conj*z3*z1 + 6*m3**2*zeta_conj*z3**2*z1 + 6*m3*m2*zeta_conj*z3**2*z1 - 9*m2**2*zeta_conj*z3**2*z1 + 6*m3*m1*zeta_conj*z3**2*z1 - 6*m2*m1*zeta_conj*z3**2*z1 + 3*m1**2*zeta_conj*z3**2*z1 + 9*m3*zeta*zeta_conj**2*z3**2*z1 + 
				27*m2*zeta*zeta_conj**2*z3**2*z1 + 18*m1*zeta*zeta_conj**2*z3**2*z1 - 3*m3*zeta_conj**2*z3**3*z1 + 6*m2*zeta_conj**2*z3**3*z1 + 3*m1*zeta_conj**2*z3**3*z1 - 3*zeta*zeta_conj**3*z3**3*z1 - 2*m3**2*m1*z1**2 - 4*m3*m2*m1*z1**2 - 2*m2**2*m1*z1**2 - 2*m3*m1**2*z1**2 - 2*m2*m1**2*z1**2 - 9*m3**2*zeta*zeta_conj*z1**2 - 18*m3*m2*zeta*zeta_conj*z1**2 - 9*m2**2*zeta*zeta_conj*z1**2 - 
				6*m3*m1*zeta*zeta_conj*z1**2 - 6*m2*m1*zeta*zeta_conj*z1**2 + 3*m3**2*zeta_conj*z3*z1**2 - 6*m3*m2*zeta_conj*z3*z1**2 - 9*m2**2*zeta_conj*z3*z1**2 + 6*m3*m1*zeta_conj*z3*z1**2 + 6*m2*m1*zeta_conj*z3*z1**2 + 6*m1**2*zeta_conj*z3*z1**2 + 18*m3*zeta*zeta_conj**2*z3*z1**2 + 27*m2*zeta*zeta_conj**2*z3*z1**2 + 9*m1*zeta*zeta_conj**2*z3*z1**2 + 18*m2*zeta_conj**2*z3**2*z1**2 -
				9*zeta*zeta_conj**3*z3**2*z1**2 - 3*zeta_conj**3*z3**3*z1**2 - m3**2*zeta_conj*z1**3 - 2*m3*m2*zeta_conj*z1**3 - m2**2*zeta_conj*z1**3 + 2*m3*m1*zeta_conj*z1**3 + 2*m2*m1*zeta_conj*z1**3 + 3*m3*zeta*zeta_conj**2*z1**3 + 3*m2*zeta*zeta_conj**2*z1**3 + 3*m3*zeta_conj**2*z3*z1**3 + 6*m2*zeta_conj**2*z3*z1**3 - 3*m1*zeta_conj**2*z3*z1**3 - 3*zeta*zeta_conj**3*z3*z1**3 - 3*zeta_conj**3*z3**2*z1**3 - 
				z1*(-3*m3**2*(zeta - z3)*z1*(z3 + z1) - 3*m2**2*zeta*(z3**2 + 3*z3*z1 + z1**2) + m3*(-(m2*(2*zeta - z3)*(z3**2 + 6*z3*z1 + 3*z1**2)) + m1*(z3*(z3**2 + 2*z3*z1 - z1**2) - 2*zeta*(z3**2 + 4*z3*z1 + z1**2)) + zeta_conj*z1*(z3*(-3*z3**2 - 3*z3*z1 + z1**2) + 2*zeta*(3*z3**2 + 6*z3*z1 + z1**2))) - z3*(m1**2*(3*zeta*(z3 + z1) + z3*(z3 + 3*z1)) + 
				3*zeta_conj**2*z1*(z3*z1*(z3 + z1) + zeta*(z3**2 + 3*z3*z1 + z1**2)) - 2*m1*zeta_conj*(z3*z1*(2*z3 + 3*z1) + zeta*(z3**2 + 6*z3*z1 + 3*z1**2))) - m2*(m1*(2*zeta*(3*z3**2 + 6*z3*z1 + z1**2) + z3*(z3**2 + 6*z3*z1 + 3*z1**2)) - zeta_conj*(3*z3*z1*(z3**2 + 3*z3*z1 + z1**2) + 2*zeta*(z3**3 + 9*z3**2*z1 + 9*z3*z1**2 + z1**3)))) + (3*m2**2*zeta*(z3**2 + 3*z3*z1 + z1**2) + 
				m3**2*z1*(3*zeta*(z3 + z1) + z1*(3*z3 + z1)) + m2*(-3*zeta_conj*z3*z1*(z3**2 + 3*z3*z1 + z1**2) + m1*(2*zeta - z1)*(3*z3**2 + 6*z3*z1 + z1**2) - zeta*(2*zeta_conj - z1)*(z3**3 + 9*z3**2*z1 + 9*z3*z1**2 + z1**3)) + m3*(m1*(z1*(z3**2 - 2*z3*z1 - z1**2) + 2*zeta*(z3**2 + 4*z3*z1 + z1**2)) - (2*zeta_conj - z1)*z1*(z3*z1*(3*z3 + 2*z1) + zeta*(3*z3**2 + 6*z3*z1 + z1**2)) + 
				m2*(z1*(3*z3**2 + 6*z3*z1 + z1**2) + 2*zeta*(z3**2 + 6*z3*z1 + 3*z1**2))) + z3*(3*m1**2*(zeta - z1)*(z3 + z1) + 3*zeta_conj*(zeta_conj - z1)*z1*(z3*z1*(z3 + z1) + zeta*(z3**2 + 3*z3*z1 + z1**2)) + m1*(-(zeta*(2*zeta_conj - z1)*(z3**2 + 6*z3*z1 + 3*z1**2)) + z1*(z3*z1*(2*z3 + 3*z1) + zeta_conj*(-z3**2 + 3*z3*z1 + 3*z1**2)))))*z3_conj)

		coeff4 = (-3*m3*m2**2*zeta*z3**2 - 3*m2**3*zeta*z3**2 - 6*m3*m2*m1*zeta*z3**2 - 9*m2**2*m1*zeta*z3**2 - 3*m3*m1**2*zeta*z3**2 - 9*m2*m1**2*zeta*z3**2 - 3*m1**3*zeta*z3**2 + m3*m2**2*z3**3 + 2*m3*m2*m1*z3**3 + m3*m1**2*z3**3 + 3*m2**2*zeta*zeta_conj*z3**3 + 6*m2*m1*zeta*zeta_conj*z3**3 + 3*m1**2*zeta*zeta_conj*z3**3 - 9*m3**2*m2*zeta*z3*z1 - 
				18*m3*m2**2*zeta*z3*z1 - 9*m2**3*zeta*z3*z1 - 6*m3**2*m1*zeta*z3*z1 - 24*m3*m2*m1*zeta*z3*z1 - 18*m2**2*m1*zeta*z3*z1 - 6*m3*m1**2*zeta*z3*z1 - 9*m2*m1**2*zeta*z3*z1 + 6*m3**2*m2*z3**2*z1 + 6*m3*m2**2*z3**2*z1 + 4*m3**2*m1*z3**2*z1 + 10*m3*m2*m1*z3**2*z1 + 3*m2**2*m1*z3**2*z1 + 4*m3*m1**2*z3**2*z1 + 6*m2*m1**2*z3**2*z1 + 
				3*m1**3*z3**2*z1 + 18*m3*m2*zeta*zeta_conj*z3**2*z1 + 27*m2**2*zeta*zeta_conj*z3**2*z1 + 12*m3*m1*zeta*zeta_conj*z3**2*z1 + 36*m2*m1*zeta*zeta_conj*z3**2*z1 + 9*m1**2*zeta*zeta_conj*z3**2*z1 - 6*m3*m2*zeta_conj*z3**3*z1 + 3*m2**2*zeta_conj*z3**3*z1 - 4*m3*m1*zeta_conj*z3**3*z1 + 2*m2*m1*zeta_conj*z3**3*z1 - m1**2*zeta_conj*z3**3*z1 - 
				9*m2*zeta*zeta_conj**2*z3**3*z1 - 6*m1*zeta*zeta_conj**2*z3**3*z1 - 3*m3**3*zeta*z1**2 - 9*m3**2*m2*zeta*z1**2 - 9*m3*m2**2*zeta*z1**2 - 3*m2**3*zeta*z1**2 - 3*m3**2*m1*zeta*z1**2 - 6*m3*m2*m1*zeta*z1**2 - 3*m2**2*m1*zeta*z1**2 + 3*m3**3*z3*z1**2 + 6*m3**2*m2*z3*z1**2 + 3*m3*m2**2*z3*z1**2 + 4*m3**2*m1*z3*z1**2 + 
				10*m3*m2*m1*z3*z1**2 + 6*m2**2*m1*z3*z1**2 + 4*m3*m1**2*z3*z1**2 + 6*m2*m1**2*z3*z1**2 + 9*m3**2*zeta*zeta_conj*z3*z1**2 + 36*m3*m2*zeta*zeta_conj*z3*z1**2 + 27*m2**2*zeta*zeta_conj*z3*z1**2 + 12*m3*m1*zeta*zeta_conj*z3*z1**2 + 18*m2*m1*zeta*zeta_conj*z3*z1**2 - 6*m3**2*zeta_conj*z3**2*z1**2 - 6*m3*m2*zeta_conj*z3**2*z1**2 + 
				9*m2**2*zeta_conj*z3**2*z1**2 - 6*m3*m1*zeta_conj*z3**2*z1**2 - 6*m2*m1*zeta_conj*z3**2*z1**2 - 6*m1**2*zeta_conj*z3**2*z1**2 - 9*m3*zeta*zeta_conj**2*z3**2*z1**2 - 27*m2*zeta*zeta_conj**2*z3**2*z1**2 - 9*m1*zeta*zeta_conj**2*z3**2*z1**2 + 3*m3*zeta_conj**2*z3**3*z1**2 - 6*m2*zeta_conj**2*z3**3*z1**2 + 3*zeta*zeta_conj**3*z3**3*z1**2 + m3**2*m1*z1**3 + 
				2*m3*m2*m1*z1**3 + m2**2*m1*z1**3 + 3*m3**2*zeta*zeta_conj*z1**3 + 6*m3*m2*zeta*zeta_conj*z1**3 + 3*m2**2*zeta*zeta_conj*z1**3 - m3**2*zeta_conj*z3*z1**3 + 2*m3*m2*zeta_conj*z3*z1**3 + 3*m2**2*zeta_conj*z3*z1**3 - 4*m3*m1*zeta_conj*z3*z1**3 - 6*m2*m1*zeta_conj*z3*z1**3 - 6*m3*zeta*zeta_conj**2*z3*z1**3 - 9*m2*zeta*zeta_conj**2*z3*z1**3 - 
				6*m2*zeta_conj**2*z3**2*z1**3 + 3*m1*zeta_conj**2*z3**2*z1**3 + 3*zeta*zeta_conj**3*z3**2*z1**3 + zeta_conj**3*z3**3*z1**3 + z1*(-(m2**2*zeta*(z3**3 + 9*z3**2*z1 + 9*z3*z1**2 + z1**3)) - m1**2*z3**2*(z3*z1 + zeta*(z3 + 3*z1)) + m1*z3*z1*(2*zeta_conj*z3*(2*zeta*z3 + 3*zeta*z1 + z3*z1) + m3*(-4*zeta*(z3 + z1) + z3*(2*z3 + z1))) - 
				z1**2*(m3**2*(zeta - z3)*(3*z3 + z1) + zeta_conj**2*z3**2*(z3*z1 + 3*zeta*(z3 + z1)) + m3*zeta_conj*z3*(z3*(3*z3 + z1) - 2*zeta*(3*z3 + 2*z1))) + m2*(-(m1*z3*(z3*z1*(2*z3 + 3*z1) + 2*zeta*(z3**2 + 6*z3*z1 + 3*z1**2))) + z1*(-(m3*(2*zeta - z3)*(3*z3**2 + 6*z3*z1 + z1**2)) + 3*zeta_conj*z3*(z3*z1*(z3 + z1) + 
				2*zeta*(z3**2 + 3*z3*z1 + z1**2))))) - (m1**2*z3**2*(zeta - z1)*(z3 + 3*z1) + m2**2*zeta*(z3**3 + 9*z3**2*z1 + 9*z3*z1**2 + z1**3) + z1**2*(-(m3*z3*(2*zeta_conj - z1)*(3*zeta*z3 + 2*zeta*z1 + z3*z1)) + zeta_conj*z3**2*(zeta_conj - z1)*(z3*z1 + 3*zeta*(z3 + z1)) + m3**2*(z3*z1 + zeta*(3*z3 + z1))) + m1*z3*z1*(m3*(4*zeta*(z3 + z1) - 
				z1*(z3 + 2*z1)) + z3*(-(zeta*(2*zeta_conj - z1)*(2*z3 + 3*z1)) + z1*(zeta_conj*z3 + 3*zeta_conj*z1 + z3*z1))) + m2*(m1*z3*(2*zeta - z1)*(z3**2 + 6*z3*z1 + 3*z1**2) + z1*(-3*z3*(zeta_conj*z3*z1*(z3 + z1) + zeta*(2*zeta_conj - z1)*(z3**2 + 3*z3*z1 + z1**2)) + m3*(z3*z1*(3*z3 + 2*z1) + 2*zeta*(3*z3**2 + 6*z3*z1 + z1**2)))))*z3_conj)

		coeff3 = (m2**3*zeta*(z3**3 + 9*z3**2*z1 + 9*z3*z1**2 + z1**3) + (m1*z3 + (m3 - zeta_conj*z3)*z1)*(m1**2*z3**2*(zeta - z1) + (m3*(zeta - z3) - zeta*zeta_conj*z3)*z1**2*(m3 + z3*(-zeta_conj + z1)) + m1*z3*z1*(m3*(2*zeta - z3 - z1) + z3*(-2*zeta*zeta_conj + zeta*z1 + zeta_conj*z1))) + m2*(m1**2*z3**2*(3*zeta - 2*z1)*(z3 + 3*z1) + 
				m1*z3*z1*(4*m3*(3*zeta - z3 - z1)*(z3 + z1) + z3*(-2*zeta*(3*zeta_conj - z1)*(2*z3 + 3*z1) + z1*(2*zeta_conj*z3 + 6*zeta_conj*z1 + z3*z1))) + z1**2*(m3**2*(3*zeta - 2*z3)*(3*z3 + z1) + zeta_conj*z3**2*(z3*(2*zeta_conj - z1)*z1 + 3*zeta*(3*zeta_conj - 2*z1)*(z3 + z1)) + m3*z3*(-2*zeta*(3*zeta_conj - z1)*(3*z3 + 2*z1) + z3*(6*zeta_conj*z3 + 
				2*zeta_conj*z1 - 3*z3*z1 - 2*z1**2)))) + m2**2*(m1*z3*(3*zeta - z1)*(z3**2 + 6*z3*z1 + 3*z1**2) + z1*(m3*(3*zeta - z3)*(3*z3**2 + 6*z3*z1 + z1**2) - 3*z3*(zeta_conj*z3*z1*(z3 + z1) + zeta*(3*zeta_conj - z1)*(z3**2 + 3*z3*z1 + z1**2)))) + z3*z1*(3*m2**2*zeta*(z3**2 + 3*z3*z1 + z1**2) + (m1*z3 + (m3 - zeta_conj*z3)*z1)*(m1*z3*(zeta - z1) + 
				zeta*z1*(m3 + z3*(-zeta_conj + z1))) + m2*(m1*z3*(2*zeta - z1)*(2*z3 + 3*z1) + z1*(m3*(6*zeta*z3 + 4*zeta*z1 + z3*z1) - z3*(zeta_conj*z3*z1 + 3*zeta*(2*zeta_conj - z1)*(z3 + z1)))))*z3_conj)

		coeff2 =  -(m2*z3*z1*(3*m1**2*zeta*z3**2 + 6*m3*m1*zeta*z3*z1 - 2*m3*m1*z3**2*z1 - 2*m1**2*z3**2*z1 - 6*m1*zeta*zeta_conj*z3**2*z1 + 3*m3**2*zeta*z1**2 - 2*m3**2*z3*z1**2 - 2*m3*m1*z3*z1**2 - 6*m3*zeta*zeta_conj*z3*z1**2 + 2*m1*zeta*z3**2*z1**2 + 2*m3*zeta_conj*z3**2*z1**2 + 2*m1*zeta_conj*z3**2*z1**2 + 3*zeta*zeta_conj**2*z3**2*z1**2 + 
				2*m3*zeta*z3*z1**3 - m3*z3**2*z1**3 - 2*zeta*zeta_conj*z3**2*z1**3 + 3*m2**2*zeta*(z3**2 + 3*z3*z1 + z1**2) + m2*(m1*z3*(3*zeta - z1)*(2*z3 + 3*z1) + z1*(m3*(3*zeta - z3)*(3*z3 + 2*z1) - z3*(zeta_conj*z3*z1 + 3*zeta*(3*zeta_conj - z1)*(z3 + z1)))) + z3*z1*(m1*z3*(2*zeta - z1) + 3*m2*zeta*(z3 + z1) + zeta*z1*(2*m3 - 2*zeta_conj*z3 + z3*z1))*z3_conj))

		coeff1 = (m2**2*z3**2*z1**2*(3*m1*zeta*z3 + 3*m3*zeta*z1 - m3*z3*z1 - m1*z3*z1 - 3*zeta*zeta_conj*z3*z1 + zeta*z3*z1**2 + 3*m2*zeta*(z3 + z1) + zeta*z3*z1*z3_conj))

		coeff0 = -(m2**3*zeta*z3**3*z1**3)

	elif calc == 'body3':

		"""
		coeff10 = ((z1_conj - zeta_conj)*(z2_conj - zeta_conj)*zeta_conj)

		coeff9 = (z1_conj*(z2_conj*(m1 + m2 - (3*z1 + 3*z2 + zeta)*zeta_conj) + zeta_conj*(-2*m1 - m2 - m3 + (3*z1 + 3*z2 + zeta)*zeta_conj)) - zeta_conj*(z2_conj*(m1 + 2*m2 + m3 - (3*z1 + 3*z2 + zeta)*zeta_conj) + zeta_conj*(-2*(m1 + m2 + m3) + (3*z1 + 3*z2 + zeta)*zeta_conj)))

		coeff8 = (zeta_conj*((m1 + m2 + m3)**2 - 3*(m2*(2*z1 + z2 + zeta) + m1*(z1 + 2*z2 + zeta) + m3*(2*z1 + 2*z2 + zeta))*zeta_conj + 3*(z1**2 + z2*(z2 + zeta) + z1*(3*z2 + zeta))*zeta_conj**2) - z2_conj*(m2*(m1 + m2 + m3) - (2*m2*(3*z1 + 2*z2 + zeta) + m1*(z1 + 3*z2 + 2*zeta) + m3*(3*z1 + 3*z2 + 2*zeta))*zeta_conj + 3*(z1**2 + z2*(z2 + zeta) + z1*(3*z2 + zeta))*zeta_conj**2) - z1_conj*(m1*(m1 + m2 + m3) - (2*m1*(2*z1 + 3*z2 + zeta) + m2*(3*z1 + z2 + 2*zeta) + m3*(3*z1 + 3*z2 + 2*zeta))*zeta_conj + 3*(z1**2 + z2*(z2 + zeta) + z1*(3*z2 + zeta))*zeta_conj**2 + z2_conj*(3*m2*z1 + 2*m2*z2 + m2*zeta + m3*zeta + m1*(2*z1 + 3*z2 + zeta) - 3*(z1**2 + z2*(z2 + zeta) + z1*(3*z2 + zeta))*zeta_conj)))

		coeff7 = (-(zeta_conj*(-((m1 + m2 + m3)*(m2*(-3*z1 + z2 - 3*zeta) - 3*m3*(z1 + z2 + zeta) + m1*(z1 - 3*(z2 + zeta)))) - 3*(m1*(3*z1*z2 + 2*z2**2 + 2*z1*zeta + 3*z2*zeta) + m3*(2*z1**2 + 6*z1*z2 + 2*z2**2 + 3*z1*zeta + 3*z2*zeta) + m2*(2*z1**2 + 2*z2*zeta + 3*z1*(z2 + zeta)))*zeta_conj + (z1**3 + 9*z1*z2*(z2 + zeta) + 3*z1**2*(3*z2 + zeta) + z2**2*(z2 + 3*zeta))*zeta_conj**2)) + 
				z2_conj*(-(m1**2*z1) + m1*m2*z1 + 3*m2**2*z1 - m1*m3*z1 + 3*m2*m3*z1 + 2*m1*m2*z2 + m2**2*z2 + 2*m2*m3*z2 + m1**2*zeta + 2*m1*m2*zeta + m2**2*zeta + 2*m1*m3*zeta + 2*m2*m3*zeta + m3**2*zeta + (-3*m3*(z1**2 + 3*z1*z2 + z2**2 + 2*z1*zeta + 2*z2*zeta) - 2*m2*(3*z1**2 + 6*z1*z2 + z2**2 + 3*z1*zeta + 2*z2*zeta) + m1*(z1**2 - 3*z2*(z2 + 2*zeta) - z1*(3*z2 + 4*zeta)))*zeta_conj + (z1**3 + 9*z1*z2*(z2 + zeta) + 3*z1**2*(3*z2 + zeta) + z2**2*(z2 + 3*zeta))*zeta_conj**2) + 
				z1_conj*(m1**2*z1 + 2*m1*m2*z1 + 2*m1*m3*z1 + 3*m1**2*z2 + m1*m2*z2 - m2**2*z2 + 3*m1*m3*z2 - m2*m3*z2 + m1**2*zeta + 2*m1*m2*zeta + m2**2*zeta + 2*m1*m3*zeta + 2*m2*m3*zeta + m3**2*zeta - (3*m3*(z1**2 + 3*z1*z2 + z2**2 + 2*z1*zeta + 2*z2*zeta) + m2*(3*z1**2 + 3*z1*z2 - z2**2 + 6*z1*zeta + 4*z2*zeta) + 2*m1*(z1**2 + 3*z2*(z2 + zeta) + 2*z1*(3*z2 + zeta)))*zeta_conj + (z1**3 + 9*z1*z2*(z2 + zeta) + 3*z1**2*(3*z2 + zeta) + z2**2*(z2 + 3*zeta))*zeta_conj**2 + z2_conj*(3*m2*z1**2 + 6*m2*z1*z2 + m2*z2**2 + 3*m2*z1*zeta + 3*m3*z1*zeta + 2*m2*z2*zeta + 3*m3*z2*zeta + m1*(z1**2 + 3*z2*(z2 + zeta) + 2*z1*(3*z2 + zeta)) - (z1**3 + 9*z1*z2*(z2 + zeta) + 3*z1**2*(3*z2 + zeta) + z2**2*(z2 + 3*zeta))*zeta_conj)))

		coeff6 = (m1**3*z1 + 2*m1**2*m2*z1 + m1*m2**2*z1 + 2*m1**2*m3*z1 + 2*m1*m2*m3*z1 + m1*m3**2*z1 + m1**2*m2*z2 + 2*m1*m2**2*z2 + m2**3*z2 + 2*m1*m2*m3*z2 + 2*m2**2*m3*z2 + m2*m3**2*z2 - m1**3*zeta - 3*m1**2*m2*zeta - 3*m1*m2**2*zeta - m2**3*zeta - 3*m1**2*m3*zeta - 6*m1*m2*m3*zeta - 3*m2**2*m3*zeta - 3*m1*m3**2*zeta - 3*m2*m3**2*zeta - m3**3*zeta - 2*m1**2*z1**2*zeta_conj - 2*m1*m2*z1**2*zeta_conj + 3*m2**2*z1**2*zeta_conj - 2*m1*m3*z1**2*zeta_conj + 6*m2*m3*z1**2*zeta_conj + 3*m3**2*z1**2*zeta_conj - 3*m1**2*z1*z2*zeta_conj - 3*m2**2*z1*z2*zeta_conj + 6*m1*m3*z1*z2*zeta_conj + 6*m2*m3*z1*z2*zeta_conj + 9*m3**2*z1*z2*zeta_conj + 3*m1**2*z2**2*zeta_conj - 2*m1*m2*z2**2*zeta_conj - 
				2*m2**2*z2**2*zeta_conj + 6*m1*m3*z2**2*zeta_conj - 2*m2*m3*z2**2*zeta_conj + 3*m3**2*z2**2*zeta_conj + 3*m1**2*z1*zeta*zeta_conj + 12*m1*m2*z1*zeta*zeta_conj + 9*m2**2*z1*zeta*zeta_conj + 12*m1*m3*z1*zeta*zeta_conj + 18*m2*m3*z1*zeta*zeta_conj + 9*m3**2*z1*zeta*zeta_conj + 9*m1**2*z2*zeta*zeta_conj + 12*m1*m2*z2*zeta*zeta_conj + 3*m2**2*z2*zeta*zeta_conj + 18*m1*m3*z2*zeta*zeta_conj + 12*m2*m3*z2*zeta*zeta_conj + 9*m3**2*z2*zeta*zeta_conj + m1*z1**3*zeta_conj**2 - 2*m2*z1**3*zeta_conj**2 - 2*m3*z1**3*zeta_conj**2 - 9*m2*z1**2*z2*zeta_conj**2 - 18*m3*z1**2*z2*zeta_conj**2 - 9*m1*z1*z2**2*zeta_conj**2 - 18*m3*z1*z2**2*zeta_conj**2 - 
				2*m1*z2**3*zeta_conj**2 + m2*z2**3*zeta_conj**2 - 2*m3*z2**3*zeta_conj**2 - 3*m1*z1**2*zeta*zeta_conj**2 - 9*m2*z1**2*zeta*zeta_conj**2 - 9*m3*z1**2*zeta*zeta_conj**2 - 18*m1*z1*z2*zeta*zeta_conj**2 - 18*m2*z1*z2*zeta*zeta_conj**2 - 27*m3*z1*z2*zeta*zeta_conj**2 - 9*m1*z2**2*zeta*zeta_conj**2 - 3*m2*z2**2*zeta*zeta_conj**2 - 9*m3*z2**2*zeta*zeta_conj**2 + 3*z1**3*z2*zeta_conj**3 + 9*z1**2*z2**2*zeta_conj**3 + 3*z1*z2**3*zeta_conj**3 + z1**3*zeta*zeta_conj**3 + 9*z1**2*z2*zeta*zeta_conj**3 + 9*z1*z2**2*zeta*zeta_conj**3 + z2**3*zeta*zeta_conj**3 + 
				z2_conj*(-3*m2**2*z1**2 - 3*m2*m3*z1**2 - 3*m2**2*z1*z2 - 6*m2*m3*z1*z2 - m2*m3*z2**2 + m1**2*(z1 + 3*z2)*(z1 - zeta) - 3*m2**2*z1*zeta - 6*m2*m3*z1*zeta - 3*m3**2*z1*zeta - m2**2*z2*zeta - 4*m2*m3*z2*zeta - 3*m3**2*z2*zeta + m1*(m3*(2*z1 + 3*z2)*(z1 - 2*zeta) + m2*(z1**2 - 2*z1*(z2 + 2*zeta) - z2*(z2 + 4*zeta))) + (2*m2*(z1**3 + z2**2*zeta + 3*z1**2*(2*z2 + zeta) + 3*z1*z2*(z2 + 2*zeta)) + m1*(-z1**3 + z1**2*(-3*z2 + 2*zeta) + 3*z1*z2*(z2 + 4*zeta) + z2**2*(z2 + 6*zeta)) + m3*(z1**3 + 9*z1*z2*(z2 + 2*zeta) + z2**2*(z2 + 6*zeta) + z1**2*(9*z2 + 6*zeta)))*zeta_conj - (z2**3*zeta + 9*z1**2*z2*(z2 + zeta) + z1**3*(3*z2 + zeta) + 3*z1*z2**2*(z2 + 3*zeta))*zeta_conj**2) - 
				z1_conj*(m1*m2*z1**2 + m1*m3*z1**2 + 3*m1**2*z1*z2 + 2*m1*m2*z1*z2 - 3*m2**2*z1*z2 + 6*m1*m3*z1*z2 - 3*m2*m3*z1*z2 + 3*m1**2*z2**2 - m1*m2*z2**2 - m2**2*z2**2 + 3*m1*m3*z2**2 - 2*m2*m3*z2**2 + m1**2*z1*zeta + 4*m1*m2*z1*zeta + 3*m2**2*z1*zeta + 4*m1*m3*z1*zeta + 6*m2*m3*z1*zeta + 3*m3**2*z1*zeta + 3*m1**2*z2*zeta + 4*m1*m2*z2*zeta + m2**2*z2*zeta + 6*m1*m3*z2*zeta + 4*m2*m3*z2*zeta + 3*m3**2*z2*zeta - (m2*(z1**3 - 3*z1*z2*(z2 - 4*zeta) - z2**2*(z2 - 2*zeta) + 3*z1**2*(z2 + 2*zeta)) + 2*m1*(6*z1*z2*(z2 + zeta) + z1**2*(3*z2 + zeta) + z2**2*(z2 + 3*zeta)) + m3*(z1**3 + 9*z1*z2*(z2 + 2*zeta) + z2**2*(z2 + 6*zeta) + z1**2*(9*z2 + 6*zeta)))*zeta_conj + (z2**3*zeta + 9*z1**2*z2*(z2 + zeta) + z1**3*(3*z2 + zeta) + 3*z1*z2**2*(z2 + 3*zeta))*zeta_conj**2 + 
				z2_conj*(3*m1*z1**2*z2 + 6*m1*z1*z2**2 + m1*z2**3 + m1*z1**2*zeta + 3*m3*z1**2*zeta + 6*m1*z1*z2*zeta + 9*m3*z1*z2*zeta + 3*m1*z2**2*zeta + 3*m3*z2**2*zeta + m2*(z1**3 + z2**2*zeta + 3*z1**2*(2*z2 + zeta) + 3*z1*z2*(z2 + 2*zeta)) - (z2**3*zeta + 9*z1**2*z2*(z2 + zeta) + z1**3*(3*z2 + zeta) + 3*z1*z2**2*(z2 + 3*zeta))*zeta_conj)))

		coeff5 = (-2*m1**2*m2*z1**2 - 2*m1*m2**2*z1**2 - 2*m1**2*m3*z1**2 - 4*m1*m2*m3*z1**2 - 2*m1*m3**2*z1**2 - 3*m1**3*z1*z2 - 5*m1**2*m2*z1*z2 - 5*m1*m2**2*z1*z2 - 3*m2**3*z1*z2 - 6*m1**2*m3*z1*z2 - 8*m1*m2*m3*z1*z2 - 6*m2**2*m3*z1*z2 - 3*m1*m3**2*z1*z2 - 3*m2*m3**2*z1*z2 - 2*m1**2*m2*z2**2 - 2*m1*m2**2*z2**2 - 4*m1*m2*m3*z2**2 - 2*m2**2*m3*z2**2 - 2*m2*m3**2*z2**2 + 3*m1**2*m2*z1*zeta + 6*m1*m2**2*z1*zeta + 3*m2**3*z1*zeta + 3*m1**2*m3*z1*zeta + 12*m1*m2*m3*z1*zeta + 9*m2**2*m3*z1*zeta + 6*m1*m3**2*z1*zeta + 9*m2*m3**2*z1*zeta + 3*m3**3*z1*zeta + 3*m1**3*z2*zeta + 6*m1**2*m2*z2*zeta + 3*m1*m2**2*z2*zeta + 9*m1**2*m3*z2*zeta + 12*m1*m2*m3*z2*zeta + 3*m2**2*m3*z2*zeta + 9*m1*m3**2*z2*zeta + 6*m2*m3**2*z2*zeta + 3*m3**3*z2*zeta + 2*m1*m2*z1**3*zeta_conj - 
				m2**2*z1**3*zeta_conj + 2*m1*m3*z1**3*zeta_conj - 2*m2*m3*z1**3*zeta_conj - m3**2*z1**3*zeta_conj + 6*m1**2*z1**2*z2*zeta_conj + 6*m1*m2*z1**2*z2*zeta_conj + 3*m2**2*z1**2*z2*zeta_conj + 6*m1*m3*z1**2*z2*zeta_conj - 6*m2*m3*z1**2*z2*zeta_conj - 9*m3**2*z1**2*z2*zeta_conj + 3*m1**2*z1*z2**2*zeta_conj + 6*m1*m2*z1*z2**2*zeta_conj + 6*m2**2*z1*z2**2*zeta_conj - 6*m1*m3*z1*z2**2*zeta_conj + 6*m2*m3*z1*z2**2*zeta_conj - 9*m3**2*z1*z2**2*zeta_conj - m1**2*z2**3*zeta_conj + 2*m1*m2*z2**3*zeta_conj - 2*m1*m3*z2**3*zeta_conj + 2*m2*m3*z2**3*zeta_conj - m3**2*z2**3*zeta_conj - 6*m1*m2*z1**2*zeta*zeta_conj - 9*m2**2*z1**2*zeta*zeta_conj - 
				6*m1*m3*z1**2*zeta*zeta_conj - 18*m2*m3*z1**2*zeta*zeta_conj - 9*m3**2*z1**2*zeta*zeta_conj - 9*m1**2*z1*z2*zeta*zeta_conj - 24*m1*m2*z1*z2*zeta*zeta_conj - 9*m2**2*z1*z2*zeta*zeta_conj - 36*m1*m3*z1*z2*zeta*zeta_conj - 36*m2*m3*z1*z2*zeta*zeta_conj - 27*m3**2*z1*z2*zeta*zeta_conj - 9*m1**2*z2**2*zeta*zeta_conj - 6*m1*m2*z2**2*zeta*zeta_conj - 18*m1*m3*z2**2*zeta*zeta_conj - 6*m2*m3*z2**2*zeta*zeta_conj - 9*m3**2*z2**2*zeta*zeta_conj - 3*m1*z1**3*z2*zeta_conj**2 + 3*m2*z1**3*z2*zeta_conj**2 + 6*m3*z1**3*z2*zeta_conj**2 + 18*m3*z1**2*z2**2*zeta_conj**2 + 3*m1*z1*z2**3*zeta_conj**2 - 3*m2*z1*z2**3*zeta_conj**2 + 6*m3*z1*z2**3*zeta_conj**2 + 
				3*m2*z1**3*zeta*zeta_conj**2 + 3*m3*z1**3*zeta*zeta_conj**2 + 9*m1*z1**2*z2*zeta*zeta_conj**2 + 18*m2*z1**2*z2*zeta*zeta_conj**2 + 27*m3*z1**2*z2*zeta*zeta_conj**2 + 18*m1*z1*z2**2*zeta*zeta_conj**2 + 9*m2*z1*z2**2*zeta*zeta_conj**2 + 27*m3*z1*z2**2*zeta*zeta_conj**2 + 3*m1*z2**3*zeta*zeta_conj**2 + 3*m3*z2**3*zeta*zeta_conj**2 - 3*z1**3*z2**2*zeta_conj**3 - 3*z1**2*z2**3*zeta_conj**3 - 3*z1**3*z2*zeta*zeta_conj**3 - 9*z1**2*z2**2*zeta*zeta_conj**3 - 3*z1*z2**3*zeta*zeta_conj**3 - 
				z2_conj*(-(m2**2*z1**3) - m2*m3*z1**3 - 3*m2**2*z1**2*z2 - 6*m2*m3*z1**2*z2 - 3*m2*m3*z1*z2**2 + 3*m1**2*z2*(z1 + z2)*(z1 - zeta) - 3*m2**2*z1**2*zeta - 6*m2*m3*z1**2*zeta - 3*m3**2*z1**2*zeta - 3*m2**2*z1*z2*zeta - 12*m2*m3*z1*z2*zeta - 9*m3**2*z1*z2*zeta - 2*m2*m3*z2**2*zeta - 3*m3**2*z2**2*zeta + m1*(m3*(z1**2 + 6*z1*z2 + 3*z2**2)*(z1 - 2*zeta) + m2*(z1**3 + 2*z1**2*(z2 - zeta) - 2*z2**2*zeta - z1*z2*(z2 + 8*zeta))) + (2*m2*z1*(3*z2**2*zeta + z1**2*(2*z2 + zeta) + 3*z1*z2*(z2 + 2*zeta)) + m3*(2*z2**3*zeta + 9*z1**2*z2*(z2 + 2*zeta) + z1**3*(3*z2 + 2*zeta) + 3*z1*z2**2*(z2 + 6*zeta)) + m1*z2*(-3*z1**3 - 3*z1**2*(z2 - 2*zeta) + 2*z2**2*zeta + z1*z2*(z2 + 12*zeta)))*zeta_conj - 3*z1*z2*(z2**2*zeta + z1**2*(z2 + zeta) + z1*z2*(z2 + 3*zeta))*zeta_conj**2) + 
				z1_conj*(m1*m2*z1**2*z2 - 3*m2**2*z1**2*z2 + 3*m1*m3*z1**2*z2 - 3*m2*m3*z1**2*z2 + 3*m1**2*z1*z2**2 - 2*m1*m2*z1*z2**2 - 3*m2**2*z1*z2**2 + 6*m1*m3*z1*z2**2 - 6*m2*m3*z1*z2**2 + m1**2*z2**3 - m1*m2*z2**3 + m1*m3*z2**3 - m2*m3*z2**3 + 2*m1*m2*z1**2*zeta + 3*m2**2*z1**2*zeta + 2*m1*m3*z1**2*zeta + 6*m2*m3*z1**2*zeta + 3*m3**2*z1**2*zeta + 3*m1**2*z1*z2*zeta + 8*m1*m2*z1*z2*zeta + 3*m2**2*z1*z2*zeta + 12*m1*m3*z1*z2*zeta + 12*m2*m3*z1*z2*zeta + 9*m3**2*z1*z2*zeta + 3*m1**2*z2**2*zeta + 2*m1*m2*z2**2*zeta + 6*m1*m3*z2**2*zeta + 2*m2*m3*z2**2*zeta + 3*m3**2*z2**2*zeta - 
				(m2*z1*(-3*z1*z2*(z2 - 4*zeta) - 3*z2**2*(z2 - 2*zeta) + z1**2*(z2 + 2*zeta)) + 2*m1*z2*(z2**2*zeta + 3*z1**2*(z2 + zeta) + 2*z1*z2*(z2 + 3*zeta)) + m3*(2*z2**3*zeta + 9*z1**2*z2*(z2 + 2*zeta) + z1**3*(3*z2 + 2*zeta) + 3*z1*z2**2*(z2 + 6*zeta)))*zeta_conj + 3*z1*z2*(z2**2*zeta + z1**2*(z2 + zeta) + z1*z2*(z2 + 3*zeta))*zeta_conj**2 + z2_conj*(3*m1*z1**2*z2**2 + 2*m1*z1*z2**3 + m3*z1**3*zeta + 3*m1*z1**2*z2*zeta + 9*m3*z1**2*z2*zeta + 6*m1*z1*z2**2*zeta + 9*m3*z1*z2**2*zeta + m1*z2**3*zeta + m3*z2**3*zeta + m2*z1*(3*z2**2*zeta + z1**2*(2*z2 + zeta) + 3*z1*z2*(z2 + 2*zeta)) - 3*z1*z2*(z2**2*zeta + z1**2*(z2 + zeta) + z1*z2*(z2 + 3*zeta))*zeta_conj)))

		coeff4 = (m1*m2**2*z1**3 + 2*m1*m2*m3*z1**3 + m1*m3**2*z1**3 + 4*m1**2*m2*z1**2*z2 + 4*m1*m2**2*z1**2*z2 + 3*m2**3*z1**2*z2 + 6*m1**2*m3*z1**2*z2 + 10*m1*m2*m3*z1**2*z2 + 6*m2**2*m3*z1**2*z2 + 6*m1*m3**2*z1**2*z2 + 3*m2*m3**2*z1**2*z2 + 3*m1**3*z1*z2**2 + 4*m1**2*m2*z1*z2**2 + 4*m1*m2**2*z1*z2**2 + 6*m1**2*m3*z1*z2**2 + 10*m1*m2*m3*z1*z2**2 + 6*m2**2*m3*z1*z2**2 + 3*m1*m3**2*z1*z2**2 + 6*m2*m3**2*z1*z2**2 + m1**2*m2*z2**3 + 2*m1*m2*m3*z2**3 + m2*m3**2*z2**3 - 3*m1*m2**2*z1**2*zeta - 3*m2**3*z1**2*zeta - 6*m1*m2*m3*z1**2*zeta - 9*m2**2*m3*z1**2*zeta - 3*m1*m3**2*z1**2*zeta - 9*m2*m3**2*z1**2*zeta - 3*m3**3*z1**2*zeta - 6*m1**2*m2*z1*z2*zeta - 6*m1*m2**2*z1*z2*zeta - 9*m1**2*m3*z1*z2*zeta - 24*m1*m2*m3*z1*z2*zeta - 9*m2**2*m3*z1*z2*zeta - 18*m1*m3**2*z1*z2*zeta - 
				18*m2*m3**2*z1*z2*zeta - 9*m3**3*z1*z2*zeta - 3*m1**3*z2**2*zeta - 3*m1**2*m2*z2**2*zeta - 9*m1**2*m3*z2**2*zeta - 6*m1*m2*m3*z2**2*zeta - 9*m1*m3**2*z2**2*zeta - 3*m2*m3**2*z2**2*zeta - 3*m3**3*z2**2*zeta - 4*m1*m2*z1**3*z2*zeta_conj - m2**2*z1**3*z2*zeta_conj - 6*m1*m3*z1**3*z2*zeta_conj + 2*m2*m3*z1**3*z2*zeta_conj + 3*m3**2*z1**3*z2*zeta_conj - 6*m1**2*z1**2*z2**2*zeta_conj - 6*m1*m2*z1**2*z2**2*zeta_conj - 6*m2**2*z1**2*z2**2*zeta_conj - 6*m1*m3*z1**2*z2**2*zeta_conj - 6*m2*m3*z1**2*z2**2*zeta_conj + 9*m3**2*z1**2*z2**2*zeta_conj - m1**2*z1*z2**3*zeta_conj - 4*m1*m2*z1*z2**3*zeta_conj + 2*m1*m3*z1*z2**3*zeta_conj - 6*m2*m3*z1*z2**3*zeta_conj + 3*m3**2*z1*z2**3*zeta_conj + 
				3*m2**2*z1**3*zeta*zeta_conj + 6*m2*m3*z1**3*zeta*zeta_conj + 3*m3**2*z1**3*zeta*zeta_conj + 12*m1*m2*z1**2*z2*zeta*zeta_conj + 9*m2**2*z1**2*z2*zeta*zeta_conj + 18*m1*m3*z1**2*z2*zeta*zeta_conj + 36*m2*m3*z1**2*z2*zeta*zeta_conj + 27*m3**2*z1**2*z2*zeta*zeta_conj + 9*m1**2*z1*z2**2*zeta*zeta_conj + 12*m1*m2*z1*z2**2*zeta*zeta_conj + 36*m1*m3*z1*z2**2*zeta*zeta_conj + 18*m2*m3*z1*z2**2*zeta*zeta_conj + 27*m3**2*z1*z2**2*zeta*zeta_conj + 3*m1**2*z2**3*zeta*zeta_conj + 6*m1*m3*z2**3*zeta*zeta_conj + 3*m3**2*z2**3*zeta*zeta_conj + 3*m1*z1**3*z2**2*zeta_conj**2 - 6*m3*z1**3*z2**2*zeta_conj**2 + 3*m2*z1**2*z2**3*zeta_conj**2 - 6*m3*z1**2*z2**3*zeta_conj**2 - 
				6*m2*z1**3*z2*zeta*zeta_conj**2 - 9*m3*z1**3*z2*zeta*zeta_conj**2 - 9*m1*z1**2*z2**2*zeta*zeta_conj**2 - 9*m2*z1**2*z2**2*zeta*zeta_conj**2 - 27*m3*z1**2*z2**2*zeta*zeta_conj**2 - 6*m1*z1*z2**3*zeta*zeta_conj**2 - 9*m3*z1*z2**3*zeta*zeta_conj**2 + z1**3*z2**3*zeta_conj**3 + 3*z1**3*z2**2*zeta*zeta_conj**3 + 3*z1**2*z2**3*zeta*zeta_conj**3 + 
				z2_conj*(-(m2**2*z1**3*z2) - 2*m2*m3*z1**3*z2 - 3*m2*m3*z1**2*z2**2 + m1**2*z2**2*(3*z1 + z2)*(z1 - zeta) - m2**2*z1**3*zeta - 2*m2*m3*z1**3*zeta - m3**2*z1**3*zeta - 3*m2**2*z1**2*z2*zeta - 12*m2*m3*z1**2*z2*zeta - 9*m3**2*z1**2*z2*zeta - 6*m2*m3*z1*z2**2*zeta - 9*m3**2*z1*z2**2*zeta - m3**2*z2**3*zeta + m1*z2*(m3*(3*z1**2 + 6*z1*z2 + z2**2)*(z1 - 2*zeta) + m2*z1*(2*z1**2 + z1*(z2 - 4*zeta) - 4*z2*zeta)) + z1*z2*(m1*z2*(-3*z1**2 - z1*z2 + 6*z1*zeta + 4*z2*zeta) + 2*m2*z1*(3*z2*zeta + z1*(z2 + 2*zeta)) + 3*m3*(2*z2**2*zeta + z1**2*(z2 + 2*zeta) + z1*z2*(z2 + 6*zeta)))*zeta_conj - z1**2*z2**2*(3*z2*zeta + z1*(z2 + 3*zeta))*zeta_conj**2) + 
				z1_conj*(m2**2*z1**3*z2 + m2*m3*z1**3*z2 + m1*m2*z1**2*z2**2 + 3*m2**2*z1**2*z2**2 - 3*m1*m3*z1**2*z2**2 + 6*m2*m3*z1**2*z2**2 - m1**2*z1*z2**3 + 2*m1*m2*z1*z2**3 - 2*m1*m3*z1*z2**3 + 3*m2*m3*z1*z2**3 - m2**2*z1**3*zeta - 2*m2*m3*z1**3*zeta - m3**2*z1**3*zeta - 4*m1*m2*z1**2*z2*zeta - 3*m2**2*z1**2*z2*zeta - 6*m1*m3*z1**2*z2*zeta - 12*m2*m3*z1**2*z2*zeta - 9*m3**2*z1**2*z2*zeta - 3*m1**2*z1*z2**2*zeta - 4*m1*m2*z1*z2**2*zeta - 12*m1*m3*z1*z2**2*zeta - 6*m2*m3*z1*z2**2*zeta - 9*m3**2*z1*z2**2*zeta - m1**2*z2**3*zeta - 2*m1*m3*z2**3*zeta - m3**2*z2**3*zeta + z1*z2*(m2*z1*(-(z1*z2) - 3*z2**2 + 4*z1*zeta + 6*z2*zeta) + 2*m1*z2*(2*z2*zeta + z1*(z2 + 3*zeta)) + 3*m3*(2*z2**2*zeta + z1**2*(z2 + 2*zeta) + z1*z2*(z2 + 6*zeta)))*zeta_conj - 
				z1**2*z2**2*(3*z2*zeta + z1*(z2 + 3*zeta))*zeta_conj**2 - z1*z2*z2_conj*(m1*z1*z2**2 + 3*m3*z1**2*zeta + 3*m1*z1*z2*zeta + 9*m3*z1*z2*zeta + 2*m1*z2**2*zeta + 3*m3*z2**2*zeta + m2*z1*(z1*z2 + 2*z1*zeta + 3*z2*zeta) - z1*z2*(3*z2*zeta + z1*(z2 + 3*zeta))*zeta_conj)))

		coeff3 = (-(m1*m2**2*z1**3*z2) - m2**3*z1**3*z2 - 4*m1*m2*m3*z1**3*z2 - 2*m2**2*m3*z1**3*z2 - 3*m1*m3**2*z1**3*z2 - m2*m3**2*z1**3*z2 - 2*m1**2*m2*z1**2*z2**2 - 2*m1*m2**2*z1**2*z2**2 - 6*m1**2*m3*z1**2*z2**2 - 8*m1*m2*m3*z1**2*z2**2 - 6*m2**2*m3*z1**2*z2**2 - 6*m1*m3**2*z1**2*z2**2 - 6*m2*m3**2*z1**2*z2**2 - m1**3*z1*z2**3 - m1**2*m2*z1*z2**3 - 2*m1**2*m3*z1*z2**3 - 4*m1*m2*m3*z1*z2**3 - m1*m3**2*z1*z2**3 - 3*m2*m3**2*z1*z2**3 + m2**3*z1**3*zeta + 3*m2**2*m3*z1**3*zeta + 3*m2*m3**2*z1**3*zeta + 
				m3**3*z1**3*zeta + 3*m1*m2**2*z1**2*z2*zeta + 12*m1*m2*m3*z1**2*z2*zeta + 9*m2**2*m3*z1**2*z2*zeta + 9*m1*m3**2*z1**2*z2*zeta + 18*m2*m3**2*z1**2*z2*zeta + 9*m3**3*z1**2*z2*zeta + 3*m1**2*m2*z1*z2**2*zeta + 9*m1**2*m3*z1*z2**2*zeta + 12*m1*m2*m3*z1*z2**2*zeta + 18*m1*m3**2*z1*z2**2*zeta + 9*m2*m3**2*z1*z2**2*zeta + 9*m3**3*z1*z2**2*zeta + m1**3*z2**3*zeta + 3*m1**2*m3*z2**3*zeta + 3*m1*m3**2*z2**3*zeta + m3**3*z2**3*zeta + 2*m1*m2*z1**3*z2**2*zeta_conj + 2*m2**2*z1**3*z2**2*zeta_conj + 6*m1*m3*z1**3*z2**2*zeta_conj + 2*m2*m3*z1**3*z2**2*zeta_conj - 3*m3**2*z1**3*z2**2*zeta_conj + 2*m1**2*z1**2*z2**3*zeta_conj + 2*m1*m2*z1**2*z2**3*zeta_conj + 2*m1*m3*z1**2*z2**3*zeta_conj + 6*m2*m3*z1**2*z2**3*zeta_conj - 
				3*m3**2*z1**2*z2**3*zeta_conj - 3*m2**2*z1**3*z2*zeta*zeta_conj - 12*m2*m3*z1**3*z2*zeta*zeta_conj - 9*m3**2*z1**3*z2*zeta*zeta_conj - 6*m1*m2*z1**2*z2**2*zeta*zeta_conj - 18*m1*m3*z1**2*z2**2*zeta*zeta_conj - 18*m2*m3*z1**2*z2**2*zeta*zeta_conj - 27*m3**2*z1**2*z2**2*zeta*zeta_conj - 3*m1**2*z1*z2**3*zeta*zeta_conj - 12*m1*m3*z1*z2**3*zeta*zeta_conj - 9*m3**2*z1*z2**3*zeta*zeta_conj - m1*z1**3*z2**3*zeta_conj**2 - m2*z1**3*z2**3*zeta_conj**2 + 2*m3*z1**3*z2**3*zeta_conj**2 + 3*m2*z1**3*z2**2*zeta*zeta_conj**2 + 9*m3*z1**3*z2**2*zeta*zeta_conj**2 + 3*m1*z1**2*z2**3*zeta*zeta_conj**2 + 9*m3*z1**2*z2**3*zeta*zeta_conj**2 - z1**3*z2**3*zeta*zeta_conj**3 + 
				z1*z2*z2_conj*(m2*m3*z1**2*z2 - m1*z2*(m2*z1 + 3*m3*z1 + 2*m3*z2)*(z1 - 2*zeta) + m2**2*z1**2*zeta + 4*m2*m3*z1**2*zeta + 3*m3**2*z1**2*zeta + 6*m2*m3*z1*z2*zeta + 9*m3**2*z1*z2*zeta + 3*m3**2*z2**2*zeta + m1**2*z2**2*(-z1 + zeta) - z1*z2*(m3*z1*z2 - m1*z2*(z1 - 2*zeta) + 2*m2*z1*zeta + 6*m3*z1*zeta + 6*m3*z2*zeta)*zeta_conj + z1**2*z2**2*zeta*zeta_conj**2) + 
				z1*z2*z1_conj*(-(m2**2*z1**2*z2) - 2*m2*m3*z1**2*z2 - m1*m2*z1*z2**2 + m1*m3*z1*z2**2 - 3*m2*m3*z1*z2**2 + m2**2*z1**2*zeta + 4*m2*m3*z1**2*zeta + 3*m3**2*z1**2*zeta + 2*m1*m2*z1*z2*zeta + 6*m1*m3*z1*z2*zeta + 6*m2*m3*z1*z2*zeta + 9*m3**2*z1*z2*zeta + m1**2*z2**2*zeta + 4*m1*m3*z2**2*zeta + 3*m3**2*z2**2*zeta - z1*z2*(m3*z1*z2 - m2*z1*(z2 - 2*zeta) + 6*m3*z1*zeta + 2*m1*z2*zeta + 6*m3*z2*zeta)*zeta_conj + z1**2*z2**2*zeta*zeta_conj**2 + z1*z2*zeta*z2_conj*(m2*z1 + 3*m3*z1 + m1*z2 + 3*m3*z2 - z1*z2*zeta_conj)))

		coeff2 = -(m3*z1*z2*(-2*m1*m2*z1**2*z2 - 2*m2**2*z1**2*z2 - 3*m1*m3*z1**2*z2 - 2*m2*m3*z1**2*z2 - 2*m1**2*z1*z2**2 - 2*m1*m2*z1*z2**2 - 2*m1*m3*z1*z2**2 - 3*m2*m3*z1*z2**2 + 3*m2**2*z1**2*zeta + 6*m2*m3*z1**2*zeta + 3*m3**2*z1**2*zeta + 6*m1*m2*z1*z2*zeta + 9*m1*m3*z1*z2*zeta + 9*m2*m3*z1*z2*zeta + 9*m3**2*z1*z2*zeta + 3*m1**2*z2**2*zeta + 6*m1*m3*z2**2*zeta + 3*m3**2*z2**2*zeta + 2*m1*z1**2*z2**2*zeta_conj + 2*m2*z1**2*z2**2*zeta_conj - m3*z1**2*z2**2*zeta_conj - 6*m2*z1**2*z2*zeta*zeta_conj - 9*m3*z1**2*z2*zeta*zeta_conj - 6*m1*z1*z2**2*zeta*zeta_conj - 9*m3*z1*z2**2*zeta*zeta_conj + 3*z1**2*z2**2*zeta*zeta_conj**2 + 
				z1*z2*z2_conj*(-(m1*z1*z2) + 2*m2*z1*zeta + 3*m3*z1*zeta + 2*m1*z2*zeta + 3*m3*z2*zeta - 2*z1*z2*zeta*zeta_conj) + z1*z2*z1_conj*(-(m2*z1*z2) + 2*m2*z1*zeta + 3*m3*z1*zeta + 2*m1*z2*zeta + 3*m3*z2*zeta + z1*z2*zeta*z2_conj - 2*z1*z2*zeta*zeta_conj)))

		coeff1 = (m3**2*z1**2*z2**2*(-(m1*z1*z2) - m2*z1*z2 + 3*m2*z1*zeta + 3*m3*z1*zeta + 3*m1*z2*zeta + 3*m3*z2*zeta + z1*z2*zeta*z1_conj + z1*z2*zeta*z2_conj - 3*z1*z2*zeta*zeta_conj))

		coeff0 = -m3**3*z1**3*z2**3*zeta

		"""



		coeff10 = (zeta_conj*(zeta_conj - z2_conj)*(zeta_conj - z1_conj))

		coeff9 = (z2_conj*(zeta_conj*(-m3 - 2*m2 - m1 + zeta_conj*(zeta + 3*(z2 + z1))) + (m2 + m1 - zeta_conj*(zeta + 3*(z2 + z1)))*z1_conj) - zeta_conj*(zeta_conj*(-2*(m3 + m2 + m1) + zeta_conj*(zeta + 3*(z2 + z1))) + (m3 + m2 + 2*m1 - zeta_conj*(zeta + 3*(z2 + z1)))*z1_conj))
				 
		coeff8 = (zeta_conj*((m3 + m2 + m1)**2 + 3*zeta_conj**2*(z2**2 + 3*z2*z1 + z1**2 + zeta*(z2 + z1)) - 3*zeta_conj*(m1*(zeta + 2*z2 + z1) + m2*(zeta + z2 + 2*z1) + m3*(zeta + 2*(z2 + z1)))) - (m1*(m3 + m2 + m1) + 3*zeta_conj**2*(z2**2 + 3*z2*z1 + z1**2 + zeta*(z2 + z1)) - zeta_conj*(2*m1*(zeta + 3*z2 + 2*z1) + m2*(2*zeta + z2 + 3*z1) + 
				m3*(2*zeta + 3*(z2 + z1))))*z1_conj - z2_conj*(m2*(m3 + m2 + m1) + 3*zeta_conj**2*(z2**2 + 3*z2*z1 + z1**2 + zeta*(z2 + z1)) - zeta_conj*(m1*(2*zeta + 3*z2 + z1) + 2*m2*(zeta + 2*z2 + 3*z1) + m3*(2*zeta + 3*(z2 + z1))) + (m3*zeta + m1*zeta + 3*m1*z2 + 2*m1*z1 + m2*(zeta + 2*z2 + 3*z1) - 3*zeta_conj*(z2**2 + 3*z2*z1 + 
				z1**2 + zeta*(z2 + z1)))*z1_conj))
				 
		coeff7 = (-(zeta_conj*(zeta_conj**2*(z2**3 + 9*z2*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 3*z2**2*(zeta + 3*z1)) + (m3 + m2 + m1)*(m1*(3*zeta + 3*z2 - z1) + 3*m3*(zeta + z2 + z1) + m2*(-z2 + 3*(zeta + z1))) - 3*zeta_conj*(m2*(2*zeta*z2 + 3*zeta*z1 + 3*z2*z1 + 2*z1**2) + m1*(2*z2**2 + 2*zeta*z1 + 3*z2*(zeta + z1)) + 
				m3*(3*zeta*(z2 + z1) + 2*(z2**2 + 3*z2*z1 + z1**2))))) + (m3**2*zeta + 2*m3*m2*zeta + m2**2*zeta + 2*m3*m1*zeta + 2*m2*m1*zeta + m1**2*zeta - m3*m2*z2 - m2**2*z2 + 3*m3*m1*z2 + m2*m1*z2 + 3*m1**2*z2 + 2*m3*m1*z1 + 2*m2*m1*z1 + m1**2*z1 + zeta_conj**2*(z2**3 + 9*z2*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 
				3*z2**2*(zeta + 3*z1)) - zeta_conj*(2*m1*(3*zeta*z2 + 3*z2**2 + 2*zeta*z1 + 6*z2*z1 + z1**2) + m2*(4*zeta*z2 - z2**2 + 6*zeta*z1 + 3*z2*z1 + 3*z1**2) + 3*m3*(z2**2 + 3*z2*z1 + z1**2 + 2*zeta*(z2 + z1))))*z1_conj + z2_conj*(m3**2*zeta + 2*m3*m2*zeta + m2**2*zeta + 2*m3*m1*zeta + 2*m2*m1*zeta + m1**2*zeta + 
				2*m3*m2*z2 + m2**2*z2 + 2*m2*m1*z2 + 3*m3*m2*z1 + 3*m2**2*z1 - m3*m1*z1 + m2*m1*z1 - m1**2*z1 + zeta_conj**2*(z2**3 + 9*z2*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 3*z2**2*(zeta + 3*z1)) - zeta_conj*(m1*(6*zeta*z2 + 3*z2**2 + 4*zeta*z1 + 3*z2*z1 - z1**2) + 3*m3*(z2**2 + 3*z2*z1 + z1**2 + 2*zeta*(z2 + z1)) + 
				2*m2*(z2**2 + 3*z1*(zeta + z1) + 2*z2*(zeta + 3*z1))) + (3*m3*zeta*z2 + 3*m1*zeta*z2 + 3*m1*z2**2 + 3*m3*zeta*z1 + 2*m1*zeta*z1 + 6*m1*z2*z1 + m1*z1**2 + m2*(z2**2 + 3*z1*(zeta + z1) + 2*z2*(zeta + 3*z1)) - zeta_conj*(z2**3 + 9*z2*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 3*z2**2*(zeta + 3*z1)))*z1_conj))
				 
		coeff6 = (-(m3**3*zeta) - 3*m3**2*m2*zeta - 3*m3*m2**2*zeta - m2**3*zeta - 3*m3**2*m1*zeta - 6*m3*m2*m1*zeta - 3*m2**2*m1*zeta - 3*m3*m1**2*zeta - 3*m2*m1**2*zeta - m1**3*zeta + m3**2*m2*z2 + 2*m3*m2**2*z2 + m2**3*z2 + 2*m3*m2*m1*z2 + 2*m2**2*m1*z2 + m2*m1**2*z2 + 9*m3**2*zeta*zeta_conj*z2 + 
				12*m3*m2*zeta*zeta_conj*z2 + 3*m2**2*zeta*zeta_conj*z2 + 18*m3*m1*zeta*zeta_conj*z2 + 12*m2*m1*zeta*zeta_conj*z2 + 9*m1**2*zeta*zeta_conj*z2 + 3*m3**2*zeta_conj*z2**2 - 2*m3*m2*zeta_conj*z2**2 - 2*m2**2*zeta_conj*z2**2 + 6*m3*m1*zeta_conj*z2**2 - 2*m2*m1*zeta_conj*z2**2 + 3*m1**2*zeta_conj*z2**2 - 9*m3*zeta*zeta_conj**2*z2**2 - 
				3*m2*zeta*zeta_conj**2*z2**2 - 9*m1*zeta*zeta_conj**2*z2**2 - 2*m3*zeta_conj**2*z2**3 + m2*zeta_conj**2*z2**3 - 2*m1*zeta_conj**2*z2**3 + zeta*zeta_conj**3*z2**3 + m3**2*m1*z1 + 2*m3*m2*m1*z1 + m2**2*m1*z1 + 2*m3*m1**2*z1 + 2*m2*m1**2*z1 + m1**3*z1 + 9*m3**2*zeta*zeta_conj*z1 + 18*m3*m2*zeta*zeta_conj*z1 + 
				9*m2**2*zeta*zeta_conj*z1 + 12*m3*m1*zeta*zeta_conj*z1 + 12*m2*m1*zeta*zeta_conj*z1 + 3*m1**2*zeta*zeta_conj*z1 + 9*m3**2*zeta_conj*z2*z1 + 6*m3*m2*zeta_conj*z2*z1 - 3*m2**2*zeta_conj*z2*z1 + 6*m3*m1*zeta_conj*z2*z1 - 3*m1**2*zeta_conj*z2*z1 - 27*m3*zeta*zeta_conj**2*z2*z1 - 18*m2*zeta*zeta_conj**2*z2*z1 - 
				18*m1*zeta*zeta_conj**2*z2*z1 - 18*m3*zeta_conj**2*z2**2*z1 - 9*m1*zeta_conj**2*z2**2*z1 + 9*zeta*zeta_conj**3*z2**2*z1 + 3*zeta_conj**3*z2**3*z1 + 3*m3**2*zeta_conj*z1**2 + 6*m3*m2*zeta_conj*z1**2 + 3*m2**2*zeta_conj*z1**2 - 2*m3*m1*zeta_conj*z1**2 - 2*m2*m1*zeta_conj*z1**2 - 2*m1**2*zeta_conj*z1**2 - 9*m3*zeta*zeta_conj**2*z1**2 - 
				9*m2*zeta*zeta_conj**2*z1**2 - 3*m1*zeta*zeta_conj**2*z1**2 - 18*m3*zeta_conj**2*z2*z1**2 - 9*m2*zeta_conj**2*z2*z1**2 + 9*zeta*zeta_conj**3*z2*z1**2 + 9*zeta_conj**3*z2**2*z1**2 - 2*m3*zeta_conj**2*z1**3 - 2*m2*zeta_conj**2*z1**3 + m1*zeta_conj**2*z1**3 + zeta*zeta_conj**3*z1**3 + 3*zeta_conj**3*z2*z1**3 - 
				(m2**2*zeta*z2 + 4*m2*m1*zeta*z2 + 3*m1**2*zeta*z2 - m2**2*z2**2 - m2*m1*z2**2 + 3*m1**2*z2**2 + 3*m2**2*zeta*z1 + 4*m2*m1*zeta*z1 + m1**2*zeta*z1 - 3*m2**2*z2*z1 + 2*m2*m1*z2*z1 + 3*m1**2*z2*z1 + m2*m1*z1**2 + 3*m3**2*zeta*(z2 + z1) + zeta_conj**2*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 
				3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)) + m3*(m2*(2*zeta - z2)*(2*z2 + 3*z1) + m1*(3*z2**2 + 6*z2*(zeta + z1) + z1*(4*zeta + z1))) - zeta_conj*(m2*(-z2**3 + z2**2*(2*zeta - 3*z1) + 3*z2*z1*(4*zeta + z1) + z1**2*(6*zeta + z1)) + 2*m1*(z2**3 + zeta*z1**2 + 3*z2*z1*(2*zeta + z1) + 3*z2**2*(zeta + 2*z1)) + 
				m3*(z2**3 + 9*z2**2*z1 + 9*z2*z1**2 + z1**3 + 6*zeta*(z2**2 + 3*z2*z1 + z1**2))))*z1_conj - z2_conj*(3*m3**2*zeta*z2 + 4*m3*m2*zeta*z2 + m2**2*zeta*z2 + 6*m3*m1*zeta*z2 + 4*m2*m1*zeta*z2 + 3*m1**2*zeta*z2 + m3*m2*z2**2 + m2*m1*z2**2 + 3*m3**2*zeta*z1 + 6*m3*m2*zeta*z1 + 3*m2**2*zeta*z1 + 
				4*m3*m1*zeta*z1 + 4*m2*m1*zeta*z1 + m1**2*zeta*z1 + 6*m3*m2*z2*z1 + 3*m2**2*z2*z1 - 3*m3*m1*z2*z1 + 2*m2*m1*z2*z1 - 3*m1**2*z2*z1 + 3*m3*m2*z1**2 + 3*m2**2*z1**2 - 2*m3*m1*z1**2 - m2*m1*z1**2 - m1**2*z1**2 + zeta_conj**2*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)) - 
				zeta_conj*(m1*(z2**3 - 3*z2*z1*(-4*zeta + z1) - z1**2*(-2*zeta + z1) + 3*z2**2*(2*zeta + z1)) + 2*m2*(6*z2*z1*(zeta + z1) + z1**2*(3*zeta + z1) + z2**2*(zeta + 3*z1)) + m3*(z2**3 + 9*z2**2*z1 + 9*z2*z1**2 + z1**3 + 6*zeta*(z2**2 + 3*z2*z1 + z1**2))) + (3*m3*zeta*z2**2 + m2*zeta*z2**2 + 9*m3*zeta*z2*z1 + 6*m2*zeta*z2*z1 + 
				3*m2*z2**2*z1 + 3*m3*zeta*z1**2 + 3*m2*zeta*z1**2 + 6*m2*z2*z1**2 + m2*z1**3 + m1*(z2**3 + zeta*z1**2 + 3*z2*z1*(2*zeta + z1) + 3*z2**2*(zeta + 2*z1)) - zeta_conj*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)))*z1_conj))

		coeff5 = (3*m3**3*zeta*z2 + 6*m3**2*m2*zeta*z2 + 3*m3*m2**2*zeta*z2 + 9*m3**2*m1*zeta*z2 + 12*m3*m2*m1*zeta*z2 + 3*m2**2*m1*zeta*z2 + 9*m3*m1**2*zeta*z2 + 6*m2*m1**2*zeta*z2 + 3*m1**3*zeta*z2 - 2*m3**2*m2*z2**2 - 2*m3*m2**2*z2**2 - 4*m3*m2*m1*z2**2 - 2*m2**2*m1*z2**2 - 2*m2*m1**2*z2**2 - 9*m3**2*zeta*zeta_conj*z2**2 - 
				6*m3*m2*zeta*zeta_conj*z2**2 - 18*m3*m1*zeta*zeta_conj*z2**2 - 6*m2*m1*zeta*zeta_conj*z2**2 - 9*m1**2*zeta*zeta_conj*z2**2 - m3**2*zeta_conj*z2**3 + 2*m3*m2*zeta_conj*z2**3 - 2*m3*m1*zeta_conj*z2**3 + 2*m2*m1*zeta_conj*z2**3 - m1**2*zeta_conj*z2**3 + 3*m3*zeta*zeta_conj**2*z2**3 + 3*m1*zeta*zeta_conj**2*z2**3 + 3*m3**3*zeta*z1 + 9*m3**2*m2*zeta*z1 + 
				9*m3*m2**2*zeta*z1 + 3*m2**3*zeta*z1 + 6*m3**2*m1*zeta*z1 + 12*m3*m2*m1*zeta*z1 + 6*m2**2*m1*zeta*z1 + 3*m3*m1**2*zeta*z1 + 3*m2*m1**2*zeta*z1 - 3*m3**2*m2*z2*z1 - 6*m3*m2**2*z2*z1 - 3*m2**3*z2*z1 - 3*m3**2*m1*z2*z1 - 8*m3*m2*m1*z2*z1 - 5*m2**2*m1*z2*z1 - 6*m3*m1**2*z2*z1 - 5*m2*m1**2*z2*z1 - 3*m1**3*z2*z1 - 
				27*m3**2*zeta*zeta_conj*z2*z1 - 36*m3*m2*zeta*zeta_conj*z2*z1 - 9*m2**2*zeta*zeta_conj*z2*z1 - 36*m3*m1*zeta*zeta_conj*z2*z1 - 24*m2*m1*zeta*zeta_conj*z2*z1 - 9*m1**2*zeta*zeta_conj*z2*z1 - 9*m3**2*zeta_conj*z2**2*z1 + 6*m3*m2*zeta_conj*z2**2*z1 + 6*m2**2*zeta_conj*z2**2*z1 - 6*m3*m1*zeta_conj*z2**2*z1 + 6*m2*m1*zeta_conj*z2**2*z1 + 3*m1**2*zeta_conj*z2**2*z1 + 
				27*m3*zeta*zeta_conj**2*z2**2*z1 + 9*m2*zeta*zeta_conj**2*z2**2*z1 + 18*m1*zeta*zeta_conj**2*z2**2*z1 + 6*m3*zeta_conj**2*z2**3*z1 - 3*m2*zeta_conj**2*z2**3*z1 + 3*m1*zeta_conj**2*z2**3*z1 - 3*zeta*zeta_conj**3*z2**3*z1 - 2*m3**2*m1*z1**2 - 4*m3*m2*m1*z1**2 - 2*m2**2*m1*z1**2 - 2*m3*m1**2*z1**2 - 2*m2*m1**2*z1**2 - 9*m3**2*zeta*zeta_conj*z1**2 - 18*m3*m2*zeta*zeta_conj*z1**2 - 
				9*m2**2*zeta*zeta_conj*z1**2 - 6*m3*m1*zeta*zeta_conj*z1**2 - 6*m2*m1*zeta*zeta_conj*z1**2 - 9*m3**2*zeta_conj*z2*z1**2 - 6*m3*m2*zeta_conj*z2*z1**2 + 3*m2**2*zeta_conj*z2*z1**2 + 6*m3*m1*zeta_conj*z2*z1**2 + 6*m2*m1*zeta_conj*z2*z1**2 + 6*m1**2*zeta_conj*z2*z1**2 + 27*m3*zeta*zeta_conj**2*z2*z1**2 + 18*m2*zeta*zeta_conj**2*z2*z1**2 + 9*m1*zeta*zeta_conj**2*z2*z1**2 + 18*m3*zeta_conj**2*z2**2*z1**2 - 
				9*zeta*zeta_conj**3*z2**2*z1**2 - 3*zeta_conj**3*z2**3*z1**2 - m3**2*zeta_conj*z1**3 - 2*m3*m2*zeta_conj*z1**3 - m2**2*zeta_conj*z1**3 + 2*m3*m1*zeta_conj*z1**3 + 2*m2*m1*zeta_conj*z1**3 + 3*m3*zeta*zeta_conj**2*z1**3 + 3*m2*zeta*zeta_conj**2*z1**3 + 6*m3*zeta_conj**2*z2*z1**3 + 3*m2*zeta_conj**2*z2*z1**3 - 3*m1*zeta_conj**2*z2*z1**3 - 3*zeta*zeta_conj**3*z2*z1**3 - 3*zeta_conj**3*z2**2*z1**3 + (3*m2**2*(zeta - z2)*z1*(z2 + z1) + 
				3*m3**2*zeta*(z2**2 + 3*z2*z1 + z1**2) + m2*(m1*(z2*(-z2**2 - 2*z2*z1 + z1**2) + 2*zeta*(z2**2 + 4*z2*z1 + z1**2)) - zeta_conj*z1*(z2*(-3*z2**2 - 3*z2*z1 + z1**2) + 2*zeta*(3*z2**2 + 6*z2*z1 + z1**2))) + z2*(m1**2*(3*zeta*(z2 + z1) + z2*(z2 + 3*z1)) + 3*zeta_conj**2*z1*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2)) - 2*m1*zeta_conj*(z2*z1*(2*z2 + 3*z1) + zeta*(z2**2 + 6*z2*z1 + 3*z1**2))) + 
				m3*(m2*(2*zeta - z2)*(z2**2 + 6*z2*z1 + 3*z1**2) + m1*(2*zeta*(3*z2**2 + 6*z2*z1 + z1**2) + z2*(z2**2 + 6*z2*z1 + 3*z1**2)) - zeta_conj*(3*z2*z1*(z2**2 + 3*z2*z1 + z1**2) + 2*zeta*(z2**3 + 9*z2**2*z1 + 9*z2*z1**2 + z1**3))))*z1_conj + z2_conj*(3*m3**2*zeta*z2**2 + 2*m3*m2*zeta*z2**2 + 6*m3*m1*zeta*z2**2 + 2*m2*m1*zeta*z2**2 + 3*m1**2*zeta*z2**2 + 9*m3**2*zeta*z2*z1 + 12*m3*m2*zeta*z2*z1 + 
				3*m2**2*zeta*z2*z1 + 12*m3*m1*zeta*z2*z1 + 8*m2*m1*zeta*z2*z1 + 3*m1**2*zeta*z2*z1 + 3*m3*m2*z2**2*z1 - 3*m3*m1*z2**2*z1 + m2*m1*z2**2*z1 - 3*m1**2*z2**2*z1 + 3*m3**2*zeta*z1**2 + 6*m3*m2*zeta*z1**2 + 3*m2**2*zeta*z1**2 + 2*m3*m1*zeta*z1**2 + 2*m2*m1*zeta*z1**2 + 6*m3*m2*z2*z1**2 + 3*m2**2*z2*z1**2 - 6*m3*m1*z2*z1**2 - 2*m2*m1*z2*z1**2 - 3*m1**2*z2*z1**2 + m3*m2*z1**3 + 
				m2**2*z1**3 - m3*m1*z1**3 - m2*m1*z1**3 + 3*zeta_conj**2*z2*z1*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2)) - zeta_conj*(m1*z2*(-3*z2*z1*(-4*zeta + z1) - 3*z1**2*(-2*zeta + z1) + z2**2*(2*zeta + z1)) + 2*m2*z1*(zeta*z1**2 + 3*z2**2*(zeta + z1) + 2*z2*z1*(3*zeta + z1)) + m3*(3*z2*z1*(z2**2 + 3*z2*z1 + z1**2) + 2*zeta*(z2**3 + 9*z2**2*z1 + 9*z2*z1**2 + z1**3))) + (m3*zeta*(z2**3 + 9*z2**2*z1 + 
				9*z2*z1**2 + z1**3) + m1*z2*(z2*z1*(2*z2 + 3*z1) + zeta*(z2**2 + 6*z2*z1 + 3*z1**2)) + z1*(-3*zeta_conj*z2*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2)) + m2*(z2*z1*(3*z2 + 2*z1) + zeta*(3*z2**2 + 6*z2*z1 + z1**2))))*z1_conj))
				 
		coeff4 = (-3*m3**3*zeta*z2**2 - 3*m3**2*m2*zeta*z2**2 - 9*m3**2*m1*zeta*z2**2 - 6*m3*m2*m1*zeta*z2**2 - 9*m3*m1**2*zeta*z2**2 - 3*m2*m1**2*zeta*z2**2 - 3*m1**3*zeta*z2**2 + m3**2*m2*z2**3 + 2*m3*m2*m1*z2**3 + m2*m1**2*z2**3 + 3*m3**2*zeta*zeta_conj*z2**3 + 6*m3*m1*zeta*zeta_conj*z2**3 + 3*m1**2*zeta*zeta_conj*z2**3 - 9*m3**3*zeta*z2*z1 - 
				18*m3**2*m2*zeta*z2*z1 - 9*m3*m2**2*zeta*z2*z1 - 18*m3**2*m1*zeta*z2*z1 - 24*m3*m2*m1*zeta*z2*z1 - 6*m2**2*m1*zeta*z2*z1 - 9*m3*m1**2*zeta*z2*z1 - 6*m2*m1**2*zeta*z2*z1 + 6*m3**2*m2*z2**2*z1 + 6*m3*m2**2*z2**2*z1 + 3*m3**2*m1*z2**2*z1 + 10*m3*m2*m1*z2**2*z1 + 4*m2**2*m1*z2**2*z1 + 6*m3*m1**2*z2**2*z1 + 4*m2*m1**2*z2**2*z1 + 
				3*m1**3*z2**2*z1 + 27*m3**2*zeta*zeta_conj*z2**2*z1 + 18*m3*m2*zeta*zeta_conj*z2**2*z1 + 36*m3*m1*zeta*zeta_conj*z2**2*z1 + 12*m2*m1*zeta*zeta_conj*z2**2*z1 + 9*m1**2*zeta*zeta_conj*z2**2*z1 + 3*m3**2*zeta_conj*z2**3*z1 - 6*m3*m2*zeta_conj*z2**3*z1 + 2*m3*m1*zeta_conj*z2**3*z1 - 4*m2*m1*zeta_conj*z2**3*z1 - m1**2*zeta_conj*z2**3*z1 - 9*m3*zeta*zeta_conj**2*z2**3*z1 - 
				6*m1*zeta*zeta_conj**2*z2**3*z1 - 3*m3**3*zeta*z1**2 - 9*m3**2*m2*zeta*z1**2 - 9*m3*m2**2*zeta*z1**2 - 3*m2**3*zeta*z1**2 - 3*m3**2*m1*zeta*z1**2 - 6*m3*m2*m1*zeta*z1**2 - 3*m2**2*m1*zeta*z1**2 + 3*m3**2*m2*z2*z1**2 + 6*m3*m2**2*z2*z1**2 + 3*m2**3*z2*z1**2 + 6*m3**2*m1*z2*z1**2 + 10*m3*m2*m1*z2*z1**2 + 4*m2**2*m1*z2*z1**2 + 6*m3*m1**2*z2*z1**2 + 
				4*m2*m1**2*z2*z1**2 + 27*m3**2*zeta*zeta_conj*z2*z1**2 + 36*m3*m2*zeta*zeta_conj*z2*z1**2 + 9*m2**2*zeta*zeta_conj*z2*z1**2 + 18*m3*m1*zeta*zeta_conj*z2*z1**2 + 12*m2*m1*zeta*zeta_conj*z2*z1**2 + 9*m3**2*zeta_conj*z2**2*z1**2 - 6*m3*m2*zeta_conj*z2**2*z1**2 - 6*m2**2*zeta_conj*z2**2*z1**2 - 6*m3*m1*zeta_conj*z2**2*z1**2 - 6*m2*m1*zeta_conj*z2**2*z1**2 - 6*m1**2*zeta_conj*z2**2*z1**2 - 
				27*m3*zeta*zeta_conj**2*z2**2*z1**2 - 9*m2*zeta*zeta_conj**2*z2**2*z1**2 - 9*m1*zeta*zeta_conj**2*z2**2*z1**2 - 6*m3*zeta_conj**2*z2**3*z1**2 + 3*m2*zeta_conj**2*z2**3*z1**2 + 3*zeta*zeta_conj**3*z2**3*z1**2 + m3**2*m1*z1**3 + 2*m3*m2*m1*z1**3 + m2**2*m1*z1**3 + 3*m3**2*zeta*zeta_conj*z1**3 + 6*m3*m2*zeta*zeta_conj*z1**3 + 3*m2**2*zeta*zeta_conj*z1**3 + 3*m3**2*zeta_conj*z2*z1**3 + 2*m3*m2*zeta_conj*z2*z1**3 - 
				m2**2*zeta_conj*z2*z1**3 - 6*m3*m1*zeta_conj*z2*z1**3 - 4*m2*m1*zeta_conj*z2*z1**3 - 9*m3*zeta*zeta_conj**2*z2*z1**3 - 6*m2*zeta*zeta_conj**2*z2*z1**3 - 6*m3*zeta_conj**2*z2**2*z1**3 + 3*m1*zeta_conj**2*z2**2*z1**3 + 3*zeta*zeta_conj**3*z2**2*z1**3 + zeta_conj**3*z2**3*z1**3 - (m3**2*zeta*(z2**3 + 9*z2**2*z1 + 9*z2*z1**2 + z1**3) + m1**2*z2**2*(z2*z1 + zeta*(z2 + 3*z1)) - m1*z2*z1*(2*zeta_conj*z2*(2*zeta*z2 + 
				3*zeta*z1 + z2*z1) + m2*(-4*zeta*(z2 + z1) + z2*(2*z2 + z1))) + z1**2*(m2**2*(zeta - z2)*(3*z2 + z1) + zeta_conj**2*z2**2*(z2*z1 + 3*zeta*(z2 + z1)) + m2*zeta_conj*z2*(z2*(3*z2 + z1) - 2*zeta*(3*z2 + 2*z1))) + m3*(m1*z2*(z2*z1*(2*z2 + 3*z1) + 2*zeta*(z2**2 + 6*z2*z1 + 3*z1**2)) + z1*(m2*(2*zeta - z2)*(3*z2**2 + 6*z2*z1 + z1**2) - 3*zeta_conj*z2*(z2*z1*(z2 + z1) + 
				2*zeta*(z2**2 + 3*z2*z1 + z1**2)))))*z1_conj - z2_conj*(m3**2*zeta*z2**3 + 2*m3*m1*zeta*z2**3 + m1**2*zeta*z2**3 + 9*m3**2*zeta*z2**2*z1 + 6*m3*m2*zeta*z2**2*z1 + 12*m3*m1*zeta*z2**2*z1 + 4*m2*m1*zeta*z2**2*z1 + 3*m1**2*zeta*z2**2*z1 - m3*m1*z2**3*z1 - m1**2*z2**3*z1 + 9*m3**2*zeta*z2*z1**2 + 12*m3*m2*zeta*z2*z1**2 + 3*m2**2*zeta*z2*z1**2 + 
				6*m3*m1*zeta*z2*z1**2 + 4*m2*m1*zeta*z2*z1**2 + 3*m3*m2*z2**2*z1**2 - 6*m3*m1*z2**2*z1**2 - m2*m1*z2**2*z1**2 - 3*m1**2*z2**2*z1**2 + m3**2*zeta*z1**3 + 2*m3*m2*zeta*z1**3 + m2**2*zeta*z1**3 + 2*m3*m2*z2*z1**3 + m2**2*z2*z1**3 - 3*m3*m1*z2*z1**3 - 2*m2*m1*z2*z1**3 + zeta_conj**2*z2**2*z1**2*(z2*z1 + 3*zeta*(z2 + z1)) - 
				zeta_conj*z2*z1*(2*m2*z1*(3*zeta*z2 + 2*zeta*z1 + z2*z1) + m1*z2*(-(z1*(z2 + 3*z1)) + zeta*(4*z2 + 6*z1)) + 3*m3*(z2*z1*(z2 + z1) + 2*zeta*(z2**2 + 3*z2*z1 + z1**2))) + z2*z1*(m1*z2*(2*zeta*z2 + 3*zeta*z1 + z2*z1) + 3*m3*zeta*(z2**2 + 3*z2*z1 + z1**2) + z1*(m2*(3*zeta*z2 + 2*zeta*z1 + z2*z1) - zeta_conj*z2*(z2*z1 + 3*zeta*(z2 + z1))))*z1_conj))
				 
		coeff3 = (m3**3*zeta*z2**3 + 3*m3**2*m1*zeta*z2**3 + 3*m3*m1**2*zeta*z2**3 + m1**3*zeta*z2**3 + 9*m3**3*zeta*z2**2*z1 + 9*m3**2*m2*zeta*z2**2*z1 + 18*m3**2*m1*zeta*z2**2*z1 + 12*m3*m2*m1*zeta*z2**2*z1 + 9*m3*m1**2*zeta*z2**2*z1 + 3*m2*m1**2*zeta*z2**2*z1 - 3*m3**2*m2*z2**3*z1 - m3**2*m1*z2**3*z1 - 4*m3*m2*m1*z2**3*z1 - 
				2*m3*m1**2*z2**3*z1 - m2*m1**2*z2**3*z1 - m1**3*z2**3*z1 - 9*m3**2*zeta*zeta_conj*z2**3*z1 - 12*m3*m1*zeta*zeta_conj*z2**3*z1 - 3*m1**2*zeta*zeta_conj*z2**3*z1 + 9*m3**3*zeta*z2*z1**2 + 18*m3**2*m2*zeta*z2*z1**2 + 9*m3*m2**2*zeta*z2*z1**2 + 9*m3**2*m1*zeta*z2*z1**2 + 12*m3*m2*m1*zeta*z2*z1**2 + 3*m2**2*m1*zeta*z2*z1**2 - 
				6*m3**2*m2*z2**2*z1**2 - 6*m3*m2**2*z2**2*z1**2 - 6*m3**2*m1*z2**2*z1**2 - 8*m3*m2*m1*z2**2*z1**2 - 2*m2**2*m1*z2**2*z1**2 - 6*m3*m1**2*z2**2*z1**2 - 2*m2*m1**2*z2**2*z1**2 - 27*m3**2*zeta*zeta_conj*z2**2*z1**2 - 18*m3*m2*zeta*zeta_conj*z2**2*z1**2 - 18*m3*m1*zeta*zeta_conj*z2**2*z1**2 - 6*m2*m1*zeta*zeta_conj*z2**2*z1**2 - 3*m3**2*zeta_conj*z2**3*z1**2 + 
				6*m3*m2*zeta_conj*z2**3*z1**2 + 2*m3*m1*zeta_conj*z2**3*z1**2 + 2*m2*m1*zeta_conj*z2**3*z1**2 + 2*m1**2*zeta_conj*z2**3*z1**2 + 9*m3*zeta*zeta_conj**2*z2**3*z1**2 + 3*m1*zeta*zeta_conj**2*z2**3*z1**2 + m3**3*zeta*z1**3 + 3*m3**2*m2*zeta*z1**3 + 3*m3*m2**2*zeta*z1**3 + m2**3*zeta*z1**3 - m3**2*m2*z2*z1**3 - 2*m3*m2**2*z2*z1**3 - m2**3*z2*z1**3 - 3*m3**2*m1*z2*z1**3 - 
				4*m3*m2*m1*z2*z1**3 - m2**2*m1*z2*z1**3 - 9*m3**2*zeta*zeta_conj*z2*z1**3 - 12*m3*m2*zeta*zeta_conj*z2*z1**3 - 3*m2**2*zeta*zeta_conj*z2*z1**3 - 3*m3**2*zeta_conj*z2**2*z1**3 + 2*m3*m2*zeta_conj*z2**2*z1**3 + 2*m2**2*zeta_conj*z2**2*z1**3 + 6*m3*m1*zeta_conj*z2**2*z1**3 + 2*m2*m1*zeta_conj*z2**2*z1**3 + 9*m3*zeta*zeta_conj**2*z2**2*z1**3 + 3*m2*zeta*zeta_conj**2*z2**2*z1**3 + 
				2*m3*zeta_conj**2*z2**3*z1**3 - m2*zeta_conj**2*z2**3*z1**3 - m1*zeta_conj**2*z2**3*z1**3 - zeta*zeta_conj**3*z2**3*z1**3 + z2*z1*((m1*z2 + (m2 - zeta_conj*z2)*z1)*(m1*zeta*z2 + (m2*zeta - m2*z2 - zeta*zeta_conj*z2)*z1) + 3*m3**2*zeta*(z2**2 + 3*z2*z1 + z1**2) + m3*(m1*z2*(4*zeta*z2 + 6*zeta*z1 + z2*z1) + z1*(m2*(2*zeta - z2)*(3*z2 + 2*z1) - 
				zeta_conj*z2*(z2*z1 + 6*zeta*(z2 + z1)))))*z1_conj + z2*z1*z2_conj*((m1*z2 + (m2 - zeta_conj*z2)*z1)*(m1*z2*(zeta - z1) + zeta*(m2 - zeta_conj*z2)*z1) + 3*m3**2*zeta*(z2**2 + 3*z2*z1 + z1**2) + m3*(m1*z2*(2*zeta - z1)*(2*z2 + 3*z1) + z1*(m2*(6*zeta*z2 + 4*zeta*z1 + z2*z1) - zeta_conj*z2*(z2*z1 + 6*zeta*(z2 + z1)))) + 
				zeta*z2*z1*(m1*z2 + m2*z1 - zeta_conj*z2*z1 + 3*m3*(z2 + z1))*z1_conj))

		coeff2 = (-m3*z2*z1*(3*m3**2*zeta*z2**2 + 6*m3*m1*zeta*z2**2 + 3*m1**2*zeta*z2**2 + 9*m3**2*zeta*z2*z1 + 9*m3*m2*zeta*z2*z1 + 9*m3*m1*zeta*z2*z1 + 6*m2*m1*zeta*z2*z1 - 3*m3*m2*z2**2*z1 - 2*m3*m1*z2**2*z1 - 2*m2*m1*z2**2*z1 - 2*m1**2*z2**2*z1 - 9*m3*zeta*zeta_conj*z2**2*z1 - 6*m1*zeta*zeta_conj*z2**2*z1 + 
				3*m3**2*zeta*z1**2 + 6*m3*m2*zeta*z1**2 + 3*m2**2*zeta*z1**2 - 2*m3*m2*z2*z1**2 - 2*m2**2*z2*z1**2 - 3*m3*m1*z2*z1**2 - 2*m2*m1*z2*z1**2 - 9*m3*zeta*zeta_conj*z2*z1**2 - 6*m2*zeta*zeta_conj*z2*z1**2 - m3*zeta_conj*z2**2*z1**2 + 2*m2*zeta_conj*z2**2*z1**2 + 2*m1*zeta_conj*z2**2*z1**2 + 3*zeta*zeta_conj**2*z2**2*z1**2 + z2*z1*(2*m1*zeta*z2 + 
				(2*m2*zeta - m2*z2 - 2*zeta*zeta_conj*z2)*z1 + 3*m3*zeta*(z2 + z1))*z1_conj + z2*z1*z2_conj*(2*m1*zeta*z2 + 2*m2*zeta*z1 - m1*z2*z1 - 2*zeta*zeta_conj*z2*z1 + 3*m3*zeta*(z2 + z1) + zeta*z2*z1*z1_conj)))

		coeff1 = (m3**2*z2**2*z1**2*(3*m3*zeta*z2 + 3*m1*zeta*z2 + 3*m3*zeta*z1 + 3*m2*zeta*z1 - m2*z2*z1 - m1*z2*z1 - 3*zeta*zeta_conj*z2*z1 + zeta*z2*z1*z2_conj + zeta*z2*z1*z1_conj))

		coeff0 = -(m3**3*zeta*z2**3*z1**3)



	elif calc == 'general':

		coeff10 = ((zeta_conj - z3_conj)*(zeta_conj - z2_conj)*(zeta_conj - z1_conj))

		coeff9 = (z2_conj*(zeta_conj*(-m3 - 2*m2 - m1 +  zeta_conj*(zeta + 3*(z3 + z2 + z1))) +  (m2 + m1 -  zeta_conj*(zeta + 3*(z3 + z2 + z1)))*z1_conj) -  zeta_conj*(zeta_conj*(-2*(m3 + m2 + m1) +  zeta_conj*(zeta + 3*(z3 + z2 + z1))) +  (m3 + m2 + 2*m1 -  zeta_conj*(zeta + 3*(z3 + z2 + z1)))*z1_conj) +  z3_conj*(zeta_conj*(-2*m3 - m2 - m1 +  zeta_conj*(zeta + 3*(z3 + z2 + z1))) +  (m3 + m1 -  zeta_conj*(zeta + 3*(z3 + z2 + z1)))*z1_conj +  z2_conj*(m3 + m2 -  zeta_conj*(zeta + 3*(z3 + z2 + z1)) +  (zeta + 3*(z3 + z2 + z1))*z1_conj)))

		coeff8 = (m3**2*zeta_conj + 2*m3*m2*zeta_conj +  m2**2*zeta_conj + 2*m3*m1*zeta_conj +  2*m2*m1*zeta_conj + m1**2*zeta_conj -  3*m3*zeta*zeta_conj**2 -  3*m2*zeta*zeta_conj**2 -  3*m1*zeta*zeta_conj**2 -  3*m3*zeta_conj**2*z3 -  6*m2*zeta_conj**2*z3 -  6*m1*zeta_conj**2*z3 +  3*zeta*zeta_conj**3*z3 +  3*zeta_conj**3*z3**2 -  6*m3*zeta_conj**2*z2 -  3*m2*zeta_conj**2*z2 -  6*m1*zeta_conj**2*z2 +  3*zeta*zeta_conj**3*z2 +  9*zeta_conj**3*z3*z2 +  3*zeta_conj**3*z2**2 -  6*m3*zeta_conj**2*z1 -  6*m2*zeta_conj**2*z1 -  3*m1*zeta_conj**2*z1 +  3*zeta*zeta_conj**3*z1 +  9*zeta_conj**3*z3*z1 +  9*zeta_conj**3*z2*z1 +  3*zeta_conj**3*z1**2 -  m3*m1*z1_conj -  m2*m1*z1_conj -  m1**2*z1_conj +  2*m3*zeta*zeta_conj*z1_conj +  2*m2*zeta*zeta_conj*z1_conj +  2*m1*zeta*zeta_conj*z1_conj +  m3*zeta_conj*z3*z1_conj +
				3*m2*zeta_conj*z3*z1_conj +  6*m1*zeta_conj*z3*z1_conj -  3*zeta*zeta_conj**2*z3*z1_conj -  3*zeta_conj**2*z3**2*z1_conj +  3*m3*zeta_conj*z2*z1_conj +  m2*zeta_conj*z2*z1_conj +  6*m1*zeta_conj*z2*z1_conj -  3*zeta*zeta_conj**2*z2*z1_conj -  9*zeta_conj**2*z3*z2*z1_conj -  3*zeta_conj**2*z2**2*z1_conj +  3*m3*zeta_conj*z1*z1_conj +  3*m2*zeta_conj*z1*z1_conj +  4*m1*zeta_conj*z1*z1_conj -  3*zeta*zeta_conj**2*z1*z1_conj -  9*zeta_conj**2*z3*z1*z1_conj -  9*zeta_conj**2*z2*z1*z1_conj -  3*zeta_conj**2*z1**2*z1_conj -  z2_conj*(m2*(m3 + m2 + m1) +  3*zeta_conj**2*(z3**2 + z2**2 + 3*z2*z1 +  z1**2 + 3*z3*(z2 + z1) +  zeta*(z3 + z2 + z1)) -  zeta_conj*(m1*(2*zeta + 3*z3 + 3 *z2 + z1) +  2*m2*(zeta + 3*z3 + 2*z2 + 3*z1) +
				m3*(2*zeta + z3 + 3*(z2 + z1)) ) + (m3*zeta + m2*zeta +  m1*zeta - m3*z3 + 3*m2*z3 +  3*m1*z3 + 2*m2*z2 +  3*m1*z2 + 3*m2*z1 +  2*m1*z1 -  3*zeta_conj*(z3**2 + z2**2 + 3*z2*z1 +  z1**2 + 3*z3*(z2 + z1) +  zeta*(z3 + z2 + z1)))*z1_conj) -  z3_conj*(m3**2 + m3*m2 + m3*m1 -  2*m3*zeta*zeta_conj -  2*m2*zeta*zeta_conj -  2*m1*zeta*zeta_conj -  4*m3*zeta_conj*z3 -  3*m2*zeta_conj*z3 -  3*m1*zeta_conj*z3 +  3*zeta*zeta_conj**2*z3 +  3*zeta_conj**2*z3**2 -  6*m3*zeta_conj*z2 -  m2*zeta_conj*z2 -  3*m1*zeta_conj*z2 +  3*zeta*zeta_conj**2*z2 +  9*zeta_conj**2*z3*z2 +  3*zeta_conj**2*z2**2 -  6*m3*zeta_conj*z1 -  3*m2*zeta_conj*z1 -  m1*zeta_conj*z1 +  3*zeta*zeta_conj**2*z1 +  9*zeta_conj**2*z3*z1 +  9*zeta_conj**2*z2*z1 +  3*zeta_conj**2*z1**2 +  (m2*zeta + m1*zeta + 3*m1*z3 - m2*z2+ 3*m1*z2 +
				2*m1*z1 +  m3*(zeta + 2*z3 +  3*(z2 + z1)) -  3*zeta_conj*(z3**2 + z2**2 + 3*z2*z1 +  z1**2 + 3*z3*(z2 + z1) +  zeta*(z3 + z2 + z1)))*z1_conj +  z2_conj*(m3*zeta + m2*zeta +  m1*zeta + 2*m3*z3 +  3*m2*z3 + 3*m3*z2 +  2*m2*z2 + 3*m3*z1 +  3*m2*z1 - m1*z1 -  3*zeta_conj*(z3**2 + z2**2 + 3*z2*z1 +  z1**2 + 3*z3*(z2 + z1) +  zeta*(z3 + z2 + z1)) +  3*(z3**2 + z2**2 + 3*z2*z1 +  z1**2 + 3*z3*(z2 + z1) +  zeta*(z3 + z2 + z1))*z1_conj)))

		coeff7 = (-3*m3**2*zeta*zeta_conj -  6*m3*m2*zeta*zeta_conj -  3*m2**2*zeta*zeta_conj -  6*m3*m1*zeta*zeta_conj -  6*m2*m1*zeta*zeta_conj -  3*m1**2*zeta*zeta_conj +  m3**2*zeta_conj*z3 -  2*m3*m2*zeta_conj*z3 -  3*m2**2*zeta_conj*z3 -  2*m3*m1*zeta_conj*z3 -  6*m2*m1*zeta_conj*z3 -  3*m1**2*zeta_conj*z3 +  6*m3*zeta*zeta_conj**2*z3 +  9*m2*zeta*zeta_conj**2*z3 +  9*m1*zeta*zeta_conj**2*z3 +  6*m2*zeta_conj**2*z3**2 +  6*m1*zeta_conj**2*z3**2 -  3*zeta*zeta_conj**3*z3**2 -  zeta_conj**3*z3**3 -  3*m3**2*zeta_conj*z2 -  2*m3*m2*zeta_conj*z2 +  m2**2*zeta_conj*z2 -  6*m3*m1*zeta_conj*z2 -  2*m2*m1*zeta_conj*z2 -  3*m1**2*zeta_conj*z2 +  9*m3*zeta*zeta_conj**2*z2 +  6*m2*zeta*zeta_conj**2*z2 +  9*m1*zeta*zeta_conj**2*z2 +  9*m3*zeta_conj**2*z3*z2 +  9*m2*zeta_conj**2*z3*z2 +  18*m1*zeta_conj**2*z3*z2 -  9*zeta*zeta_conj**3*z3*z2 -
				9*zeta_conj**3*z3**2*z2 +  6*m3*zeta_conj**2*z2**2 +  6*m1*zeta_conj**2*z2**2 -  3*zeta*zeta_conj**3*z2**2 -  9*zeta_conj**3*z3*z2**2 -  zeta_conj**3*z2**3 -  3*m3**2*zeta_conj*z1 -  6*m3*m2*zeta_conj*z1 -  3*m2**2*zeta_conj*z1 -  2*m3*m1*zeta_conj*z1 -  2*m2*m1*zeta_conj*z1 +  m1**2*zeta_conj*z1 +  9*m3*zeta*zeta_conj**2*z1 +  9*m2*zeta*zeta_conj**2*z1 +  6*m1*zeta*zeta_conj**2*z1 +  9*m3*zeta_conj**2*z3*z1 +  18*m2*zeta_conj**2*z3*z1 +  9*m1*zeta_conj**2*z3*z1 -  9*zeta*zeta_conj**3*z3*z1 -  9*zeta_conj**3*z3**2*z1 +  18*m3*zeta_conj**2*z2*z1 +  9*m2*zeta_conj**2*z2*z1 +  9*m1*zeta_conj**2*z2*z1 -  9*zeta*zeta_conj**3*z2*z1 -  27*zeta_conj**3*z3*z2*z1 -  9*zeta_conj**3*z2**2*z1 +  6*m3*zeta_conj**2*z1**2 +  6*m2*zeta_conj**2*z1**2 -  3*zeta*zeta_conj**3*z1**2 -  9*zeta_conj**3*z3*z1**2 -  9*zeta_conj**3*z2*z1**2 -  zeta_conj**3*z1**3 +
				m3**2*zeta*z1_conj +  2*m3*m2*zeta*z1_conj +  m2**2*zeta*z1_conj +  2*m3*m1*zeta*z1_conj +  2*m2*m1*zeta*z1_conj +  m1**2*zeta*z1_conj -  m3**2*z3*z1_conj -  m3*m2*z3*z1_conj +  m3*m1*z3*z1_conj +  3*m2*m1*z3*z1_conj +  3*m1**2*z3*z1_conj -  4*m3*zeta*zeta_conj*z3*z1_conj -  6*m2*zeta*zeta_conj*z3*z1_conj -  6*m1*zeta*zeta_conj*z3*z1_conj +  m3*zeta_conj*z3**2*z1_conj -  3*m2*zeta_conj*z3**2*z1_conj -  6*m1*zeta_conj*z3**2*z1_conj +  3*zeta*zeta_conj**2*z3**2*z1_conj +  zeta_conj**2*z3**3*z1_conj -  m3*m2*z2*z1_conj -  m2**2*z2*z1_conj +  3*m3*m1*z2*z1_conj +  m2*m1*z2*z1_conj +  3*m1**2*z2*z1_conj -  6*m3*zeta*zeta_conj*z2*z1_conj - 
				4*m2*zeta*zeta_conj*z2*z1_conj - 6*m1*zeta*zeta_conj*z2*z1_conj -  3*m3*zeta_conj*z3*z2*z1_conj -  3*m2*zeta_conj*z3*z2*z1_conj -  18*m1*zeta_conj*z3*z2*z1_conj +  9*zeta*zeta_conj**2*z3*z2*z1_conj +  9*zeta_conj**2*z3**2*z2*z1_conj -  3*m3*zeta_conj*z2**2*z1_conj +  m2*zeta_conj*z2**2*z1_conj -  6*m1*zeta_conj*z2**2*z1_conj +  3*zeta*zeta_conj**2*z2**2*z1_conj +  9*zeta_conj**2*z3*z2**2*z1_conj +  zeta_conj**2*z2**3*z1_conj +  2*m3*m1*z1*z1_conj +  2*m2*m1*z1*z1_conj +  m1**2*z1*z1_conj -  6*m3*zeta*zeta_conj*z1*z1_conj -  6*m2*zeta*zeta_conj*z1*z1_conj -  4*m1*zeta*zeta_conj*z1*z1_conj -  3*m3*zeta_conj*z3*z1*z1_conj -  9*m2*zeta_conj*z3*z1*z1_conj -  12*m1*zeta_conj*z3*z1*z1_conj + 
				9*zeta*zeta_conj**2*z3*z1*z1_conj +  9*zeta_conj**2*z3**2*z1*z1_conj -  9*m3*zeta_conj*z2*z1*z1_conj -  3*m2*zeta_conj*z2*z1*z1_conj -  12*m1*zeta_conj*z2*z1*z1_conj +  9*zeta*zeta_conj**2*z2*z1*z1_conj +  27*zeta_conj**2*z3*z2*z1*z1_conj +  9*zeta_conj**2*z2**2*z1*z1_conj -  3*m3*zeta_conj*z1**2*z1_conj -  3*m2*zeta_conj*z1**2*z1_conj -  2*m1*zeta_conj*z1**2*z1_conj +  3*zeta*zeta_conj**2*z1**2*z1_conj +  9*zeta_conj**2*z3*z1**2*z1_conj +  9*zeta_conj**2*z2*z1**2*z1_conj +  zeta_conj**2*z1**3*z1_conj +  z2_conj*(m3**2*zeta + 2*m3*m2*zeta +  m2**2*zeta + 2*m3*m1*zeta +  2*m2*m1*zeta + m1**2*zeta -  m3**2*z3 + m3*m2*z3 +  3*m2**2*z3 - m3*m1*z3 +  3*m2*m1*z3 + 2*m3*m2*z2 +  m2**2*z2 + 2*m2*m1*z2 +  3*m3*m2*z1 + 3*m2**2*z1 -
				m3*m1*z1 + m2*m1*z1 -  m1**2*z1 +  zeta_conj**2*(z3**3 + z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1) +  3*z3**2*(zeta + 3*(z2 + z1)) +  9*z3*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1))) +  zeta_conj*(-(m1*(3*z3**2 + 3*z2**2 -  z1*(-4*zeta + z1) +  3*z2*(2*zeta + z1) +  3*z3*(2*zeta + 3*z2 + z1))) - 2*m2*(3*z3**2 + z2**2 +  3*z1*(zeta + z1) +  2*z2*(zeta + 3*z1) +  3*z3*(zeta + 2*z2 + 3*z1)) +  m3*(z3**2 -  z3*(4*zeta + 3*(z2 + z1)) -  3*(z2**2 + 3*z2*z1 + z1**2 +  2*zeta*(z2 + z1)))) +  (3*m2*zeta*z3 + 3*m1*zeta*z3 +  3*m2*z3**2 + 3*m1*z3**2 +  2*m2*zeta*z2 +  3*m1*zeta*z2 + 6*m2*z3*z2 +  9*m1*z3*z2 + m2*z2**2 +  3*m1*z2**2 + 3*m2*zeta*z1 +  2*m1*zeta*z1 + 9*m2*z3*z1 +  6*m1*z3*z1 + 6*m2*z2*z1 +  6*m1*z2*z1 + 3*m2*z1**2 +
				m1*z1**2 +  m3*(zeta - z3)*(2*z3 + 3*(z2 + z1)) -  zeta_conj*(z3**3 + z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1) +  3*z3**2*(zeta + 3*(z2 + z1)) +  9*z3*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1))))*z1_conj) +  z3_conj*(m3**2*zeta + 2*m3*m2*zeta +  m2**2*zeta + 2*m3*m1*zeta +  2*m2*m1*zeta + m1**2*zeta +  m3**2*z3 + 2*m3*m2*z3 +  2*m3*m1*z3 -  4*m3*zeta*zeta_conj*z3 -  6*m2*zeta*zeta_conj*z3 -  6*m1*zeta*zeta_conj*z3 -  2*m3*zeta_conj*z3**2 -  3*m2*zeta_conj*z3**2 -  3*m1*zeta_conj*z3**2 +  3*zeta*zeta_conj**2*z3**2 +  zeta_conj**2*z3**3 + 3*m3**2*z2 +  m3*m2*z2 - m2**2*z2 +  3*m3*m1*z2 - m2*m1*z2 -  6*m3*zeta*zeta_conj*z2 -  4*m2*zeta*zeta_conj*z2 -  6*m1*zeta*zeta_conj*z2 -  12*m3*zeta_conj*z3*z2 -  3*m2*zeta_conj*z3*z2 -  9*m1*zeta_conj*z3*z2 + 
				9*zeta*zeta_conj**2*z3*z2 +  9*zeta_conj**2*z3**2*z2 -  6*m3*zeta_conj*z2**2 +  m2*zeta_conj*z2**2 -  3*m1*zeta_conj*z2**2 +  3*zeta*zeta_conj**2*z2**2 +  9*zeta_conj**2*z3*z2**2 +  zeta_conj**2*z2**3 + 3*m3**2*z1 +  3*m3*m2*z1 + m3*m1*z1 -  m2*m1*z1 - m1**2*z1 -  6*m3*zeta*zeta_conj*z1 -  6*m2*zeta*zeta_conj*z1 -  4*m1*zeta*zeta_conj*z1 -  12*m3*zeta_conj*z3*z1 -  9*m2*zeta_conj*z3*z1 -  3*m1*zeta_conj*z3*z1 +  9*zeta*zeta_conj**2*z3*z1 +  9*zeta_conj**2*z3**2*z1 -  18*m3*zeta_conj*z2*z1 -  3*m2*zeta_conj*z2*z1 -  3*m1*zeta_conj*z2*z1 +  9*zeta*zeta_conj**2*z2*z1 +  27*zeta_conj**2*z3*z2*z1 +  9*zeta_conj**2*z2**2*z1 -  6*m3*zeta_conj*z1**2 -  3*m2*zeta_conj*z1**2 +  m1*zeta_conj*z1**2 +  3*zeta*zeta_conj**2*z1**2 +  9*zeta_conj**2*z3*z1**2 +  9*zeta_conj**2*z2*z1**2 +  zeta_conj**2*z1**3 +  (3*m2*zeta*z3 + 3*m1*zeta*z3 +  3*m1*z3**2 +
				2*m2*zeta*z2 +  3*m1*zeta*z2 - 3*m2*z3*z2 +  9*m1*z3*z2 - 2*m2*z2**2 +  3*m1*z2**2 + 3*m2*zeta*z1 +  2*m1*zeta*z1 + 6*m1*z3*z1 -  3*m2*z2*z1 + 6*m1*z2*z1 +  m1*z1**2 +  m3*(z3**2 +  2*z3*(zeta + 3*(z2 + z1)) +  3*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1))) -  zeta_conj*(z3**3 + z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1) +  3*z3**2*(zeta + 3*(z2 + z1)) +  9*z3*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1))))*z1_conj +  z2_conj*(2*m3*zeta*z3 +  3*m2*zeta*z3 +  3*m1*zeta*z3 + m3*z3**2 +  3*m2*z3**2 + 3*m3*zeta*z2 +  2*m2*zeta*z2 +  3*m1*zeta*z2 + 6*m3*z3*z2 +  6*m2*z3*z2 + 3*m3*z2**2 +  m2*z2**2 + 3*m3*zeta*z1 +  3*m2*zeta*z1 +  2*m1*zeta*z1 + 6*m3*z3*z1 +  9*m2*z3*z1 - 3*m1*z3*z1 +  9*m3*z2*z1 +
				6*m2*z2*z1 - 3*m1*z2*z1 + 3*m3*z1**2 +  3*m2*z1**2 - 2*m1*z1**2 -  zeta_conj*(z3**3 + z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1) +  3*z3**2*(zeta + 3*(z2 + z1)) +  9*z3*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1))) +  (z3**3 + z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1) +  3*z3**2*(zeta + 3*(z2 + z1)) +  9*z3*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1)))*z1_conj)))

		coeff6 = (-(m3**3*zeta) -  3*m3**2*m2*zeta -  3*m3*m2**2*zeta - m2**3*zeta -  3*m3**2*m1*zeta -  6*m3*m2*m1*zeta -  3*m2**2*m1*zeta -  3*m3*m1**2*zeta -  3*m2*m1**2*zeta - m1**3*zeta +  m3**3*z3 + 2*m3**2*m2*z3 +  m3*m2**2*z3 + 2*m3**2*m1*z3 +  2*m3*m2*m1*z3 + m3*m1**2*z3 +  3*m3**2*zeta*zeta_conj*z3 +  12*m3*m2*zeta*zeta_conj*z3 +  9*m2**2*zeta*zeta_conj*z3 +  12*m3*m1*zeta*zeta_conj*z3 +  18*m2*m1*zeta*zeta_conj*z3 +  9*m1**2*zeta*zeta_conj*z3 -  2*m3**2*zeta_conj*z3**2 -  2*m3*m2*zeta_conj*z3**2 +  3*m2**2*zeta_conj*z3**2 -  2*m3*m1*zeta_conj*z3**2 +  6*m2*m1*zeta_conj*z3**2 +  3*m1**2*zeta_conj*z3**2 -  3*m3*zeta*zeta_conj**2*z3**2 -  9*m2*zeta*zeta_conj**2*z3**2 -  9*m1*zeta*zeta_conj**2*z3**2 +  m3*zeta_conj**2*z3**3 -  2*m2*zeta_conj**2*z3**3 -  2*m1*zeta_conj**2*z3**3 + 
				zeta*zeta_conj**3*z3**3 +  m3**2*m2*z2 + 2*m3*m2**2*z2 +  m2**3*z2 + 2*m3*m2*m1*z2 +  2*m2**2*m1*z2 + m2*m1**2*z2 +  9*m3**2*zeta*zeta_conj*z2 +  12*m3*m2*zeta*zeta_conj*z2 +  3*m2**2*zeta*zeta_conj*z2 +  18*m3*m1*zeta*zeta_conj*z2 +  12*m2*m1*zeta*zeta_conj*z2 +  9*m1**2*zeta*zeta_conj*z2 -  3*m3**2*zeta_conj*z3*z2 -  3*m2**2*zeta_conj*z3*z2 +  6*m3*m1*zeta_conj*z3*z2 +  6*m2*m1*zeta_conj*z3*z2 +  9*m1**2*zeta_conj*z3*z2 -  18*m3*zeta*zeta_conj**2*z3*z2 -  18*m2*zeta*zeta_conj**2*z3*z2 -  27*m1*zeta*zeta_conj**2*z3*z2 -  9*m2*zeta_conj**2*z3**2*z2 -  18*m1*zeta_conj**2*z3**2*z2 +  9*zeta*zeta_conj**3*z3**2*z2 +  3*zeta_conj**3*z3**3*z2 +  3*m3**2*zeta_conj*z2**2 -  2*m3*m2*zeta_conj*z2**2 -  2*m2**2*zeta_conj*z2**2 +  6*m3*m1*zeta_conj*z2**2 -  2*m2*m1*zeta_conj*z2**2 +  3*m1**2*zeta_conj*z2**2 -
				9*m3*zeta*zeta_conj**2*z2**2 -  3*m2*zeta*zeta_conj**2*z2**2 -  9*m1*zeta*zeta_conj**2*z2**2 -  9*m3*zeta_conj**2*z3*z2**2 -  18*m1*zeta_conj**2*z3*z2**2 +  9*zeta*zeta_conj**3*z3*z2**2 +  9*zeta_conj**3*z3**2*z2**2 -  2*m3*zeta_conj**2*z2**3 +  m2*zeta_conj**2*z2**3 -  2*m1*zeta_conj**2*z2**3 +  zeta*zeta_conj**3*z2**3 +  3*zeta_conj**3*z3*z2**3 +  m3**2*m1*z1 + 2*m3*m2*m1*z1 +  m2**2*m1*z1 + 2*m3*m1**2*z1 +  2*m2*m1**2*z1 + m1**3*z1 +  9*m3**2*zeta*zeta_conj*z1 +  18*m3*m2*zeta*zeta_conj*z1 +  9*m2**2*zeta*zeta_conj*z1 +  12*m3*m1*zeta*zeta_conj*z1 +  12*m2*m1*zeta*zeta_conj*z1 +  3*m1**2*zeta*zeta_conj*z1 -  3*m3**2*zeta_conj*z3*z1 +  6*m3*m2*zeta_conj*z3*z1 +  9*m2**2*zeta_conj*z3*z1 +  6*m2*m1*zeta_conj*z3*z1 -  3*m1**2*zeta_conj*z3*z1 -  18*m3*zeta*zeta_conj**2*z3*z1 -  27*m2*zeta*zeta_conj**2*z3*z1 -
				18*m1*zeta*zeta_conj**2*z3*z1 -  18*m2*zeta_conj**2*z3**2*z1 -  9*m1*zeta_conj**2*z3**2*z1 +  9*zeta*zeta_conj**3*z3**2*z1 +  3*zeta_conj**3*z3**3*z1 +  9*m3**2*zeta_conj*z2*z1 +  6*m3*m2*zeta_conj*z2*z1 -  3*m2**2*zeta_conj*z2*z1 +  6*m3*m1*zeta_conj*z2*z1 -  3*m1**2*zeta_conj*z2*z1 -  27*m3*zeta*zeta_conj**2*z2*z1 -  18*m2*zeta*zeta_conj**2*z2*z1 -  18*m1*zeta*zeta_conj**2*z2*z1 -  27*m3*zeta_conj**2*z3*z2*z1 -  27*m2*zeta_conj**2*z3*z2*z1 -  27*m1*zeta_conj**2*z3*z2*z1 +  27*zeta*zeta_conj**3*z3*z2*z1 +  27*zeta_conj**3*z3**2*z2*z1 -  18*m3*zeta_conj**2*z2**2*z1 -  9*m1*zeta_conj**2*z2**2*z1 +  9*zeta*zeta_conj**3*z2**2*z1 +  27*zeta_conj**3*z3*z2**2*z1 +  3*zeta_conj**3*z2**3*z1 +  3*m3**2*zeta_conj*z1**2 +  6*m3*m2*zeta_conj*z1**2 +  3*m2**2*zeta_conj*z1**2 -  2*m3*m1*zeta_conj*z1**2 -  2*m2*m1*zeta_conj*z1**2 -
				2*m1**2*zeta_conj*z1**2 -  9*m3*zeta*zeta_conj**2*z1**2 -  9*m2*zeta*zeta_conj**2*z1**2 -  3*m1*zeta*zeta_conj**2*z1**2 -  9*m3*zeta_conj**2*z3*z1**2 -  18*m2*zeta_conj**2*z3*z1**2 +  9*zeta*zeta_conj**3*z3*z1**2 +  9*zeta_conj**3*z3**2*z1**2 -  18*m3*zeta_conj**2*z2*z1**2 -  9*m2*zeta_conj**2*z2*z1**2 +  9*zeta*zeta_conj**3*z2*z1**2 +  27*zeta_conj**3*z3*z2*z1**2 +  9*zeta_conj**3*z2**2*z1**2 -  2*m3*zeta_conj**2*z1**3 -  2*m2*zeta_conj**2*z1**3 +  m1*zeta_conj**2*z1**3 +  zeta*zeta_conj**3*z1**3 +  3*zeta_conj**3*z3*z1**3 +  3*zeta_conj**3*z2*z1**3 -  m3**2*zeta*z3*z1_conj -  4*m3*m2*zeta*z3*z1_conj -  3*m2**2*zeta*z3*z1_conj -  4*m3*m1*zeta*z3*z1_conj -  6*m2*m1*zeta*z3*z1_conj -  3*m1**2*zeta*z3*z1_conj +  m3**2*z3**2*z1_conj +  2*m3*m2*z3**2*z1_conj +  m3*m1*z3**2*z1_conj -
				3*m2*m1*z3**2*z1_conj -  3*m1**2*z3**2*z1_conj +  2*m3*zeta*zeta_conj*z3**2*z1_conj +  6*m2*zeta*zeta_conj*z3**2*z1_conj +  6*m1*zeta*zeta_conj*z3**2*z1_conj -  m3*zeta_conj*z3**3*z1_conj +  m2*zeta_conj*z3**3*z1_conj +  2*m1*zeta_conj*z3**3*z1_conj -  zeta*zeta_conj**2*z3**3*z1_conj -  3*m3**2*zeta*z2*z1_conj -  4*m3*m2*zeta*z2*z1_conj -  m2**2*zeta*z2*z1_conj -  6*m3*m1*zeta*z2*z1_conj -  4*m2*m1*zeta*z2*z1_conj -  3*m1**2*zeta*z2*z1_conj +  3*m3**2*z3*z2*z1_conj +  4*m3*m2*z3*z2*z1_conj +  3*m2**2*z3*z2*z1_conj -  3*m3*m1*z3*z2*z1_conj -  3*m2*m1*z3*z2*z1_conj -  9*m1**2*z3*z2*z1_conj +  12*m3*zeta*zeta_conj*z3*z2*z1_conj +  12*m2*zeta*zeta_conj*z3*z2*z1_conj + 
				18*m1*zeta*zeta_conj*z3*z2*z1_conj -  3*m3*zeta_conj*z3**2*z2*z1_conj +  3*m2*zeta_conj*z3**2*z2*z1_conj +  18*m1*zeta_conj*z3**2*z2*z1_conj -  9*zeta*zeta_conj**2*z3**2*z2*z1_conj -  3*zeta_conj**2*z3**3*z2*z1_conj +  2*m3*m2*z2**2*z1_conj +  m2**2*z2**2*z1_conj -  3*m3*m1*z2**2*z1_conj +  m2*m1*z2**2*z1_conj -  3*m1**2*z2**2*z1_conj +  6*m3*zeta*zeta_conj*z2**2*z1_conj +  2*m2*zeta*zeta_conj*z2**2*z1_conj +  6*m1*zeta*zeta_conj*z2**2*z1_conj +  3*m3*zeta_conj*z3*z2**2*z1_conj -  3*m2*zeta_conj*z3*z2**2*z1_conj +  18*m1*zeta_conj*z3*z2**2*z1_conj -  9*zeta*zeta_conj**2*z3*z2**2*z1_conj -  9*zeta_conj**2*z3**2*z2**2*z1_conj +  m3*zeta_conj*z2**3*z1_conj -  m2*zeta_conj*z2**3*z1_conj +  2*m1*zeta_conj*z2**3*z1_conj -
				zeta*zeta_conj**2*z2**3*z1_conj -  3*zeta_conj**2*z3*z2**3*z1_conj -  3*m3**2*zeta*z1*z1_conj -  6*m3*m2*zeta*z1*z1_conj -  3*m2**2*zeta*z1*z1_conj -  4*m3*m1*zeta*z1*z1_conj -  4*m2*m1*zeta*z1*z1_conj -  m1**2*zeta*z1*z1_conj +  3*m3**2*z3*z1*z1_conj +  3*m3*m2*z3*z1*z1_conj -  2*m3*m1*z3*z1*z1_conj -  6*m2*m1*z3*z1*z1_conj -  3*m1**2*z3*z1*z1_conj +  12*m3*zeta*zeta_conj*z3*z1*z1_conj +  18*m2*zeta*zeta_conj*z3*z1*z1_conj +  12*m1*zeta*zeta_conj*z3*z1*z1_conj -  3*m3*zeta_conj*z3**2*z1*z1_conj +  9*m2*zeta_conj*z3**2*z1*z1_conj +  12*m1*zeta_conj*z3**2*z1*z1_conj -  9*zeta*zeta_conj**2*z3**2*z1*z1_conj -  3*zeta_conj**2*z3**3*z1*z1_conj +  3*m3*m2*z2*z1*z1_conj + 
				3*m2**2*z2*z1*z1_conj -  6*m3*m1*z2*z1*z1_conj -  2*m2*m1*z2*z1*z1_conj -  3*m1**2*z2*z1*z1_conj +  18*m3*zeta*zeta_conj*z2*z1*z1_conj +  12*m2*zeta*zeta_conj*z2*z1*z1_conj +  12*m1*zeta*zeta_conj*z2*z1*z1_conj +  9*m3*zeta_conj*z3*z2*z1*z1_conj +  9*m2*zeta_conj*z3*z2*z1*z1_conj +  36*m1*zeta_conj*z3*z2*z1*z1_conj -  27*zeta*zeta_conj**2*z3*z2*z1*z1_conj -  27*zeta_conj**2*z3**2*z2*z1*z1_conj +  9*m3*zeta_conj*z2**2*z1*z1_conj -  3*m2*zeta_conj*z2**2*z1*z1_conj +  12*m1*zeta_conj*z2**2*z1*z1_conj -  9*zeta*zeta_conj**2*z2**2*z1*z1_conj -  27*zeta_conj**2*z3*z2**2*z1*z1_conj -  3*zeta_conj**2*z2**3*z1*z1_conj -  m3*m1*z1**2*z1_conj -  m2*m1*z1**2*z1_conj +  6*m3*zeta*zeta_conj*z1**2*z1_conj + 
				6*m2*zeta*zeta_conj*z1**2*z1_conj +  2*m1*zeta*zeta_conj*z1**2*z1_conj +  3*m3*zeta_conj*z3*z1**2*z1_conj +  9*m2*zeta_conj*z3*z1**2*z1_conj +  6*m1*zeta_conj*z3*z1**2*z1_conj -  9*zeta*zeta_conj**2*z3*z1**2*z1_conj -  9*zeta_conj**2*z3**2*z1**2*z1_conj +  9*m3*zeta_conj*z2*z1**2*z1_conj +  3*m2*zeta_conj*z2*z1**2*z1_conj +  6*m1*zeta_conj*z2*z1**2*z1_conj -  9*zeta*zeta_conj**2*z2*z1**2*z1_conj -  27*zeta_conj**2*z3*z2*z1**2*z1_conj -  9*zeta_conj**2*z2**2*z1**2*z1_conj +  m3*zeta_conj*z1**3*z1_conj +  m2*zeta_conj*z1**3*z1_conj -  zeta*zeta_conj**2*z1**3*z1_conj -  3*zeta_conj**2*z3*z1**3*z1_conj -  3*zeta_conj**2*z2*z1**3*z1_conj +  z2_conj*(-(m3**2*zeta*z3) -  4*m3*m2*zeta*z3 -  3*m2**2*zeta*z3 -  4*m3*m1*zeta*z3 -  6*m2*m1*zeta*z3 -
				3*m1**2*zeta*z3 + m3**2*z3**2 +  m3*m2*z3**2 - 3*m2**2*z3**2 +  2*m3*m1*z3**2 -  3*m2*m1*z3**2 -  3*m3**2*zeta*z2 -  4*m3*m2*zeta*z2 -  m2**2*zeta*z2 -  6*m3*m1*zeta*z2 -  4*m2*m1*zeta*z2 -  3*m1**2*zeta*z2 +  3*m3**2*z3*z2 -  2*m3*m2*z3*z2 -  3*m2**2*z3*z2 +  3*m3*m1*z3*z2 -  6*m2*m1*z3*z2 -  m3*m2*z2**2 - m2*m1*z2**2 -  3*m3**2*zeta*z1 -  6*m3*m2*zeta*z1 -  3*m2**2*zeta*z1 -  4*m3*m1*zeta*z1 -  4*m2*m1*zeta*z1 -  m1**2*zeta*z1 +  3*m3**2*z3*z1 -  3*m3*m2*z3*z1 -  9*m2**2*z3*z1 +  4*m3*m1*z3*z1 -  3*m2*m1*z3*z1 +  3*m1**2*z3*z1 -  6*m3*m2*z2*z1 -  3*m2**2*z2*z1 +  3*m3*m1*z2*z1 -  2*m2*m1*z2*z1 +  3*m1**2*z2*z1 -  3*m3*m2*z1**2 - 3*m2**2*z1**2 +  2*m3*m1*z1**2 + m2*m1*z1**2 +  m1**2*z1**2 -  zeta_conj**2*(zeta*z1**3 +  9*z2**2*z1*(zeta + z1) + 
				3*z2*z1**2*(3*zeta + z1) +  z2**3*(zeta + 3*z1) +  z3**3*(zeta + 3*(z2 + z1)) +  9*z3**2*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1)) +  3*z3*(z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1))) +  zeta_conj*(m1*(z3**3 + z2**3 -  3*z2*z1*(-4*zeta + z1) -  z1**2*(-2*zeta + z1) +  3*z2**2*(2*zeta + z1) +  3*z3**2*(2*zeta + 3*z2 + z1) +  3*z3*(6*zeta*z2 + 3*z2**2 +  4*zeta*z1 + 3*z2*z1 -  z1**2)) +  m3*(-z3**3 + z2**3 +  9*z2*z1*(2*zeta + z1) +  z1**2*(6*zeta + z1) +  z2**2*(6*zeta + 9*z1) +  z3**2*(2*zeta - 3*(z2 + z1)) +  3*z3*(z2**2 + 3*z2*z1 + z1**2 +  4*zeta*(z2 + z1))) +  2*m2*(z3**3 +  6*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  z2**2*(zeta + 3*z1) +  3*z3**2*(zeta + 2*z2 + 3*z1) +  3*z3*(z2**2 + 3*z1*(zeta + z1) +  2*z2*(zeta + 3*z1)))) +  (-3*m2*zeta*z3**2 -  3*m1*zeta*z3**2 -
				m2*z3**3 -  m1*z3**3 -  6*m2*zeta*z3*z2 -  9*m1*zeta*z3*z2 -  6*m2*z3**2*z2 -  9*m1*z3**2*z2 -  m2*zeta*z2**2 -  3*m1*zeta*z2**2 -  3*m2*z3*z2**2 -  9*m1*z3*z2**2 - m1*z2**3 -  9*m2*zeta*z3*z1 -  6*m1*zeta*z3*z1 -  9*m2*z3**2*z1 -  6*m1*z3**2*z1 -  6*m2*zeta*z2*z1 -  6*m1*zeta*z2*z1 -  18*m2*z3*z2*z1 -  18*m1*z3*z2*z1 -  3*m2*z2**2*z1 -  6*m1*z2**2*z1 -  3*m2*zeta*z1**2 -  m1*zeta*z1**2 -  9*m2*z3*z1**2 -  3*m1*z3*z1**2 -  6*m2*z2*z1**2 -  3*m1*z2*z1**2 - m2*z1**3 +  m3*(-zeta + z3)*(z3**2 + 6*z3*(z2 + z1) +  3*(z2**2 + 3*z2*z1 + z1**2)) + zeta_conj*(zeta*z1**3 +  9*z2**2*z1*(zeta + z1) +  3*z2*z1**2*(3*zeta + z1) +  z2**3*(zeta + 3*z1) +  z3**3*(zeta + 3*(z2 + z1)) +  9*z3**2*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1)) +  3*z3*(z2**3 +  9*z2*z1*(zeta + z1) + 
				z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1))))*z1_conj) -  z3_conj*(m3**2*zeta*z3 +  4*m3*m2*zeta*z3 +  3*m2**2*zeta*z3 +  4*m3*m1*zeta*z3 +  6*m2*m1*zeta*z3 +  3*m1**2*zeta*z3 +  m3*m2*z3**2 + m3*m1*z3**2 -  2*m3*zeta*zeta_conj*z3**2 -  6*m2*zeta*zeta_conj*z3**2 -  6*m1*zeta*zeta_conj*z3**2 -  m2*zeta_conj*z3**3 -  m1*zeta_conj*z3**3 +  zeta*zeta_conj**2*z3**3 +  3*m3**2*zeta*z2 +  4*m3*m2*zeta*z2 +  m2**2*zeta*z2 +  6*m3*m1*zeta*z2 +  4*m2*m1*zeta*z2 +  3*m1**2*zeta*z2 +  3*m3**2*z3*z2 +  2*m3*m2*z3*z2 -  3*m2**2*z3*z2 +  6*m3*m1*z3*z2 -  3*m2*m1*z3*z2 -  12*m3*zeta*zeta_conj*z3*z2 -  12*m2*zeta*zeta_conj*z3*z2 -  18*m1*zeta*zeta_conj*z3*z2 -  6*m3*zeta_conj*z3**2*z2 -  3*m2*zeta_conj*z3**2*z2 -  9*m1*zeta_conj*z3**2*z2 +  9*zeta*zeta_conj**2*z3**2*z2 +  3*zeta_conj**2*z3**3*z2 + 
				3*m3**2*z2**2 - m3*m2*z2**2 -  m2**2*z2**2 + 3*m3*m1*z2**2 -  2*m2*m1*z2**2 -  6*m3*zeta*zeta_conj*z2**2 -  2*m2*zeta*zeta_conj*z2**2 -  6*m1*zeta*zeta_conj*z2**2 -  12*m3*zeta_conj*z3*z2**2 +  3*m2*zeta_conj*z3*z2**2 -  9*m1*zeta_conj*z3*z2**2 +  9*zeta*zeta_conj**2*z3*z2**2 +  9*zeta_conj**2*z3**2*z2**2 -  2*m3*zeta_conj*z2**3 +  m2*zeta_conj*z2**3 -  m1*zeta_conj*z2**3 +  zeta*zeta_conj**2*z2**3 +  3*zeta_conj**2*z3*z2**3 +  3*m3**2*zeta*z1 +  6*m3*m2*zeta*z1 +  3*m2**2*zeta*z1 +  4*m3*m1*zeta*z1 +  4*m2*m1*zeta*z1 +  m1**2*zeta*z1 +  3*m3**2*z3*z1 +  6*m3*m2*z3*z1 +  2*m3*m1*z3*z1 -  3*m2*m1*z3*z1 -  3*m1**2*z3*z1 -  12*m3*zeta*zeta_conj*z3*z1 -  18*m2*zeta*zeta_conj*z3*z1 -  12*m1*zeta*zeta_conj*z3*z1 -  6*m3*zeta_conj*z3**2*z1 -  9*m2*zeta_conj*z3**2*z1 -  3*m1*zeta_conj*z3**2*z1 +  9*zeta*zeta_conj**2*z3**2*z1 + 
				3*zeta_conj**2*z3**3*z1 +  9*m3**2*z2*z1 +  3*m3*m2*z2*z1 -  3*m2**2*z2*z1 +  3*m3*m1*z2*z1 -  4*m2*m1*z2*z1 -  3*m1**2*z2*z1 -  18*m3*zeta*zeta_conj*z2*z1 -  12*m2*zeta*zeta_conj*z2*z1 -  12*m1*zeta*zeta_conj*z2*z1 -  36*m3*zeta_conj*z3*z2*z1 -  9*m2*zeta_conj*z3*z2*z1 -  9*m1*zeta_conj*z3*z2*z1 +  27*zeta*zeta_conj**2*z3*z2*z1 +  27*zeta_conj**2*z3**2*z2*z1 -  18*m3*zeta_conj*z2**2*z1 +  3*m2*zeta_conj*z2**2*z1 -  3*m1*zeta_conj*z2**2*z1 +  9*zeta*zeta_conj**2*z2**2*z1 +  27*zeta_conj**2*z3*z2**2*z1 +  3*zeta_conj**2*z2**3*z1 +  3*m3**2*z1**2 + 3*m3*m2*z1**2 -  m3*m1*z1**2 - 2*m2*m1*z1**2 -  m1**2*z1**2 -  6*m3*zeta*zeta_conj*z1**2 -  6*m2*zeta*zeta_conj*z1**2 -  2*m1*zeta*zeta_conj*z1**2 -  12*m3*zeta_conj*z3*z1**2 -  9*m2*zeta_conj*z3*z1**2 +  3*m1*zeta_conj*z3*z1**2 +  9*zeta*zeta_conj**2*z3*z1**2 +  9*zeta_conj**2*z3**2*z1**2 - 
				18*m3*zeta_conj*z2*z1**2 -  3*m2*zeta_conj*z2*z1**2 +  3*m1*zeta_conj*z2*z1**2 +  9*zeta*zeta_conj**2*z2*z1**2 +  27*zeta_conj**2*z3*z2*z1**2 +  9*zeta_conj**2*z2**2*z1**2 -  2*m3*zeta_conj*z1**3 -  m2*zeta_conj*z1**3 +  m1*zeta_conj*z1**3 +  zeta*zeta_conj**2*z1**3 +  3*zeta_conj**2*z3*z1**3 +  3*zeta_conj**2*z2*z1**3 +  (m3*zeta*z3**2 +  3*m2*zeta*z3**2 +  6*m3*zeta*z3*z2 +  6*m2*zeta*z3*z2 +  3*m3*z3**2*z2 -  3*m2*z3**2*z2 +  3*m3*zeta*z2**2 +  m2*zeta*z2**2 +  6*m3*z3*z2**2 -  6*m2*z3*z2**2 + m3*z2**3 -  m2*z2**3 +  6*m3*zeta*z3*z1 +  9*m2*zeta*z3*z1 +  3*m3*z3**2*z1 +  9*m3*zeta*z2*z1 +  6*m2*zeta*z2*z1 +  18*m3*z3*z2*z1 -  9*m2*z3*z2*z1 +  9*m3*z2**2*z1 -  6*m2*z2**2*z1 +  3*m3*zeta*z1**2 +  3*m2*zeta*z1**2 +  6*m3*z3*z1**2 +  9*m3*z2*z1**2 -  3*m2*z2*z1**2 + m3*z1**3 +  m1*(z3**3 + z2**3 + 
				zeta*z1**2 +  3*z2*z1*(2*zeta + z1) +  3*z2**2*(zeta + 2*z1) +  3*z3**2*(zeta + 3*z2 + 2*z1) +  3*z3*(3*zeta*z2 + 3*z2**2 +  2*zeta*z1 + 6*z2*z1 +  z1**2)) -  zeta_conj*(zeta*z1**3 +  9*z2**2*z1*(zeta + z1) +  3*z2*z1**2*(3*zeta + z1) +  z2**3*(zeta + 3*z1) +  z3**3*(zeta + 3*(z2 + z1)) +  9*z3**2*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1)) +  3*z3*(z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1))))*z1_conj +  z2_conj*(m3*zeta*z3**2 +  3*m2*zeta*z3**2 +  3*m1*zeta*z3**2 + m2*z3**3 +  6*m3*zeta*z3*z2 +  6*m2*zeta*z3*z2 +  9*m1*zeta*z3*z2 +  3*m3*z3**2*z2 +  6*m2*z3**2*z2 +  3*m3*zeta*z2**2 +  m2*zeta*z2**2 +  3*m1*zeta*z2**2 +  6*m3*z3*z2**2 +  3*m2*z3*z2**2 + m3*z2**3 +  6*m3*zeta*z3*z1 +  9*m2*zeta*z3*z1 +  6*m1*zeta*z3*z1 +  3*m3*z3**2*z1 +
				9*m2*z3**2*z1 -  3*m1*z3**2*z1 +  9*m3*zeta*z2*z1 +  6*m2*zeta*z2*z1 +  6*m1*zeta*z2*z1 +  18*m3*z3*z2*z1 +  18*m2*z3*z2*z1 -  9*m1*z3*z2*z1 +  9*m3*z2**2*z1 +  3*m2*z2**2*z1 -  3*m1*z2**2*z1 +  3*m3*zeta*z1**2 +  3*m2*zeta*z1**2 +  m1*zeta*z1**2 +  6*m3*z3*z1**2 +  9*m2*z3*z1**2 -  6*m1*z3*z1**2 +  9*m3*z2*z1**2 +  6*m2*z2*z1**2 -  6*m1*z2*z1**2 + m3*z1**3 +  m2*z1**3 - m1*z1**3 -  zeta_conj*(zeta*z1**3 +  9*z2**2*z1*(zeta + z1) +  3*z2*z1**2*(3*zeta + z1) +  z2**3*(zeta + 3*z1) +  z3**3*(zeta + 3*(z2 + z1)) +  9*z3**2*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1)) +  3*z3*(z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1))) +  (zeta*z1**3 +  9*z2**2*z1*(zeta + z1) +  3*z2*z1**2*(3*zeta + z1) +  z2**3*(zeta + 3*z1) +  z3**3*(zeta + 3*(z2 + z1)) + 
				9*z3**2*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1)) +  3*z3*(z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1)))*z1_conj)))

		coeff5 = (3*m3**2*m2*zeta*z3 +  6*m3*m2**2*zeta*z3 +  3*m2**3*zeta*z3 +  3*m3**2*m1*zeta*z3 +  12*m3*m2*m1*zeta*z3 +  9*m2**2*m1*zeta*z3 +  6*m3*m1**2*zeta*z3 +  9*m2*m1**2*zeta*z3 +  3*m1**3*zeta*z3 -  2*m3**2*m2*z3**2 -  2*m3*m2**2*z3**2 -  2*m3**2*m1*z3**2 -  4*m3*m2*m1*z3**2 -  2*m3*m1**2*z3**2 -  6*m3*m2*zeta*zeta_conj*z3**2 -  9*m2**2*zeta*zeta_conj*z3**2 -  6*m3*m1*zeta*zeta_conj*z3**2 -  18*m2*m1*zeta*zeta_conj*z3**2 -  9*m1**2*zeta*zeta_conj*z3**2 +  2*m3*m2*zeta_conj*z3**3 -  m2**2*zeta_conj*z3**3 +  2*m3*m1*zeta_conj*z3**3 -  2*m2*m1*zeta_conj*z3**3 -  m1**2*zeta_conj*z3**3 +  3*m2*zeta*zeta_conj**2*z3**3 +  3*m1*zeta*zeta_conj**2*z3**3 +  3*m3**3*zeta*z2 +  6*m3**2*m2*zeta*z2 +  3*m3*m2**2*zeta*z2 +  9*m3**2*m1*zeta*z2 +  12*m3*m2*m1*zeta*z2 +  3*m2**2*m1*zeta*z2 +  9*m3*m1**2*zeta*z2 +
				6*m2*m1**2*zeta*z2 +  3*m1**3*zeta*z2 - 3*m3**3*z3*z2 -  5*m3**2*m2*z3*z2 -  5*m3*m2**2*z3*z2 -  3*m2**3*z3*z2 -  6*m3**2*m1*z3*z2 -  8*m3*m2*m1*z3*z2 -  6*m2**2*m1*z3*z2 -  3*m3*m1**2*z3*z2 -  3*m2*m1**2*z3*z2 -  9*m3**2*zeta*zeta_conj*z3*z2 -  24*m3*m2*zeta*zeta_conj*z3*z2 -  9*m2**2*zeta*zeta_conj*z3*z2 -  36*m3*m1*zeta*zeta_conj*z3*z2 -  36*m2*m1*zeta*zeta_conj*z3*z2 -  27*m1**2*zeta*zeta_conj*z3*z2 +  6*m3**2*zeta_conj*z3**2*z2 +  6*m3*m2*zeta_conj*z3**2*z2 +  3*m2**2*zeta_conj*z3**2*z2 +  6*m3*m1*zeta_conj*z3**2*z2 -  6*m2*m1*zeta_conj*z3**2*z2 -  9*m1**2*zeta_conj*z3**2*z2 +  9*m3*zeta*zeta_conj**2*z3**2*z2 +  18*m2*zeta*zeta_conj**2*z3**2*z2 +  27*m1*zeta*zeta_conj**2*z3**2*z2 -  3*m3*zeta_conj**2*z3**3*z2 +  3*m2*zeta_conj**2*z3**3*z2 +  6*m1*zeta_conj**2*z3**3*z2 -  3*zeta*zeta_conj**3*z3**3*z2 -  
				2*m3**2*m2*z2**2 -  2*m3*m2**2*z2**2 -  4*m3*m2*m1*z2**2 -  2*m2**2*m1*z2**2 -  2*m2*m1**2*z2**2 -  9*m3**2*zeta*zeta_conj*z2**2 -  6*m3*m2*zeta*zeta_conj*z2**2 -  18*m3*m1*zeta*zeta_conj*z2**2 -  6*m2*m1*zeta*zeta_conj*z2**2 -  9*m1**2*zeta*zeta_conj*z2**2 +  3*m3**2*zeta_conj*z3*z2**2 +  6*m3*m2*zeta_conj*z3*z2**2 +  6*m2**2*zeta_conj*z3*z2**2 -  6*m3*m1*zeta_conj*z3*z2**2 +  6*m2*m1*zeta_conj*z3*z2**2 -  9*m1**2*zeta_conj*z3*z2**2 +  18*m3*zeta*zeta_conj**2*z3*z2**2 +  9*m2*zeta*zeta_conj**2*z3*z2**2 +  27*m1*zeta*zeta_conj**2*z3*z2**2 +  18*m1*zeta_conj**2*z3**2*z2**2 -  9*zeta*zeta_conj**3*z3**2*z2**2 -  3*zeta_conj**3*z3**3*z2**2 -  m3**2*zeta_conj*z2**3 +  2*m3*m2*zeta_conj*z2**3 -  2*m3*m1*zeta_conj*z2**3 +  2*m2*m1*zeta_conj*z2**3 -  m1**2*zeta_conj*z2**3 +  3*m3*zeta*zeta_conj**2*z2**3 +  3*m1*zeta*zeta_conj**2*z2**3 +  3*m3*zeta_conj**2*z3*z2**3 - 
				3*m2*zeta_conj**2*z3*z2**3 +  6*m1*zeta_conj**2*z3*z2**3 -  3*zeta*zeta_conj**3*z3*z2**3 -  3*zeta_conj**3*z3**2*z2**3 +  3*m3**3*zeta*z1 +  9*m3**2*m2*zeta*z1 +  9*m3*m2**2*zeta*z1 +  3*m2**3*zeta*z1 +  6*m3**2*m1*zeta*z1 +  12*m3*m2*m1*zeta*z1 +  6*m2**2*m1*zeta*z1 +  3*m3*m1**2*zeta*z1 +  3*m2*m1**2*zeta*z1 -  3*m3**3*z3*z1 -  6*m3**2*m2*z3*z1 -  3*m3*m2**2*z3*z1 -  5*m3**2*m1*z3*z1 -  8*m3*m2*m1*z3*z1 -  3*m2**2*m1*z3*z1 -  5*m3*m1**2*z3*z1 -  6*m2*m1**2*z3*z1 -  3*m1**3*z3*z1 -  9*m3**2*zeta*zeta_conj*z3*z1 -  36*m3*m2*zeta*zeta_conj*z3*z1 -  27*m2**2*zeta*zeta_conj*z3*z1 -  24*m3*m1*zeta*zeta_conj*z3*z1 -  36*m2*m1*zeta*zeta_conj*z3*z1 -  9*m1**2*zeta*zeta_conj*z3*z1 +  6*m3**2*zeta_conj*z3**2*z1 +  6*m3*m2*zeta_conj*z3**2*z1 -  9*m2**2*zeta_conj*z3**2*z1 +  6*m3*m1*zeta_conj*z3**2*z1 - 
				6*m2*m1*zeta_conj*z3**2*z1 +  3*m1**2*zeta_conj*z3**2*z1 +  9*m3*zeta*zeta_conj**2*z3**2*z1 +  27*m2*zeta*zeta_conj**2*z3**2*z1 +  18*m1*zeta*zeta_conj**2*z3**2*z1 -  3*m3*zeta_conj**2*z3**3*z1 +  6*m2*zeta_conj**2*z3**3*z1 +  3*m1*zeta_conj**2*z3**3*z1 -  3*zeta*zeta_conj**3*z3**3*z1 -  3*m3**2*m2*z2*z1 -  6*m3*m2**2*z2*z1 -  3*m2**3*z2*z1 -  3*m3**2*m1*z2*z1 -  8*m3*m2*m1*z2*z1 -  5*m2**2*m1*z2*z1 -  6*m3*m1**2*z2*z1 -  5*m2*m1**2*z2*z1 -  3*m1**3*z2*z1 -  27*m3**2*zeta*zeta_conj*z2*z1 -  36*m3*m2*zeta*zeta_conj*z2*z1 -  9*m2**2*zeta*zeta_conj*z2*z1 -  36*m3*m1*zeta*zeta_conj*z2*z1 -  24*m2*m1*zeta*zeta_conj*z2*z1 -  9*m1**2*zeta*zeta_conj*z2*z1 +  9*m3**2*zeta_conj*z3*z2*z1 +  9*m2**2*zeta_conj*z3*z2*z1 +  9*m1**2*zeta_conj*z3*z2*z1 +  54*m3*zeta*zeta_conj**2*z3*z2*z1 +  54*m2*zeta*zeta_conj**2*z3*z2*z1 +  
				54*m1*zeta*zeta_conj**2*z3*z2*z1 +  27*m2*zeta_conj**2*z3**2*z2*z1 +  27*m1*zeta_conj**2*z3**2*z2*z1 -  27*zeta*zeta_conj**3*z3**2*z2*z1 -  9*zeta_conj**3*z3**3*z2*z1 -  9*m3**2*zeta_conj*z2**2*z1 +  6*m3*m2*zeta_conj*z2**2*z1 +  6*m2**2*zeta_conj*z2**2*z1 -  6*m3*m1*zeta_conj*z2**2*z1 +  6*m2*m1*zeta_conj*z2**2*z1 +  3*m1**2*zeta_conj*z2**2*z1 +  27*m3*zeta*zeta_conj**2*z2**2*z1 +  9*m2*zeta*zeta_conj**2*z2**2*z1 +  18*m1*zeta*zeta_conj**2*z2**2*z1 +  27*m3*zeta_conj**2*z3*z2**2*z1 +  27*m1*zeta_conj**2*z3*z2**2*z1 -  27*zeta*zeta_conj**3*z3*z2**2*z1 -  27*zeta_conj**3*z3**2*z2**2*z1 +  6*m3*zeta_conj**2*z2**3*z1 -  3*m2*zeta_conj**2*z2**3*z1 +  3*m1*zeta_conj**2*z2**3*z1 -  3*zeta*zeta_conj**3*z2**3*z1 -  9*zeta_conj**3*z3*z2**3*z1 -  2*m3**2*m1*z1**2 -  4*m3*m2*m1*z1**2 -  2*m2**2*m1*z1**2 -  2*m3*m1**2*z1**2 -  2*m2*m1**2*z1**2 -  
				9*m3**2*zeta*zeta_conj*z1**2 -  18*m3*m2*zeta*zeta_conj*z1**2 -  9*m2**2*zeta*zeta_conj*z1**2 -  6*m3*m1*zeta*zeta_conj*z1**2 -  6*m2*m1*zeta*zeta_conj*z1**2 +  3*m3**2*zeta_conj*z3*z1**2 -  6*m3*m2*zeta_conj*z3*z1**2 -  9*m2**2*zeta_conj*z3*z1**2 +  6*m3*m1*zeta_conj*z3*z1**2 +  6*m2*m1*zeta_conj*z3*z1**2 +  6*m1**2*zeta_conj*z3*z1**2 +  18*m3*zeta*zeta_conj**2*z3*z1**2 +  27*m2*zeta*zeta_conj**2*z3*z1**2 +  9*m1*zeta*zeta_conj**2*z3*z1**2 +  18*m2*zeta_conj**2*z3**2*z1**2 -  9*zeta*zeta_conj**3*z3**2*z1**2 -  3*zeta_conj**3*z3**3*z1**2 -  9*m3**2*zeta_conj*z2*z1**2 -  6*m3*m2*zeta_conj*z2*z1**2 +  3*m2**2*zeta_conj*z2*z1**2 +  6*m3*m1*zeta_conj*z2*z1**2 +  6*m2*m1*zeta_conj*z2*z1**2 +  6*m1**2*zeta_conj*z2*z1**2 +  27*m3*zeta*zeta_conj**2*z2*z1**2 +  18*m2*zeta*zeta_conj**2*z2*z1**2 +  9*m1*zeta*zeta_conj**2*z2*z1**2 +  27*m3*zeta_conj**2*z3*z2*z1**2 + 
				27*m2*zeta_conj**2*z3*z2*z1**2 -  27*zeta*zeta_conj**3*z3*z2*z1**2 -  27*zeta_conj**3*z3**2*z2*z1**2 +  18*m3*zeta_conj**2*z2**2*z1**2 -  9*zeta*zeta_conj**3*z2**2*z1**2 -  27*zeta_conj**3*z3*z2**2*z1**2 -  3*zeta_conj**3*z2**3*z1**2 -  m3**2*zeta_conj*z1**3 -  2*m3*m2*zeta_conj*z1**3 -  m2**2*zeta_conj*z1**3 +  2*m3*m1*zeta_conj*z1**3 +  2*m2*m1*zeta_conj*z1**3 +  3*m3*zeta*zeta_conj**2*z1**3 +  3*m2*zeta*zeta_conj**2*z1**3 +  3*m3*zeta_conj**2*z3*z1**3 +  6*m2*zeta_conj**2*z3*z1**3 -  3*m1*zeta_conj**2*z3*z1**3 -  3*zeta*zeta_conj**3*z3*z1**3 -  3*zeta_conj**3*z3**2*z1**3 +  6*m3*zeta_conj**2*z2*z1**3 +  3*m2*zeta_conj**2*z2*z1**3 -  3*m1*zeta_conj**2*z2*z1**3 -  3*zeta*zeta_conj**3*z2*z1**3 -  9*zeta_conj**3*z3*z2*z1**3 -  3*zeta_conj**3*z2**2*z1**3 +  2*m3*m2*zeta*z3**2*z1_conj +  3*m2**2*zeta*z3**2*z1_conj +  2*m3*m1*zeta*z3**2*z1_conj +  
				6*m2*m1*zeta*z3**2*z1_conj +  3*m1**2*zeta*z3**2*z1_conj -  m3*m2*z3**3*z1_conj -  m3*m1*z3**3*z1_conj +  m2*m1*z3**3*z1_conj +  m1**2*z3**3*z1_conj -  2*m2*zeta*zeta_conj*z3**3*z1_conj -  2*m1*zeta*zeta_conj*z3**3*z1_conj +  3*m3**2*zeta*z3*z2*z1_conj +  8*m3*m2*zeta*z3*z2*z1_conj +  3*m2**2*zeta*z3*z2*z1_conj +  12*m3*m1*zeta*z3*z2*z1_conj +  12*m2*m1*zeta*z3*z2*z1_conj +  9*m1**2*zeta*z3*z2*z1_conj -  3*m3**2*z3**2*z2*z1_conj -  5*m3*m2*z3**2*z2*z1_conj -  3*m2**2*z3**2*z2*z1_conj -  3*m3*m1*z3**2*z2*z1_conj +  3*m2*m1*z3**2*z2*z1_conj +  9*m1**2*z3**2*z2*z1_conj -  6*m3*zeta*zeta_conj*z3**2*z2*z1_conj -  12*m2*zeta*zeta_conj*z3**2*z2*z1_conj -  18*m1*zeta*zeta_conj*z3**2*z2*z1_conj +
				3*m3*zeta_conj*z3**3*z2*z1_conj -  m2*zeta_conj*z3**3*z2*z1_conj -  6*m1*zeta_conj*z3**3*z2*z1_conj +  3*zeta*zeta_conj**2*z3**3*z2*z1_conj +  3*m3**2*zeta*z2**2*z1_conj +  2*m3*m2*zeta*z2**2*z1_conj +  6*m3*m1*zeta*z2**2*z1_conj +  2*m2*m1*zeta*z2**2*z1_conj +  3*m1**2*zeta*z2**2*z1_conj -  3*m3**2*z3*z2**2*z1_conj -  5*m3*m2*z3*z2**2*z1_conj -  3*m2**2*z3*z2**2*z1_conj +  3*m3*m1*z3*z2**2*z1_conj -  3*m2*m1*z3*z2**2*z1_conj +  9*m1**2*z3*z2**2*z1_conj -  12*m3*zeta*zeta_conj*z3*z2**2*z1_conj -  6*m2*zeta*zeta_conj*z3*z2**2*z1_conj -  18*m1*zeta*zeta_conj*z3*z2**2*z1_conj +  3*m3*zeta_conj*z3**2*z2**2*z1_conj +  3*m2*zeta_conj*z3**2*z2**2*z1_conj -  18*m1*zeta_conj*z3**2*z2**2*z1_conj +  9*zeta*zeta_conj**2*z3**2*z2**2*z1_conj +
				3*zeta_conj**2*z3**3*z2**2*z1_conj -  m3*m2*z2**3*z1_conj +  m3*m1*z2**3*z1_conj -  m2*m1*z2**3*z1_conj +  m1**2*z2**3*z1_conj -  2*m3*zeta*zeta_conj*z2**3*z1_conj -  2*m1*zeta*zeta_conj*z2**3*z1_conj -  m3*zeta_conj*z3*z2**3*z1_conj +  3*m2*zeta_conj*z3*z2**3*z1_conj -  6*m1*zeta_conj*z3*z2**3*z1_conj +  3*zeta*zeta_conj**2*z3*z2**3*z1_conj +  3*zeta_conj**2*z3**2*z2**3*z1_conj +  3*m3**2*zeta*z3*z1*z1_conj +  12*m3*m2*zeta*z3*z1*z1_conj +  9*m2**2*zeta*z3*z1*z1_conj +  8*m3*m1*zeta*z3*z1*z1_conj +  12*m2*m1*zeta*z3*z1*z1_conj +  3*m1**2*zeta*z3*z1*z1_conj -  3*m3**2*z3**2*z1*z1_conj -  6*m3*m2*z3**2*z1*z1_conj -  2*m3*m1*z3**2*z1*z1_conj +  6*m2*m1*z3**2*z1*z1_conj +  3*m1**2*z3**2*z1*z1_conj -  
				6*m3*zeta*zeta_conj*z3**2*z1*z1_conj -  18*m2*zeta*zeta_conj*z3**2*z1*z1_conj -  12*m1*zeta*zeta_conj*z3**2*z1*z1_conj +  3*m3*zeta_conj*z3**3*z1*z1_conj -  3*m2*zeta_conj*z3**3*z1*z1_conj -  4*m1*zeta_conj*z3**3*z1*z1_conj +  3*zeta*zeta_conj**2*z3**3*z1*z1_conj +  9*m3**2*zeta*z2*z1*z1_conj +  12*m3*m2*zeta*z2*z1*z1_conj +  3*m2**2*zeta*z2*z1*z1_conj +  12*m3*m1*zeta*z2*z1*z1_conj +  8*m2*m1*zeta*z2*z1*z1_conj +  3*m1**2*zeta*z2*z1*z1_conj -  9*m3**2*z3*z2*z1*z1_conj -  12*m3*m2*z3*z2*z1*z1_conj -  9*m2**2*z3*z2*z1*z1_conj +  6*m3*m1*z3*z2*z1*z1_conj +  6*m2*m1*z3*z2*z1*z1_conj +  9*m1**2*z3*z2*z1*z1_conj -  36*m3*zeta*zeta_conj*z3*z2*z1*z1_conj -  36*m2*zeta*zeta_conj*z3*z2*z1*z1_conj - 
				36*m1*zeta*zeta_conj*z3*z2*z1*z1_conj +  9*m3*zeta_conj*z3**2*z2*z1*z1_conj -  9*m2*zeta_conj*z3**2*z2*z1*z1_conj -  36*m1*zeta_conj*z3**2*z2*z1*z1_conj +  27*zeta*zeta_conj**2*z3**2*z2*z1*z1_conj +  9*zeta_conj**2*z3**3*z2*z1*z1_conj -  6*m3*m2*z2**2*z1*z1_conj -  3*m2**2*z2**2*z1*z1_conj +  6*m3*m1*z2**2*z1*z1_conj -  2*m2*m1*z2**2*z1*z1_conj +  3*m1**2*z2**2*z1*z1_conj -  18*m3*zeta*zeta_conj*z2**2*z1*z1_conj -  6*m2*zeta*zeta_conj*z2**2*z1*z1_conj -  12*m1*zeta*zeta_conj*z2**2*z1*z1_conj -  9*m3*zeta_conj*z3*z2**2*z1*z1_conj +  9*m2*zeta_conj*z3*z2**2*z1*z1_conj -  36*m1*zeta_conj*z3*z2**2*z1*z1_conj +  27*zeta*zeta_conj**2*z3*z2**2*z1*z1_conj +  27*zeta_conj**2*z3**2*z2**2*z1*z1_conj -  3*m3*zeta_conj*z2**3*z1*z1_conj + 
				3*m2*zeta_conj*z2**3*z1*z1_conj -  4*m1*zeta_conj*z2**3*z1*z1_conj +  3*zeta*zeta_conj**2*z2**3*z1*z1_conj +  9*zeta_conj**2*z3*z2**3*z1*z1_conj +  3*m3**2*zeta*z1**2*z1_conj +  6*m3*m2*zeta*z1**2*z1_conj +  3*m2**2*zeta*z1**2*z1_conj +  2*m3*m1*zeta*z1**2*z1_conj +  2*m2*m1*zeta*z1**2*z1_conj -  3*m3**2*z3*z1**2*z1_conj -  3*m3*m2*z3*z1**2*z1_conj +  m3*m1*z3*z1**2*z1_conj +  3*m2*m1*z3*z1**2*z1_conj -  12*m3*zeta*zeta_conj*z3*z1**2*z1_conj -  18*m2*zeta*zeta_conj*z3*z1**2*z1_conj -  6*m1*zeta*zeta_conj*z3*z1**2*z1_conj +  3*m3*zeta_conj*z3**2*z1**2*z1_conj -  9*m2*zeta_conj*z3**2*z1**2*z1_conj -  6*m1*zeta_conj*z3**2*z1**2*z1_conj +  9*zeta*zeta_conj**2*z3**2*z1**2*z1_conj +  3*zeta_conj**2*z3**3*z1**2*z1_conj -  
				3*m3*m2*z2*z1**2*z1_conj -  3*m2**2*z2*z1**2*z1_conj +  3*m3*m1*z2*z1**2*z1_conj +  m2*m1*z2*z1**2*z1_conj -  18*m3*zeta*zeta_conj*z2*z1**2*z1_conj -  12*m2*zeta*zeta_conj*z2*z1**2*z1_conj -  6*m1*zeta*zeta_conj*z2*z1**2*z1_conj -  9*m3*zeta_conj*z3*z2*z1**2*z1_conj -  9*m2*zeta_conj*z3*z2*z1**2*z1_conj -  18*m1*zeta_conj*z3*z2*z1**2*z1_conj +  27*zeta*zeta_conj**2*z3*z2*z1**2*z1_conj +  27*zeta_conj**2*z3**2*z2*z1**2*z1_conj -  9*m3*zeta_conj*z2**2*z1**2*z1_conj +  3*m2*zeta_conj*z2**2*z1**2*z1_conj -  6*m1*zeta_conj*z2**2*z1**2*z1_conj +  9*zeta*zeta_conj**2*z2**2*z1**2*z1_conj +  27*zeta_conj**2*z3*z2**2*z1**2*z1_conj +  3*zeta_conj**2*z2**3*z1**2*z1_conj -  2*m3*zeta*zeta_conj*z1**3*z1_conj -  2*m2*zeta*zeta_conj*z1**3*z1_conj - 
				m3*zeta_conj*z3*z1**3*z1_conj -  3*m2*zeta_conj*z3*z1**3*z1_conj +  3*zeta*zeta_conj**2*z3*z1**3*z1_conj +  3*zeta_conj**2*z3**2*z1**3*z1_conj -  3*m3*zeta_conj*z2*z1**3*z1_conj -  m2*zeta_conj*z2*z1**3*z1_conj +  3*zeta*zeta_conj**2*z2*z1**3*z1_conj +  9*zeta_conj**2*z3*z2*z1**3*z1_conj +  3*zeta_conj**2*z2**2*z1**3*z1_conj +  z2_conj*(2*m3*m2*zeta*z3**2 +  3*m2**2*zeta*z3**2 +  2*m3*m1*zeta*z3**2 +  6*m2*m1*zeta*z3**2 +  3*m1**2*zeta*z3**2 -  m3*m2*z3**3 + m2**2*z3**3 -  m3*m1*z3**3 + m2*m1*z3**3 +  3*m3**2*zeta*z3*z2 +  8*m3*m2*zeta*z3*z2 +  3*m2**2*zeta*z3*z2 +  12*m3*m1*zeta*z3*z2 +  12*m2*m1*zeta*z3*z2 +  9*m1**2*zeta*z3*z2 -  3*m3**2*z3**2*z2 -  2*m3*m2*z3**2*z2 +  3*m2**2*z3**2*z2 -  6*m3*m1*z3**2*z2 +  6*m2*m1*z3**2*z2 + 
				3*m3**2*zeta*z2**2 +  2*m3*m2*zeta*z2**2 +  6*m3*m1*zeta*z2**2 +  2*m2*m1*zeta*z2**2 +  3*m1**2*zeta*z2**2 -  3*m3**2*z3*z2**2 +  m3*m2*z3*z2**2 -  3*m3*m1*z3*z2**2 +  3*m2*m1*z3*z2**2 +  3*m3**2*zeta*z3*z1 +  12*m3*m2*zeta*z3*z1 +  9*m2**2*zeta*z3*z1 +  8*m3*m1*zeta*z3*z1 +  12*m2*m1*zeta*z3*z1 +  3*m1**2*zeta*z3*z1 -  3*m3**2*z3**2*z1 -  3*m3*m2*z3**2*z1 +  9*m2**2*z3**2*z1 -  5*m3*m1*z3**2*z1 +  3*m2*m1*z3**2*z1 -  3*m1**2*z3**2*z1 +  9*m3**2*zeta*z2*z1 +  12*m3*m2*zeta*z2*z1 +  3*m2**2*zeta*z2*z1 +  12*m3*m1*zeta*z2*z1 +  8*m2*m1*zeta*z2*z1 +  3*m1**2*zeta*z2*z1 -  9*m3**2*z3*z2*z1 +  6*m3*m2*z3*z2*z1 +  9*m2**2*z3*z2*z1 -  12*m3*m1*z3*z2*z1 +  6*m2*m1*z3*z2*z1 -  9*m1**2*z3*z2*z1 +  3*m3*m2*z2**2*z1 -  3*m3*m1*z2**2*z1 +
				m2*m1*z2**2*z1 -  3*m1**2*z2**2*z1 +  3*m3**2*zeta*z1**2 +  6*m3*m2*zeta*z1**2 +  3*m2**2*zeta*z1**2 +  2*m3*m1*zeta*z1**2 +  2*m2*m1*zeta*z1**2 -  3*m3**2*z3*z1**2 +  3*m3*m2*z3*z1**2 +  9*m2**2*z3*z1**2 -  5*m3*m1*z3*z1**2 -  3*m2*m1*z3*z1**2 -  3*m1**2*z3*z1**2 +  6*m3*m2*z2*z1**2 +  3*m2**2*z2*z1**2 -  6*m3*m1*z2*z1**2 -  2*m2*m1*z2*z1**2 -  3*m1**2*z2*z1**2 +  m3*m2*z1**3 + m2**2*z1**3 -  m3*m1*z1**3 - m2*m1*z1**3 +  3*zeta_conj**2*(z3**3*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1)) +  z3**2*(z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1)) +  z3*(zeta*z1**3 +  9*z2**2*z1*(zeta + z1) +  3*z2*z1**2*(3*zeta + z1) +  z2**3*(zeta + 3*z1)) +  z2*z1*(z2*z1*(z2 + z1) +  zeta*(z2**2 + 3*z2*z1 + z1**2))) + zeta_conj*(-(m1*(z3**3*(2*zeta + 3*z2 + z1) +
				3*z3**2*(6*zeta*z2 + 3*z2**2 +  4*zeta*z1 + 3*z2*z1 -  z1**2) +  z2*(-3*z2*z1*(-4*zeta + z1) -  3*z1**2*(-2*zeta + z1) +  z2**2*(2*zeta + z1)) +  3*z3*(z2**3 -  3*z2*z1*(-4*zeta + z1) -  z1**2*(-2*zeta + z1) +  3*z2**2*(2*zeta + z1)))) - 2*m2*(z3**3*(zeta + 2*z2 + 3*z1) +  z1*(zeta*z1**2 +  3*z2**2*(zeta + z1) +  2*z2*z1*(3*zeta + z1)) +  3*z3**2*(z2**2 + 3*z1*(zeta + z1) +  2*z2*(zeta + 3*z1)) +  3*z3*(6*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  z2**2*(zeta + 3*z1))) +  m3*(3*z3**3*(z2 + z1) +  3*z3**2*(z2**2 + 3*z2*z1 + z1**2) -  3*z2*z1*(z2**2 + 3*z2*z1 + z1**2) -  z3*(z2**3 + 9*z2**2*z1 +  9*z2*z1**2 + z1**3) -  2*zeta*(z2**3 + 9*z2**2*z1 +  9*z2*z1**2 + z1**3 +  3*z3**2*(z2 + z1) +  6*z3*(z2**2 + 3*z2*z1 + z1**2) ))) +  (m2*zeta*z3**3 +  m1*zeta*z3**3 +  6*m2*zeta*z3**2*z2 +  9*m1*zeta*z3**2*z2 + 
				2*m2*z3**3*z2 +  3*m1*z3**3*z2 +  3*m2*zeta*z3*z2**2 +  9*m1*zeta*z3*z2**2 +  3*m2*z3**2*z2**2 +  9*m1*z3**2*z2**2 +  m1*zeta*z2**3 +  3*m1*z3*z2**3 +  9*m2*zeta*z3**2*z1 +  6*m1*zeta*z3**2*z1 +  3*m2*z3**3*z1 +  2*m1*z3**3*z1 +  18*m2*zeta*z3*z2*z1 +  18*m1*zeta*z3*z2*z1 +  18*m2*z3**2*z2*z1 +  18*m1*z3**2*z2*z1 +  3*m2*zeta*z2**2*z1 +  6*m1*zeta*z2**2*z1 +  9*m2*z3*z2**2*z1 +  18*m1*z3*z2**2*z1 +  2*m1*z2**3*z1 +  9*m2*zeta*z3*z1**2 +  3*m1*zeta*z3*z1**2 +  9*m2*z3**2*z1**2 +  3*m1*z3**2*z1**2 +  6*m2*zeta*z2*z1**2 +  3*m1*zeta*z2*z1**2 +  18*m2*z3*z2*z1**2 +  9*m1*z3*z2*z1**2 +  3*m2*z2**2*z1**2 +  3*m1*z2**2*z1**2 +  m2*zeta*z1**3 +  3*m2*z3*z1**3 +  2*m2*z2*z1**3 -  m3*(-zeta + z3)*(z2**3 + 9*z2**2*z1 +  9*z2*z1**2 + z1**3 +  3*z3**2*(z2 + z1) +  
				6*z3*(z2**2 + 3*z2*z1 + z1**2)) - 3*zeta_conj*(z3**3*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1)) +  z3**2*(z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1)) +  z3*(zeta*z1**3 +  9*z2**2*z1*(zeta + z1) +  3*z2*z1**2*(3*zeta + z1) +  z2**3*(zeta + 3*z1)) +  z2*z1*(z2*z1*(z2 + z1) +  zeta*(z2**2 + 3*z2*z1 + z1**2) )))*z1_conj) +  z3_conj*(2*m3*m2*zeta*z3**2 +  3*m2**2*zeta*z3**2 +  2*m3*m1*zeta*z3**2 +  6*m2*m1*zeta*z3**2 +  3*m1**2*zeta*z3**2 -  2*m2*zeta*zeta_conj*z3**3 -  2*m1*zeta*zeta_conj*z3**3 +  3*m3**2*zeta*z3*z2 +  8*m3*m2*zeta*z3*z2 +  3*m2**2*zeta*z3*z2 +  12*m3*m1*zeta*z3*z2 +  12*m2*m1*zeta*z3*z2 +  9*m1**2*zeta*z3*z2 +  m3*m2*z3**2*z2 -  3*m2**2*z3**2*z2 +  3*m3*m1*z3**2*z2 -  3*m2*m1*z3**2*z2 -  6*m3*zeta*zeta_conj*z3**2*z2 - 
				12*m2*zeta*zeta_conj*z3**2*z2 -  18*m1*zeta*zeta_conj*z3**2*z2 -  m2*zeta_conj*z3**3*z2 -  3*m1*zeta_conj*z3**3*z2 +  3*zeta*zeta_conj**2*z3**3*z2 +  3*m3**2*zeta*z2**2 +  2*m3*m2*zeta*z2**2 +  6*m3*m1*zeta*z2**2 +  2*m2*m1*zeta*z2**2 +  3*m1**2*zeta*z2**2 +  3*m3**2*z3*z2**2 -  2*m3*m2*z3*z2**2 -  3*m2**2*z3*z2**2 +  6*m3*m1*z3*z2**2 -  6*m2*m1*z3*z2**2 -  12*m3*zeta*zeta_conj*z3*z2**2 -  6*m2*zeta*zeta_conj*z3*z2**2 -  18*m1*zeta*zeta_conj*z3*z2**2 -  6*m3*zeta_conj*z3**2*z2**2 +  3*m2*zeta_conj*z3**2*z2**2 -  9*m1*zeta_conj*z3**2*z2**2 +  9*zeta*zeta_conj**2*z3**2*z2**2 +  3*zeta_conj**2*z3**3*z2**2 +  m3**2*z2**3 - m3*m2*z2**3 +  m3*m1*z2**3 - m2*m1*z2**3 -  2*m3*zeta*zeta_conj*z2**3 -  2*m1*zeta*zeta_conj*z2**3 -  4*m3*zeta_conj*z3*z2**3 +  3*m2*zeta_conj*z3*z2**3 -  3*m1*zeta_conj*z3*z2**3 +  3*zeta*zeta_conj**2*z3*z2**3 + 
				3*zeta_conj**2*z3**2*z2**3 +  3*m3**2*zeta*z3*z1 +  12*m3*m2*zeta*z3*z1 +  9*m2**2*zeta*z3*z1 +  8*m3*m1*zeta*z3*z1 +  12*m2*m1*zeta*z3*z1 +  3*m1**2*zeta*z3*z1 +  3*m3*m2*z3**2*z1 +  m3*m1*z3**2*z1 -  3*m2*m1*z3**2*z1 -  3*m1**2*z3**2*z1 -  6*m3*zeta*zeta_conj*z3**2*z1 -  18*m2*zeta*zeta_conj*z3**2*z1 -  12*m1*zeta*zeta_conj*z3**2*z1 -  3*m2*zeta_conj*z3**3*z1 -  m1*zeta_conj*z3**3*z1 +  3*zeta*zeta_conj**2*z3**3*z1 +  9*m3**2*zeta*z2*z1 +  12*m3*m2*zeta*z2*z1 +  3*m2**2*zeta*z2*z1 +  12*m3*m1*zeta*z2*z1 +  8*m2*m1*zeta*z2*z1 +  3*m1**2*zeta*z2*z1 +  9*m3**2*z3*z2*z1 +  6*m3*m2*z3*z2*z1 -  9*m2**2*z3*z2*z1 +  6*m3*m1*z3*z2*z1 -  12*m2*m1*z3*z2*z1 -  9*m1**2*z3*z2*z1 -  36*m3*zeta*zeta_conj*z3*z2*z1 -  36*m2*zeta*zeta_conj*z3*z2*z1 -  36*m1*zeta*zeta_conj*z3*z2*z1 - 
				18*m3*zeta_conj*z3**2*z2*z1 -  9*m2*zeta_conj*z3**2*z2*z1 -  9*m1*zeta_conj*z3**2*z2*z1 +  27*zeta*zeta_conj**2*z3**2*z2*z1 +  9*zeta_conj**2*z3**3*z2*z1 +  9*m3**2*z2**2*z1 -  3*m3*m2*z2**2*z1 -  3*m2**2*z2**2*z1 +  3*m3*m1*z2**2*z1 -  5*m2*m1*z2**2*z1 -  3*m1**2*z2**2*z1 -  18*m3*zeta*zeta_conj*z2**2*z1 -  6*m2*zeta*zeta_conj*z2**2*z1 -  12*m1*zeta*zeta_conj*z2**2*z1 -  36*m3*zeta_conj*z3*z2**2*z1 +  9*m2*zeta_conj*z3*z2**2*z1 -  9*m1*zeta_conj*z3*z2**2*z1 +  27*zeta*zeta_conj**2*z3*z2**2*z1 +  27*zeta_conj**2*z3**2*z2**2*z1 -  6*m3*zeta_conj*z2**3*z1 +  3*m2*zeta_conj*z2**3*z1 -  m1*zeta_conj*z2**3*z1 +  3*zeta*zeta_conj**2*z2**3*z1 +  9*zeta_conj**2*z3*z2**3*z1 +  3*m3**2*zeta*z1**2 +  6*m3*m2*zeta*z1**2 +  3*m2**2*zeta*z1**2 +  2*m3*m1*zeta*z1**2 +  2*m2*m1*zeta*z1**2 +  3*m3**2*z3*z1**2 +  6*m3*m2*z3*z1**2 - 
				2*m3*m1*z3*z1**2 -  6*m2*m1*z3*z1**2 -  3*m1**2*z3*z1**2 -  12*m3*zeta*zeta_conj*z3*z1**2 -  18*m2*zeta*zeta_conj*z3*z1**2 -  6*m1*zeta*zeta_conj*z3*z1**2 -  6*m3*zeta_conj*z3**2*z1**2 -  9*m2*zeta_conj*z3**2*z1**2 +  3*m1*zeta_conj*z3**2*z1**2 +  9*zeta*zeta_conj**2*z3**2*z1**2 +  3*zeta_conj**2*z3**3*z1**2 +  9*m3**2*z2*z1**2 +  3*m3*m2*z2*z1**2 -  3*m2**2*z2*z1**2 -  3*m3*m1*z2*z1**2 -  5*m2*m1*z2*z1**2 -  3*m1**2*z2*z1**2 -  18*m3*zeta*zeta_conj*z2*z1**2 -  12*m2*zeta*zeta_conj*z2*z1**2 -  6*m1*zeta*zeta_conj*z2*z1**2 -  36*m3*zeta_conj*z3*z2*z1**2 -  9*m2*zeta_conj*z3*z2*z1**2 +  9*m1*zeta_conj*z3*z2*z1**2 +  27*zeta*zeta_conj**2*z3*z2*z1**2 +  27*zeta_conj**2*z3**2*z2*z1**2 -  18*m3*zeta_conj*z2**2*z1**2 +  3*m2*zeta_conj*z2**2*z1**2 +  3*m1*zeta_conj*z2**2*z1**2 +  9*zeta*zeta_conj**2*z2**2*z1**2 +  27*zeta_conj**2*z3*z2**2*z1**2 + 
				3*zeta_conj**2*z2**3*z1**2 +  m3**2*z1**3 + m3*m2*z1**3 -  m3*m1*z1**3 - m2*m1*z1**3 -  2*m3*zeta*zeta_conj*z1**3 -  2*m2*zeta*zeta_conj*z1**3 -  4*m3*zeta_conj*z3*z1**3 -  3*m2*zeta_conj*z3*z1**3 +  3*m1*zeta_conj*z3*z1**3 +  3*zeta*zeta_conj**2*z3*z1**3 +  3*zeta_conj**2*z3**2*z1**3 -  6*m3*zeta_conj*z2*z1**3 -  m2*zeta_conj*z2*z1**3 +  3*m1*zeta_conj*z2*z1**3 +  3*zeta*zeta_conj**2*z2*z1**3 +  9*zeta_conj**2*z3*z2*z1**3 +  3*zeta_conj**2*z2**2*z1**3 +  (m1*zeta*z3**3 +  3*m3*zeta*z3**2*z2 +  9*m1*zeta*z3**2*z2 +  3*m1*z3**3*z2 +  6*m3*zeta*z3*z2**2 +  9*m1*zeta*z3*z2**2 +  3*m3*z3**2*z2**2 +  9*m1*z3**2*z2**2 +  m3*zeta*z2**3 +  m1*zeta*z2**3 +  2*m3*z3*z2**3 +  3*m1*z3*z2**3 +  3*m3*zeta*z3**2*z1 +  6*m1*zeta*z3**2*z1 +  2*m1*z3**3*z1 +  18*m3*zeta*z3*z2*z1 +  18*m1*zeta*z3*z2*z1 +  9*m3*z3**2*z2*z1 + 
				18*m1*z3**2*z2*z1 +  9*m3*zeta*z2**2*z1 +  6*m1*zeta*z2**2*z1 +  18*m3*z3*z2**2*z1 +  18*m1*z3*z2**2*z1 +  3*m3*z2**3*z1 +  2*m1*z2**3*z1 +  6*m3*zeta*z3*z1**2 +  3*m1*zeta*z3*z1**2 +  3*m3*z3**2*z1**2 +  3*m1*z3**2*z1**2 +  9*m3*zeta*z2*z1**2 +  3*m1*zeta*z2*z1**2 +  18*m3*z3*z2*z1**2 +  9*m1*z3*z2*z1**2 +  9*m3*z2**2*z1**2 +  3*m1*z2**2*z1**2 +  m3*zeta*z1**3 +  2*m3*z3*z1**3 +  3*m3*z2*z1**3 -  m2*(-zeta + z2)*(z3**3 + z3**2*(6*z2 + 9*z1) +  z1*(3*z2**2 + 6*z2*z1 + z1**2) + 3*z3*(z2**2 + 6*z2*z1 + 3*z1**2)) - 3*zeta_conj*(z3**3*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1)) +  z3**2*(z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1)) +  z3*(zeta*z1**3 +  9*z2**2*z1*(zeta + z1) +  3*z2*z1**2*(3*zeta + z1) +  z2**3*(zeta + 3*z1)) +  z2*z1*(z2*z1*(z2 + z1) +
				zeta*(z2**2 + 3*z2*z1 + z1**2) )))*z1_conj +  z2_conj*(m2*zeta*z3**3 +  m1*zeta*z3**3 +  3*m3*zeta*z3**2*z2 +  6*m2*zeta*z3**2*z2 +  9*m1*zeta*z3**2*z2 +  2*m2*z3**3*z2 +  6*m3*zeta*z3*z2**2 +  3*m2*zeta*z3*z2**2 +  9*m1*zeta*z3*z2**2 +  3*m3*z3**2*z2**2 +  3*m2*z3**2*z2**2 +  m3*zeta*z2**3 +  m1*zeta*z2**3 +  2*m3*z3*z2**3 +  3*m3*zeta*z3**2*z1 +  9*m2*zeta*z3**2*z1 +  6*m1*zeta*z3**2*z1 +  3*m2*z3**3*z1 -  m1*z3**3*z1 +  18*m3*zeta*z3*z2*z1 +  18*m2*zeta*z3*z2*z1 +  18*m1*zeta*z3*z2*z1 +  9*m3*z3**2*z2*z1 +  18*m2*z3**2*z2*z1 -  9*m1*z3**2*z2*z1 +  9*m3*zeta*z2**2*z1 +  3*m2*zeta*z2**2*z1 +  6*m1*zeta*z2**2*z1 +  18*m3*z3*z2**2*z1 +  9*m2*z3*z2**2*z1 -  9*m1*z3*z2**2*z1 +  3*m3*z2**3*z1 -  m1*z2**3*z1 +  6*m3*zeta*z3*z1**2 +  9*m2*zeta*z3*z1**2 +
				3*m1*zeta*z3*z1**2 +  3*m3*z3**2*z1**2 +  9*m2*z3**2*z1**2 -  6*m1*z3**2*z1**2 +  9*m3*zeta*z2*z1**2 +  6*m2*zeta*z2*z1**2 +  3*m1*zeta*z2*z1**2 +  18*m3*z3*z2*z1**2 +  18*m2*z3*z2*z1**2 -  18*m1*z3*z2*z1**2 +  9*m3*z2**2*z1**2 +  3*m2*z2**2*z1**2 -  6*m1*z2**2*z1**2 +  m3*zeta*z1**3 +  m2*zeta*z1**3 +  2*m3*z3*z1**3 +  3*m2*z3*z1**3 -  3*m1*z3*z1**3 +  3*m3*z2*z1**3 +  2*m2*z2*z1**3 -  3*m1*z2*z1**3 -  3*zeta_conj*(z3**3*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1)) +  z3**2*(z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1)) +  z3*(zeta*z1**3 +  9*z2**2*z1*(zeta + z1) +  3*z2*z1**2*(3*zeta + z1) +  z2**3*(zeta + 3*z1)) +  z2*z1*(z2*z1*(z2 + z1) +  zeta*(z2**2 + 3*z2*z1 + z1**2) )) +  3*(z3**3*(z2**2 + 3*z2*z1 + z1**2 +  zeta*(z2 + z1)) + 
				z3**2*(z2**3 +  9*z2*z1*(zeta + z1) +  z1**2*(3*zeta + z1) +  3*z2**2*(zeta + 3*z1)) +  z3*(zeta*z1**3 +  9*z2**2*z1*(zeta + z1) +  3*z2*z1**2*(3*zeta + z1) +  z2**3*(zeta + 3*z1)) +  z2*z1*(z2*z1*(z2 + z1) +  zeta*(z2**2 + 3*z2*z1 + z1**2)))*z1_conj)))

		coeff4 = (-3*m3*m2**2*zeta*z3**2 - 3*m2**3*zeta*z3**2 - 6*m3*m2*m1*zeta*z3**2 - 9*m2**2*m1*zeta*z3**2 - 3*m3*m1**2*zeta*z3**2 - 9*m2*m1**2*zeta*z3**2 - 3*m1**3*zeta*z3**2 + m3*m2**2*z3**3 + 2*m3*m2*m1*z3**3 + m3*m1**2*z3**3 + 3*m2**2*zeta*zeta_conj*z3**3 + 6*m2*m1*zeta*zeta_conj*z3**3 + 3*m1**2*zeta*zeta_conj*z3**3 - 6*m3**2*m2*zeta*z3*z2 - 6*m3*m2**2*zeta*z3*z2 - 9*m3**2*m1*zeta*z3*z2 - 24*m3*m2*m1*zeta*z3*z2 - 9*m2**2*m1*zeta*z3*z2 - 18*m3*m1**2*zeta*z3*z2 - 18*m2*m1**2*zeta*z3*z2 - 9*m1**3*zeta*z3*z2 + 4*m3**2*m2*z3**2*z2 + 4*m3*m2**2*z3**2*z2 + 3*m2**3*z3**2*z2 + 6*m3**2*m1*z3**2*z2 + 10*m3*m2*m1*z3**2*z2 + 6*m2**2*m1*z3**2*z2 + 6*m3*m1**2*z3**2*z2 + 3*m2*m1**2*z3**2*z2 + 12*m3*m2*zeta*zeta_conj*z3**2*z2 + 9*m2**2*zeta*zeta_conj*z3**2*z2 + 18*m3*m1*zeta*zeta_conj*z3**2*z2 + 36*m2*m1*zeta*zeta_conj*z3**2*z2 + 27*m1**2*zeta*zeta_conj*z3**2*z2 - 4*m3*m2*zeta_conj*z3**3*z2 - m2**2*zeta_conj*z3**3*z2 - 6*m3*m1*zeta_conj*z3**3*z2 + 2*m2*m1*zeta_conj*z3**3*z2 + 3*m1**2*zeta_conj*z3**3*z2 - 6*m2*zeta*zeta_conj**2*z3**3*z2 - 9*m1*zeta*zeta_conj**2*z3**3*z2 - 3*m3**3*zeta*z2**2 - 3*m3**2*m2*zeta*z2**2 - 9*m3**2*m1*zeta*z2**2 - 6*m3*m2*m1*zeta*z2**2 - 9*m3*m1**2*zeta*z2**2 - 3*m2*m1**2*zeta*z2**2 - 3*m1**3*zeta*z2**2 + 3*m3**3*z3*z2**2 + 4*m3**2*m2*z3*z2**2 + 4*m3*m2**2*z3*z2**2 + 6*m3**2*m1*z3*z2**2 + 10*m3*m2*m1*z3*z2**2 + 6*m2**2*m1*z3*z2**2 + 3*m3*m1**2*z3*z2**2 + 6*m2*m1**2*z3*z2**2 + 9*m3**2*zeta*zeta_conj*z3*z2**2 + 12*m3*m2*zeta*zeta_conj*z3*z2**2 + 36*m3*m1*zeta*zeta_conj*z3*z2**2 + 18*m2*m1*zeta*zeta_conj*z3*z2**2 + 27*m1**2*zeta*zeta_conj*z3*z2**2 - 6*m3**2*zeta_conj*z3**2*z2**2 - 
				6*m3*m2*zeta_conj*z3**2*z2**2 - 6*m2**2*zeta_conj*z3**2*z2**2 - 6*m3*m1*zeta_conj*z3**2*z2**2 - 6*m2*m1*zeta_conj*z3**2*z2**2 + 9*m1**2*zeta_conj*z3**2*z2**2 - 9*m3*zeta*zeta_conj**2*z3**2*z2**2 - 9*m2*zeta*zeta_conj**2*z3**2*z2**2 - 27*m1*zeta*zeta_conj**2*z3**2*z2**2 + 3*m3*zeta_conj**2*z3**3*z2**2 - 6*m1*zeta_conj**2*z3**3*z2**2 + 3*zeta*zeta_conj**3*z3**3*z2**2 + m3**2*m2*z2**3 + 2*m3*m2*m1*z2**3 + m2*m1**2*z2**3 + 3*m3**2*zeta*zeta_conj*z2**3 + 6*m3*m1*zeta*zeta_conj*z2**3 + 3*m1**2*zeta*zeta_conj*z2**3 - m3**2*zeta_conj*z3*z2**3 - 4*m3*m2*zeta_conj*z3*z2**3 + 2*m3*m1*zeta_conj*z3*z2**3 - 6*m2*m1*zeta_conj*z3*z2**3 + 3*m1**2*zeta_conj*z3*z2**3 - 6*m3*zeta*zeta_conj**2*z3*z2**3 - 9*m1*zeta*zeta_conj**2*z3*z2**3 + 3*m2*zeta_conj**2*z3**2*z2**3 - 6*m1*zeta_conj**2*z3**2*z2**3 + 3*zeta*zeta_conj**3*z3**2*z2**3 + zeta_conj**3*z3**3*z2**3 - 9*m3**2*m2*zeta*z3*z1 - 18*m3*m2**2*zeta*z3*z1 - 9*m2**3*zeta*z3*z1 - 6*m3**2*m1*zeta*z3*z1 - 24*m3*m2*m1*zeta*z3*z1 - 18*m2**2*m1*zeta*z3*z1 - 6*m3*m1**2*zeta*z3*z1 - 9*m2*m1**2*zeta*z3*z1 + 6*m3**2*m2*z3**2*z1 + 6*m3*m2**2*z3**2*z1 + 4*m3**2*m1*z3**2*z1 + 10*m3*m2*m1*z3**2*z1 + 3*m2**2*m1*z3**2*z1 + 4*m3*m1**2*z3**2*z1 + 6*m2*m1**2*z3**2*z1 + 3*m1**3*z3**2*z1 + 18*m3*m2*zeta*zeta_conj*z3**2*z1 + 27*m2**2*zeta*zeta_conj*z3**2*z1 + 12*m3*m1*zeta*zeta_conj*z3**2*z1 + 36*m2*m1*zeta*zeta_conj*z3**2*z1 + 9*m1**2*zeta*zeta_conj*z3**2*z1 - 6*m3*m2*zeta_conj*z3**3*z1 + 3*m2**2*zeta_conj*z3**3*z1 - 4*m3*m1*zeta_conj*z3**3*z1 + 2*m2*m1*zeta_conj*z3**3*z1 - m1**2*zeta_conj*z3**3*z1 - 9*m2*zeta*zeta_conj**2*z3**3*z1 - 6*m1*zeta*zeta_conj**2*z3**3*z1 - 9*m3**3*zeta*z2*z1 - 18*m3**2*m2*zeta*z2*z1 - 9*m3*m2**2*zeta*z2*z1 -
				18*m3**2*m1*zeta*z2*z1 - 24*m3*m2*m1*zeta*z2*z1 - 6*m2**2*m1*zeta*z2*z1 - 9*m3*m1**2*zeta*z2*z1 - 6*m2*m1**2*zeta*z2*z1 + 9*m3**3*z3*z2*z1 + 15*m3**2*m2*z3*z2*z1 + 15*m3*m2**2*z3*z2*z1 + 9*m2**3*z3*z2*z1 + 15*m3**2*m1*z3*z2*z1 + 24*m3*m2*m1*z3*z2*z1 + 15*m2**2*m1*z3*z2*z1 + 15*m3*m1**2*z3*z2*z1 + 15*m2*m1**2*z3*z2*z1 + 9*m1**3*z3*z2*z1 + 27*m3**2*zeta*zeta_conj*z3*z2*z1 + 72*m3*m2*zeta*zeta_conj*z3*z2*z1 + 27*m2**2*zeta*zeta_conj*z3*z2*z1 + 72*m3*m1*zeta*zeta_conj*z3*z2*z1 + 72*m2*m1*zeta*zeta_conj*z3*z2*z1 + 27*m1**2*zeta*zeta_conj*z3*z2*z1 - 18*m3**2*zeta_conj*z3**2*z2*z1 - 18*m3*m2*zeta_conj*z3**2*z2*z1 - 9*m2**2*zeta_conj*z3**2*z2*z1 - 18*m3*m1*zeta_conj*z3**2*z2*z1 - 9*m1**2*zeta_conj*z3**2*z2*z1 - 27*m3*zeta*zeta_conj**2*z3**2*z2*z1 - 54*m2*zeta*zeta_conj**2*z3**2*z2*z1 - 54*m1*zeta*zeta_conj**2*z3**2*z2*z1 + 9*m3*zeta_conj**2*z3**3*z2*z1 - 9*m2*zeta_conj**2*z3**3*z2*z1 - 9*m1*zeta_conj**2*z3**3*z2*z1 + 9*zeta*zeta_conj**3*z3**3*z2*z1 + 6*m3**2*m2*z2**2*z1 + 6*m3*m2**2*z2**2*z1 + 3*m3**2*m1*z2**2*z1 + 10*m3*m2*m1*z2**2*z1 + 4*m2**2*m1*z2**2*z1 + 6*m3*m1**2*z2**2*z1 + 4*m2*m1**2*z2**2*z1 + 3*m1**3*z2**2*z1 + 27*m3**2*zeta*zeta_conj*z2**2*z1 + 18*m3*m2*zeta*zeta_conj*z2**2*z1 + 36*m3*m1*zeta*zeta_conj*z2**2*z1 + 12*m2*m1*zeta*zeta_conj*z2**2*z1 + 9*m1**2*zeta*zeta_conj*z2**2*z1 - 9*m3**2*zeta_conj*z3*z2**2*z1 - 18*m3*m2*zeta_conj*z3*z2**2*z1 - 18*m2**2*zeta_conj*z3*z2**2*z1 - 18*m2*m1*zeta_conj*z3*z2**2*z1 - 9*m1**2*zeta_conj*z3*z2**2*z1 - 54*m3*zeta*zeta_conj**2*z3*z2**2*z1 - 27*m2*zeta*zeta_conj**2*z3*z2**2*z1 - 54*m1*zeta*zeta_conj**2*z3*z2**2*z1 - 27*m1*zeta_conj**2*z3**2*z2**2*z1 +
				27*zeta*zeta_conj**3*z3**2*z2**2*z1 + 9*zeta_conj**3*z3**3*z2**2*z1 + 3*m3**2*zeta_conj*z2**3*z1 - 6*m3*m2*zeta_conj*z2**3*z1 + 2*m3*m1*zeta_conj*z2**3*z1 - 4*m2*m1*zeta_conj*z2**3*z1 - m1**2*zeta_conj*z2**3*z1 - 9*m3*zeta*zeta_conj**2*z2**3*z1 - 6*m1*zeta*zeta_conj**2*z2**3*z1 - 9*m3*zeta_conj**2*z3*z2**3*z1 + 9*m2*zeta_conj**2*z3*z2**3*z1 - 9*m1*zeta_conj**2*z3*z2**3*z1 + 9*zeta*zeta_conj**3*z3*z2**3*z1 + 9*zeta_conj**3*z3**2*z2**3*z1 - 3*m3**3*zeta*z1**2 - 9*m3**2*m2*zeta*z1**2 - 9*m3*m2**2*zeta*z1**2 - 3*m2**3*zeta*z1**2 - 3*m3**2*m1*zeta*z1**2 - 6*m3*m2*m1*zeta*z1**2 - 3*m2**2*m1*zeta*z1**2 + 3*m3**3*z3*z1**2 + 6*m3**2*m2*z3*z1**2 + 3*m3*m2**2*z3*z1**2 + 4*m3**2*m1*z3*z1**2 + 10*m3*m2*m1*z3*z1**2 + 6*m2**2*m1*z3*z1**2 + 4*m3*m1**2*z3*z1**2 + 6*m2*m1**2*z3*z1**2 + 9*m3**2*zeta*zeta_conj*z3*z1**2 + 36*m3*m2*zeta*zeta_conj*z3*z1**2 + 27*m2**2*zeta*zeta_conj*z3*z1**2 + 12*m3*m1*zeta*zeta_conj*z3*z1**2 + 18*m2*m1*zeta*zeta_conj*z3*z1**2 - 6*m3**2*zeta_conj*z3**2*z1**2 - 6*m3*m2*zeta_conj*z3**2*z1**2 + 9*m2**2*zeta_conj*z3**2*z1**2 - 6*m3*m1*zeta_conj*z3**2*z1**2 - 6*m2*m1*zeta_conj*z3**2*z1**2 - 6*m1**2*zeta_conj*z3**2*z1**2 - 9*m3*zeta*zeta_conj**2*z3**2*z1**2 - 27*m2*zeta*zeta_conj**2*z3**2*z1**2 - 9*m1*zeta*zeta_conj**2*z3**2*z1**2 + 3*m3*zeta_conj**2*z3**3*z1**2 - 6*m2*zeta_conj**2*z3**3*z1**2 + 3*zeta*zeta_conj**3*z3**3*z1**2 + 3*m3**2*m2*z2*z1**2 + 6*m3*m2**2*z2*z1**2 + 3*m2**3*z2*z1**2 + 6*m3**2*m1*z2*z1**2 + 10*m3*m2*m1*z2*z1**2 + 4*m2**2*m1*z2*z1**2 + 6*m3*m1**2*z2*z1**2 + 4*m2*m1**2*z2*z1**2 + 27*m3**2*zeta*zeta_conj*z2*z1**2 + 36*m3*m2*zeta*zeta_conj*z2*z1**2 + 9*m2**2*zeta*zeta_conj*z2*z1**2 + 18*m3*m1*zeta*zeta_conj*z2*z1**2 + 12*m2*m1*zeta*zeta_conj*z2*z1**2 -
				9*m3**2*zeta_conj*z3*z2*z1**2 - 9*m2**2*zeta_conj*z3*z2*z1**2 - 18*m3*m1*zeta_conj*z3*z2*z1**2 - 18*m2*m1*zeta_conj*z3*z2*z1**2 - 18*m1**2*zeta_conj*z3*z2*z1**2 - 54*m3*zeta*zeta_conj**2*z3*z2*z1**2 - 54*m2*zeta*zeta_conj**2*z3*z2*z1**2 - 27*m1*zeta*zeta_conj**2*z3*z2*z1**2 - 27*m2*zeta_conj**2*z3**2*z2*z1**2 + 27*zeta*zeta_conj**3*z3**2*z2*z1**2 + 9*zeta_conj**3*z3**3*z2*z1**2 + 9*m3**2*zeta_conj*z2**2*z1**2 - 6*m3*m2*zeta_conj*z2**2*z1**2 - 6*m2**2*zeta_conj*z2**2*z1**2 - 6*m3*m1*zeta_conj*z2**2*z1**2 - 6*m2*m1*zeta_conj*z2**2*z1**2 - 6*m1**2*zeta_conj*z2**2*z1**2 - 27*m3*zeta*zeta_conj**2*z2**2*z1**2 - 9*m2*zeta*zeta_conj**2*z2**2*z1**2 - 9*m1*zeta*zeta_conj**2*z2**2*z1**2 - 27*m3*zeta_conj**2*z3*z2**2*z1**2 + 27*zeta*zeta_conj**3*z3*z2**2*z1**2 + 27*zeta_conj**3*z3**2*z2**2*z1**2 - 6*m3*zeta_conj**2*z2**3*z1**2 + 3*m2*zeta_conj**2*z2**3*z1**2 + 3*zeta*zeta_conj**3*z2**3*z1**2 + 9*zeta_conj**3*z3*z2**3*z1**2 + m3**2*m1*z1**3 + 2*m3*m2*m1*z1**3 + m2**2*m1*z1**3 + 3*m3**2*zeta*zeta_conj*z1**3 + 6*m3*m2*zeta*zeta_conj*z1**3 + 3*m2**2*zeta*zeta_conj*z1**3 - m3**2*zeta_conj*z3*z1**3 + 2*m3*m2*zeta_conj*z3*z1**3 + 3*m2**2*zeta_conj*z3*z1**3 - 4*m3*m1*zeta_conj*z3*z1**3 - 6*m2*m1*zeta_conj*z3*z1**3 - 6*m3*zeta*zeta_conj**2*z3*z1**3 - 9*m2*zeta*zeta_conj**2*z3*z1**3 - 6*m2*zeta_conj**2*z3**2*z1**3 + 3*m1*zeta_conj**2*z3**2*z1**3 + 3*zeta*zeta_conj**3*z3**2*z1**3 + zeta_conj**3*z3**3*z1**3 + 3*m3**2*zeta_conj*z2*z1**3 + 2*m3*m2*zeta_conj*z2*z1**3 - m2**2*zeta_conj*z2*z1**3 - 6*m3*m1*zeta_conj*z2*z1**3 - 4*m2*m1*zeta_conj*z2*z1**3 - 9*m3*zeta*zeta_conj**2*z2*z1**3 - 6*m2*zeta*zeta_conj**2*z2*z1**3 - 9*m3*zeta_conj**2*z3*z2*z1**3 - 9*m2*zeta_conj**2*z3*z2*z1**3 + 9*m1*zeta_conj**2*z3*z2*z1**3 + 9*zeta*zeta_conj**3*z3*z2*z1**3 + 9*zeta_conj**3*z3**2*z2*z1**3 - 
				6*m3*zeta_conj**2*z2**2*z1**3 + 3*m1*zeta_conj**2*z2**2*z1**3 + 3*zeta*zeta_conj**3*z2**2*z1**3 + 9*zeta_conj**3*z3*z2**2*z1**3 + zeta_conj**3*z2**3*z1**3 - m2**2*zeta*z3**3*z1_conj - 2*m2*m1*zeta*z3**3*z1_conj - m1**2*zeta*z3**3*z1_conj - 4*m3*m2*zeta*z3**2*z2*z1_conj - 3*m2**2*zeta*z3**2*z2*z1_conj - 6*m3*m1*zeta*z3**2*z2*z1_conj - 12*m2*m1*zeta*z3**2*z2*z1_conj - 9*m1**2*zeta*z3**2*z2*z1_conj + 2*m3*m2*z3**3*z2*z1_conj + m2**2*z3**3*z2*z1_conj + 3*m3*m1*z3**3*z2*z1_conj - m2*m1*z3**3*z2*z1_conj - 3*m1**2*z3**3*z2*z1_conj + 4*m2*zeta*zeta_conj*z3**3*z2*z1_conj + 6*m1*zeta*zeta_conj*z3**3*z2*z1_conj - 3*m3**2*zeta*z3*z2**2*z1_conj - 4*m3*m2*zeta*z3*z2**2*z1_conj - 12*m3*m1*zeta*z3*z2**2*z1_conj - 6*m2*m1*zeta*z3*z2**2*z1_conj - 9*m1**2*zeta*z3*z2**2*z1_conj + 3*m3**2*z3**2*z2**2*z1_conj + 4*m3*m2*z3**2*z2**2*z1_conj + 3*m2**2*z3**2*z2**2*z1_conj + 3*m3*m1*z3**2*z2**2*z1_conj + 3*m2*m1*z3**2*z2**2*z1_conj - 9*m1**2*z3**2*z2**2*z1_conj + 6*m3*zeta*zeta_conj*z3**2*z2**2*z1_conj + 6*m2*zeta*zeta_conj*z3**2*z2**2*z1_conj + 18*m1*zeta*zeta_conj*z3**2*z2**2*z1_conj - 3*m3*zeta_conj*z3**3*z2**2*z1_conj - m2*zeta_conj*z3**3*z2**2*z1_conj + 6*m1*zeta_conj*z3**3*z2**2*z1_conj - 3*zeta*zeta_conj**2*z3**3*z2**2*z1_conj - m3**2*zeta*z2**3*z1_conj - 2*m3*m1*zeta*z2**3*z1_conj - m1**2*zeta*z2**3*z1_conj + m3**2*z3*z2**3*z1_conj + 2*m3*m2*z3*z2**3*z1_conj - m3*m1*z3*z2**3*z1_conj + 3*m2*m1*z3*z2**3*z1_conj - 3*m1**2*z3*z2**3*z1_conj + 4*m3*zeta*zeta_conj*z3*z2**3*z1_conj +
				6*m1*zeta*zeta_conj*z3*z2**3*z1_conj - m3*zeta_conj*z3**2*z2**3*z1_conj - 3*m2*zeta_conj*z3**2*z2**3*z1_conj + 6*m1*zeta_conj*z3**2*z2**3*z1_conj - 3*zeta*zeta_conj**2*z3**2*z2**3*z1_conj - zeta_conj**2*z3**3*z2**3*z1_conj - 6*m3*m2*zeta*z3**2*z1*z1_conj - 9*m2**2*zeta*z3**2*z1*z1_conj - 4*m3*m1*zeta*z3**2*z1*z1_conj - 12*m2*m1*zeta*z3**2*z1*z1_conj - 3*m1**2*zeta*z3**2*z1*z1_conj + 3*m3*m2*z3**3*z1*z1_conj + 2*m3*m1*z3**3*z1*z1_conj - 2*m2*m1*z3**3*z1*z1_conj - m1**2*z3**3*z1*z1_conj + 6*m2*zeta*zeta_conj*z3**3*z1*z1_conj + 4*m1*zeta*zeta_conj*z3**3*z1*z1_conj - 9*m3**2*zeta*z3*z2*z1*z1_conj - 24*m3*m2*zeta*z3*z2*z1*z1_conj - 9*m2**2*zeta*z3*z2*z1*z1_conj - 24*m3*m1*zeta*z3*z2*z1*z1_conj - 24*m2*m1*zeta*z3*z2*z1*z1_conj - 9*m1**2*zeta*z3*z2*z1*z1_conj + 9*m3**2*z3**2*z2*z1*z1_conj + 15*m3*m2*z3**2*z2*z1*z1_conj + 9*m2**2*z3**2*z2*z1*z1_conj + 6*m3*m1*z3**2*z2*z1*z1_conj - 6*m2*m1*z3**2*z2*z1*z1_conj - 9*m1**2*z3**2*z2*z1*z1_conj + 18*m3*zeta*zeta_conj*z3**2*z2*z1*z1_conj + 36*m2*zeta*zeta_conj*z3**2*z2*z1*z1_conj + 36*m1*zeta*zeta_conj*z3**2*z2*z1*z1_conj - 9*m3*zeta_conj*z3**3*z2*z1*z1_conj + 3*m2*zeta_conj*z3**3*z2*z1*z1_conj + 12*m1*zeta_conj*z3**3*z2*z1*z1_conj - 9*zeta*zeta_conj**2*z3**3*z2*z1*z1_conj - 9*m3**2*zeta*z2**2*z1*z1_conj - 6*m3*m2*zeta*z2**2*z1*z1_conj - 12*m3*m1*zeta*z2**2*z1*z1_conj - 4*m2*m1*zeta*z2**2*z1*z1_conj - 3*m1**2*zeta*z2**2*z1*z1_conj + 9*m3**2*z3*z2**2*z1*z1_conj + 15*m3*m2*z3*z2**2*z1*z1_conj +
				9*m2**2*z3*z2**2*z1*z1_conj - 6*m3*m1*z3*z2**2*z1*z1_conj + 6*m2*m1*z3*z2**2*z1*z1_conj - 9*m1**2*z3*z2**2*z1*z1_conj + 36*m3*zeta*zeta_conj*z3*z2**2*z1*z1_conj + 18*m2*zeta*zeta_conj*z3*z2**2*z1*z1_conj + 36*m1*zeta*zeta_conj*z3*z2**2*z1*z1_conj - 9*m3*zeta_conj*z3**2*z2**2*z1*z1_conj - 9*m2*zeta_conj*z3**2*z2**2*z1*z1_conj + 36*m1*zeta_conj*z3**2*z2**2*z1*z1_conj - 27*zeta*zeta_conj**2*z3**2*z2**2*z1*z1_conj - 9*zeta_conj**2*z3**3*z2**2*z1*z1_conj + 3*m3*m2*z2**3*z1*z1_conj - 2*m3*m1*z2**3*z1*z1_conj + 2*m2*m1*z2**3*z1*z1_conj - m1**2*z2**3*z1*z1_conj + 6*m3*zeta*zeta_conj*z2**3*z1*z1_conj + 4*m1*zeta*zeta_conj*z2**3*z1*z1_conj + 3*m3*zeta_conj*z3*z2**3*z1*z1_conj - 9*m2*zeta_conj*z3*z2**3*z1*z1_conj + 12*m1*zeta_conj*z3*z2**3*z1*z1_conj - 9*zeta*zeta_conj**2*z3*z2**3*z1*z1_conj - 9*zeta_conj**2*z3**2*z2**3*z1*z1_conj - 3*m3**2*zeta*z3*z1**2*z1_conj - 12*m3*m2*zeta*z3*z1**2*z1_conj - 9*m2**2*zeta*z3*z1**2*z1_conj - 4*m3*m1*zeta*z3*z1**2*z1_conj - 6*m2*m1*zeta*z3*z1**2*z1_conj + 3*m3**2*z3**2*z1**2*z1_conj + 6*m3*m2*z3**2*z1**2*z1_conj + m3*m1*z3**2*z1**2*z1_conj - 3*m2*m1*z3**2*z1**2*z1_conj + 6*m3*zeta*zeta_conj*z3**2*z1**2*z1_conj + 18*m2*zeta*zeta_conj*z3**2*z1**2*z1_conj + 6*m1*zeta*zeta_conj*z3**2*z1**2*z1_conj - 3*m3*zeta_conj*z3**3*z1**2*z1_conj + 3*m2*zeta_conj*z3**3*z1**2*z1_conj + 2*m1*zeta_conj*z3**3*z1**2*z1_conj - 3*zeta*zeta_conj**2*z3**3*z1**2*z1_conj - 9*m3**2*zeta*z2*z1**2*z1_conj - 12*m3*m2*zeta*z2*z1**2*z1_conj - 3*m2**2*zeta*z2*z1**2*z1_conj - 
				6*m3*m1*zeta*z2*z1**2*z1_conj - 4*m2*m1*zeta*z2*z1**2*z1_conj + 9*m3**2*z3*z2*z1**2*z1_conj + 12*m3*m2*z3*z2*z1**2*z1_conj + 9*m2**2*z3*z2*z1**2*z1_conj - 3*m3*m1*z3*z2*z1**2*z1_conj - 3*m2*m1*z3*z2*z1**2*z1_conj + 36*m3*zeta*zeta_conj*z3*z2*z1**2*z1_conj + 36*m2*zeta*zeta_conj*z3*z2*z1**2*z1_conj + 18*m1*zeta*zeta_conj*z3*z2*z1**2*z1_conj - 9*m3*zeta_conj*z3**2*z2*z1**2*z1_conj + 9*m2*zeta_conj*z3**2*z2*z1**2*z1_conj + 18*m1*zeta_conj*z3**2*z2*z1**2*z1_conj - 27*zeta*zeta_conj**2*z3**2*z2*z1**2*z1_conj - 9*zeta_conj**2*z3**3*z2*z1**2*z1_conj + 6*m3*m2*z2**2*z1**2*z1_conj + 3*m2**2*z2**2*z1**2*z1_conj - 3*m3*m1*z2**2*z1**2*z1_conj + m2*m1*z2**2*z1**2*z1_conj + 18*m3*zeta*zeta_conj*z2**2*z1**2*z1_conj + 6*m2*zeta*zeta_conj*z2**2*z1**2*z1_conj + 6*m1*zeta*zeta_conj*z2**2*z1**2*z1_conj + 9*m3*zeta_conj*z3*z2**2*z1**2*z1_conj - 9*m2*zeta_conj*z3*z2**2*z1**2*z1_conj + 18*m1*zeta_conj*z3*z2**2*z1**2*z1_conj - 27*zeta*zeta_conj**2*z3*z2**2*z1**2*z1_conj - 27*zeta_conj**2*z3**2*z2**2*z1**2*z1_conj + 3*m3*zeta_conj*z2**3*z1**2*z1_conj - 3*m2*zeta_conj*z2**3*z1**2*z1_conj + 2*m1*zeta_conj*z2**3*z1**2*z1_conj - 3*zeta*zeta_conj**2*z2**3*z1**2*z1_conj - 9*zeta_conj**2*z3*z2**3*z1**2*z1_conj - m3**2*zeta*z1**3*z1_conj - 2*m3*m2*zeta*z1**3*z1_conj - m2**2*zeta*z1**3*z1_conj + m3**2*z3*z1**3*z1_conj + m3*m2*z3*z1**3*z1_conj + 4*m3*zeta*zeta_conj*z3*z1**3*z1_conj + 6*m2*zeta*zeta_conj*z3*z1**3*z1_conj - m3*zeta_conj*z3**2*z1**3*z1_conj + 3*m2*zeta_conj*z3**2*z1**3*z1_conj - 3*zeta*zeta_conj**2*z3**2*z1**3*z1_conj - 
				zeta_conj**2*z3**3*z1**3*z1_conj + m3*m2*z2*z1**3*z1_conj + m2**2*z2*z1**3*z1_conj + 6*m3*zeta*zeta_conj*z2*z1**3*z1_conj + 4*m2*zeta*zeta_conj*z2*z1**3*z1_conj + 3*m3*zeta_conj*z3*z2*z1**3*z1_conj + 3*m2*zeta_conj*z3*z2*z1**3*z1_conj - 9*zeta*zeta_conj**2*z3*z2*z1**3*z1_conj - 9*zeta_conj**2*z3**2*z2*z1**3*z1_conj + 3*m3*zeta_conj*z2**2*z1**3*z1_conj - m2*zeta_conj*z2**2*z1**3*z1_conj - 3*zeta*zeta_conj**2*z2**2*z1**3*z1_conj - 9*zeta_conj**2*z3*z2**2*z1**3*z1_conj - zeta_conj**2*z2**3*z1**3*z1_conj + z2_conj*(-(m2**2*zeta*z3**3) - 2*m2*m1*zeta*z3**3 - m1**2*zeta*z3**3 - 4*m3*m2*zeta*z3**2*z2 - 3*m2**2*zeta*z3**2*z2 - 6*m3*m1*zeta*z3**2*z2 - 12*m2*m1*zeta*z3**2*z2 - 9*m1**2*zeta*z3**2*z2 + 2*m3*m2*z3**3*z2 - m2**2*z3**3*z2 + 3*m3*m1*z3**3*z2 - 2*m2*m1*z3**3*z2 - 3*m3**2*zeta*z3*z2**2 - 4*m3*m2*zeta*z3*z2**2 - 12*m3*m1*zeta*z3*z2**2 - 6*m2*m1*zeta*z3*z2**2 - 9*m1**2*zeta*z3*z2**2 + 3*m3**2*z3**2*z2**2 + m3*m2*z3**2*z2**2 + 6*m3*m1*z3**2*z2**2 - 3*m2*m1*z3**2*z2**2 - m3**2*zeta*z2**3 - 2*m3*m1*zeta*z2**3 - m1**2*zeta*z2**3 + m3**2*z3*z2**3 + m3*m1*z3*z2**3 - 6*m3*m2*zeta*z3**2*z1 - 9*m2**2*zeta*z3**2*z1 - 4*m3*m1*zeta*z3**2*z1 - 12*m2*m1*zeta*z3**2*z1 - 3*m1**2*zeta*z3**2*z1 + 3*m3*m2*z3**3*z1 - 3*m2**2*z3**3*z1 + 2*m3*m1*z3**3*z1 - m2*m1*z3**3*z1 + m1**2*z3**3*z1 - 9*m3**2*zeta*z3*z2*z1 - 24*m3*m2*zeta*z3*z2*z1 - 9*m2**2*zeta*z3*z2*z1 - 24*m3*m1*zeta*z3*z2*z1 - 24*m2*m1*zeta*z3*z2*z1 - 9*m1**2*zeta*z3*z2*z1 + 9*m3**2*z3**2*z2*z1 + 6*m3*m2*z3**2*z2*z1 - 9*m2**2*z3**2*z2*z1 + 15*m3*m1*z3**2*z2*z1 - 6*m2*m1*z3**2*z2*z1 + 9*m1**2*z3**2*z2*z1 - 
				9*m3**2*zeta*z2**2*z1 - 6*m3*m2*zeta*z2**2*z1 - 12*m3*m1*zeta*z2**2*z1 - 4*m2*m1*zeta*z2**2*z1 - 3*m1**2*zeta*z2**2*z1 + 9*m3**2*z3*z2**2*z1 - 3*m3*m2*z3*z2**2*z1 + 12*m3*m1*z3*z2**2*z1 - 3*m2*m1*z3*z2**2*z1 + 9*m1**2*z3*z2**2*z1 + m3*m1*z2**3*z1 + m1**2*z2**3*z1 - 3*m3**2*zeta*z3*z1**2 - 12*m3*m2*zeta*z3*z1**2 - 9*m2**2*zeta*z3*z1**2 - 4*m3*m1*zeta*z3*z1**2 - 6*m2*m1*zeta*z3*z1**2 + 3*m3**2*z3**2*z1**2 + 3*m3*m2*z3**2*z1**2 - 9*m2**2*z3**2*z1**2 + 4*m3*m1*z3**2*z1**2 + 3*m2*m1*z3**2*z1**2 + 3*m1**2*z3**2*z1**2 - 9*m3**2*zeta*z2*z1**2 - 12*m3*m2*zeta*z2*z1**2 - 3*m2**2*zeta*z2*z1**2 - 6*m3*m1*zeta*z2*z1**2 - 4*m2*m1*zeta*z2*z1**2 + 9*m3**2*z3*z2*z1**2 - 6*m3*m2*z3*z2*z1**2 - 9*m2**2*z3*z2*z1**2 + 15*m3*m1*z3*z2*z1**2 + 6*m2*m1*z3*z2*z1**2 + 9*m1**2*z3*z2*z1**2 - 3*m3*m2*z2**2*z1**2 + 6*m3*m1*z2**2*z1**2 + m2*m1*z2**2*z1**2 + 3*m1**2*z2**2*z1**2 - m3**2*zeta*z1**3 - 2*m3*m2*zeta*z1**3 - m2**2*zeta*z1**3 + m3**2*z3*z1**3 - m3*m2*z3*z1**3 - 3*m2**2*z3*z1**3 + 2*m3*m1*z3*z1**3 + 3*m2*m1*z3*z1**3 - 2*m3*m2*z2*z1**3 - m2**2*z2*z1**3 + 3*m3*m1*z2*z1**3 + 2*m2*m1*z2*z1**3 - zeta_conj**2*(z2**2*z1**2*(z2*z1 + 3*zeta*(z2 + z1)) + z3**3*(z2**3 + 9*z2*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 3*z2**2*(zeta + 3*z1)) + 3*z3**2*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)) + 9*z3*z2*z1*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2))) + zeta_conj*(2*m2*(z2*z1**2*(3*zeta*z2 + 2*zeta*z1 + z2*z1) + 3*z3*z1*(zeta*z1**2 + 3*z2**2*(zeta + z1) + 2*z2*z1*(3*zeta + z1)) + z3**3*(z2**2 + 3*z1*(zeta + z1) + 2*z2*(zeta + 3*z1)) + 3*z3**2*(6*z2*z1*(zeta + z1) + 
				z1**2*(3*zeta + z1) + z2**2*(zeta + 3*z1))) + m1*(z3**3*(6*zeta*z2 + 3*z2**2 + 4*zeta*z1 + 3*z2*z1 - z1**2) + 3*z3*z2*(-3*z2*z1*(-4*zeta + z1) - 3*z1**2*(-2*zeta + z1) + z2**2*(2*zeta + z1)) + 3*z3**2*(z2**3 - 3*z2*z1*(-4*zeta + z1) - z1**2*(-2*zeta + z1) + 3*z2**2*(2*zeta + z1)) + z2**2*z1*(-(z1*(z2 + 3*z1)) + zeta*(4*z2 + 6*z1))) + m3*(-3*z3**3*(z2**2 + 3*z2*z1 + z1**2) - z3**2*(z2**3 + 9*z2**2*z1 + 9*z2*z1**2 + z1**3 - 6*zeta*(z2**2 + 3*z2*z1 + z1**2)) + 3*z2*z1*(z2*z1*(z2 + z1) + 2*zeta*(z2**2 + 3*z2*z1 + z1**2)) + z3*(3*z2*z1*(z2**2 + 3*z2*z1 + z1**2) + 4*zeta*(z2**3 + 9*z2**2*z1 + 9*z2*z1**2 + z1**3)))) + (-2*m2*zeta*z3**3*z2 - 3*m1*zeta*z3**3*z2 - 3*m2*zeta*z3**2*z2**2 - 9*m1*zeta*z3**2*z2**2 - m2*z3**3*z2**2 - 3*m1*z3**3*z2**2 - 3*m1*zeta*z3*z2**3 - 3*m1*z3**2*z2**3 - 3*m2*zeta*z3**3*z1 - 2*m1*zeta*z3**3*z1 - 18*m2*zeta*z3**2*z2*z1 - 18*m1*zeta*z3**2*z2*z1 - 6*m2*z3**3*z2*z1 - 6*m1*z3**3*z2*z1 - 9*m2*zeta*z3*z2**2*z1 - 18*m1*zeta*z3*z2**2*z1 - 9*m2*z3**2*z2**2*z1 - 18*m1*z3**2*z2**2*z1 - 2*m1*zeta*z2**3*z1 - 6*m1*z3*z2**3*z1 - 9*m2*zeta*z3**2*z1**2 - 3*m1*zeta*z3**2*z1**2 - 3*m2*z3**3*z1**2 - m1*z3**3*z1**2 - 18*m2*zeta*z3*z2*z1**2 - 9*m1*zeta*z3*z2*z1**2 - 18*m2*z3**2*z2*z1**2 - 9*m1*z3**2*z2*z1**2 - 3*m2*zeta*z2**2*z1**2 - 3*m1*zeta*z2**2*z1**2 - 9*m2*z3*z2**2*z1**2 - 9*m1*z3*z2**2*z1**2 - m1*z2**3*z1**2 - 3*m2*zeta*z3*z1**3 - 3*m2*z3**2*z1**3 - 2*m2*zeta*z2*z1**3 - 6*m2*z3*z2*z1**3 - m2*z2**2*z1**3 + m3*(-zeta + z3)*(3*z3**2*(z2**2 + 3*z2*z1 + z1**2) + 3*z2*z1*(z2**2 + 3*z2*z1 + z1**2) + 2*z3*(z2**3 + 9*z2**2*z1 + 9*z2*z1**2 + z1**3)) + zeta_conj*(z2**2*z1**2*(z2*z1 + 3*zeta*(z2 + z1)) + 
				z3**3*(z2**3 + 9*z2*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 3*z2**2*(zeta + 3*z1)) + 3*z3**2*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)) + 9*z3*z2*z1*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2))))*z1_conj) + z3_conj*(-(m2**2*zeta*z3**3) - 2*m2*m1*zeta*z3**3 - m1**2*zeta*z3**3 - 4*m3*m2*zeta*z3**2*z2 - 3*m2**2*zeta*z3**2*z2 - 6*m3*m1*zeta*z3**2*z2 - 12*m2*m1*zeta*z3**2*z2 - 9*m1**2*zeta*z3**2*z2 + m2**2*z3**3*z2 + m2*m1*z3**3*z2 + 4*m2*zeta*zeta_conj*z3**3*z2 + 6*m1*zeta*zeta_conj*z3**3*z2 - 3*m3**2*zeta*z3*z2**2 - 4*m3*m2*zeta*z3*z2**2 - 12*m3*m1*zeta*z3*z2**2 - 6*m2*m1*zeta*z3*z2**2 - 9*m1**2*zeta*z3*z2**2 + m3*m2*z3**2*z2**2 + 3*m2**2*z3**2*z2**2 - 3*m3*m1*z3**2*z2**2 + 6*m2*m1*z3**2*z2**2 + 6*m3*zeta*zeta_conj*z3**2*z2**2 + 6*m2*zeta*zeta_conj*z3**2*z2**2 + 18*m1*zeta*zeta_conj*z3**2*z2**2 - m2*zeta_conj*z3**3*z2**2 + 3*m1*zeta_conj*z3**3*z2**2 - 3*zeta*zeta_conj**2*z3**3*z2**2 - m3**2*zeta*z2**3 - 2*m3*m1*zeta*z2**3 - m1**2*zeta*z2**3 - m3**2*z3*z2**3 + 2*m3*m2*z3*z2**3 - 2*m3*m1*z3*z2**3 + 3*m2*m1*z3*z2**3 + 4*m3*zeta*zeta_conj*z3*z2**3 + 6*m1*zeta*zeta_conj*z3*z2**3 + 2*m3*zeta_conj*z3**2*z2**3 - 3*m2*zeta_conj*z3**2*z2**3 + 3*m1*zeta_conj*z3**2*z2**3 - 3*zeta*zeta_conj**2*z3**2*z2**3 - zeta_conj**2*z3**3*z2**3 - 6*m3*m2*zeta*z3**2*z1 - 9*m2**2*zeta*z3**2*z1 - 4*m3*m1*zeta*z3**2*z1 - 12*m2*m1*zeta*z3**2*z1 - 3*m1**2*zeta*z3**2*z1 + m2*m1*z3**3*z1 + m1**2*z3**3*z1 + 6*m2*zeta*zeta_conj*z3**3*z1 + 4*m1*zeta*zeta_conj*z3**3*z1 - 9*m3**2*zeta*z3*z2*z1 - 24*m3*m2*zeta*z3*z2*z1 - 9*m2**2*zeta*z3*z2*z1 - 24*m3*m1*zeta*z3*z2*z1 - 24*m2*m1*zeta*z3*z2*z1 - 9*m1**2*zeta*z3*z2*z1 -
				3*m3*m2*z3**2*z2*z1 + 9*m2**2*z3**2*z2*z1 - 3*m3*m1*z3**2*z2*z1 + 12*m2*m1*z3**2*z2*z1 + 9*m1**2*z3**2*z2*z1 + 18*m3*zeta*zeta_conj*z3**2*z2*z1 + 36*m2*zeta*zeta_conj*z3**2*z2*z1 + 36*m1*zeta*zeta_conj*z3**2*z2*z1 + 3*m2*zeta_conj*z3**3*z2*z1 + 3*m1*zeta_conj*z3**3*z2*z1 - 9*zeta*zeta_conj**2*z3**3*z2*z1 - 9*m3**2*zeta*z2**2*z1 - 6*m3*m2*zeta*z2**2*z1 - 12*m3*m1*zeta*z2**2*z1 - 4*m2*m1*zeta*z2**2*z1 - 3*m1**2*zeta*z2**2*z1 - 9*m3**2*z3*z2**2*z1 + 6*m3*m2*z3*z2**2*z1 + 9*m2**2*z3*z2**2*z1 - 6*m3*m1*z3*z2**2*z1 + 15*m2*m1*z3*z2**2*z1 + 9*m1**2*z3*z2**2*z1 + 36*m3*zeta*zeta_conj*z3*z2**2*z1 + 18*m2*zeta*zeta_conj*z3*z2**2*z1 + 36*m1*zeta*zeta_conj*z3*z2**2*z1 + 18*m3*zeta_conj*z3**2*z2**2*z1 - 9*m2*zeta_conj*z3**2*z2**2*z1 + 9*m1*zeta_conj*z3**2*z2**2*z1 - 27*zeta*zeta_conj**2*z3**2*z2**2*z1 - 9*zeta_conj**2*z3**3*z2**2*z1 - 3*m3**2*z2**3*z1 + 3*m3*m2*z2**3*z1 - m3*m1*z2**3*z1 + 2*m2*m1*z2**3*z1 + m1**2*z2**3*z1 + 6*m3*zeta*zeta_conj*z2**3*z1 + 4*m1*zeta*zeta_conj*z2**3*z1 + 12*m3*zeta_conj*z3*z2**3*z1 - 9*m2*zeta_conj*z3*z2**3*z1 + 3*m1*zeta_conj*z3*z2**3*z1 - 9*zeta*zeta_conj**2*z3*z2**3*z1 - 9*zeta_conj**2*z3**2*z2**3*z1 - 3*m3**2*zeta*z3*z1**2 - 12*m3*m2*zeta*z3*z1**2 - 9*m2**2*zeta*z3*z1**2 - 4*m3*m1*zeta*z3*z1**2 - 6*m2*m1*zeta*z3*z1**2 - 3*m3*m2*z3**2*z1**2 + m3*m1*z3**2*z1**2 + 6*m2*m1*z3**2*z1**2 + 3*m1**2*z3**2*z1**2 + 6*m3*zeta*zeta_conj*z3**2*z1**2 + 18*m2*zeta*zeta_conj*z3**2*z1**2 + 6*m1*zeta*zeta_conj*z3**2*z1**2 + 3*m2*zeta_conj*z3**3*z1**2 - m1*zeta_conj*z3**3*z1**2 - 3*zeta*zeta_conj**2*z3**3*z1**2 - 9*m3**2*zeta*z2*z1**2 - 12*m3*m2*zeta*z2*z1**2 - 3*m2**2*zeta*z2*z1**2 - 6*m3*m1*zeta*z2*z1**2 - 4*m2*m1*zeta*z2*z1**2 - 9*m3**2*z3*z2*z1**2 -
				6*m3*m2*z3*z2*z1**2 + 9*m2**2*z3*z2*z1**2 + 6*m3*m1*z3*z2*z1**2 + 15*m2*m1*z3*z2*z1**2 + 9*m1**2*z3*z2*z1**2 + 36*m3*zeta*zeta_conj*z3*z2*z1**2 + 36*m2*zeta*zeta_conj*z3*z2*z1**2 + 18*m1*zeta*zeta_conj*z3*z2*z1**2 + 18*m3*zeta_conj*z3**2*z2*z1**2 + 9*m2*zeta_conj*z3**2*z2*z1**2 - 9*m1*zeta_conj*z3**2*z2*z1**2 - 27*zeta*zeta_conj**2*z3**2*z2*z1**2 - 9*zeta_conj**2*z3**3*z2*z1**2 - 9*m3**2*z2**2*z1**2 + 3*m3*m2*z2**2*z1**2 + 3*m2**2*z2**2*z1**2 + 3*m3*m1*z2**2*z1**2 + 4*m2*m1*z2**2*z1**2 + 3*m1**2*z2**2*z1**2 + 18*m3*zeta*zeta_conj*z2**2*z1**2 + 6*m2*zeta*zeta_conj*z2**2*z1**2 + 6*m1*zeta*zeta_conj*z2**2*z1**2 + 36*m3*zeta_conj*z3*z2**2*z1**2 - 9*m2*zeta_conj*z3*z2**2*z1**2 - 9*m1*zeta_conj*z3*z2**2*z1**2 - 27*zeta*zeta_conj**2*z3*z2**2*z1**2 - 27*zeta_conj**2*z3**2*z2**2*z1**2 + 6*m3*zeta_conj*z2**3*z1**2 - 3*m2*zeta_conj*z2**3*z1**2 - m1*zeta_conj*z2**3*z1**2 - 3*zeta*zeta_conj**2*z2**3*z1**2 - 9*zeta_conj**2*z3*z2**3*z1**2 - m3**2*zeta*z1**3 - 2*m3*m2*zeta*z1**3 - m2**2*zeta*z1**3 - m3**2*z3*z1**3 - 2*m3*m2*z3*z1**3 + 2*m3*m1*z3*z1**3 + 3*m2*m1*z3*z1**3 + 4*m3*zeta*zeta_conj*z3*z1**3 + 6*m2*zeta*zeta_conj*z3*z1**3 + 2*m3*zeta_conj*z3**2*z1**3 + 3*m2*zeta_conj*z3**2*z1**3 - 3*m1*zeta_conj*z3**2*z1**3 - 3*zeta*zeta_conj**2*z3**2*z1**3 - zeta_conj**2*z3**3*z1**3 - 3*m3**2*z2*z1**3 - m3*m2*z2*z1**3 + m2**2*z2*z1**3 + 3*m3*m1*z2*z1**3 + 2*m2*m1*z2*z1**3 + 6*m3*zeta*zeta_conj*z2*z1**3 + 4*m2*zeta*zeta_conj*z2*z1**3 + 12*m3*zeta_conj*z3*z2*z1**3 + 3*m2*zeta_conj*z3*z2*z1**3 - 9*m1*zeta_conj*z3*z2*z1**3 - 9*zeta*zeta_conj**2*z3*z2*z1**3 - 9*zeta_conj**2*z3**2*z2*z1**3 + 6*m3*zeta_conj*z2**2*z1**3 - m2*zeta_conj*z2**2*z1**3 - 3*m1*zeta_conj*z2**2*z1**3 - 3*zeta*zeta_conj**2*z2**2*z1**3 - 9*zeta_conj**2*z3*z2**2*z1**3 - zeta_conj**2*z2**3*z1**3 +
				(-3*m1*zeta*z3**3*z2 - 3*m3*zeta*z3**2*z2**2 - 9*m1*zeta*z3**2*z2**2 - 3*m1*z3**3*z2**2 - 2*m3*zeta*z3*z2**3 - 3*m1*zeta*z3*z2**3 - m3*z3**2*z2**3 - 3*m1*z3**2*z2**3 - 2*m1*zeta*z3**3*z1 - 9*m3*zeta*z3**2*z2*z1 - 18*m1*zeta*z3**2*z2*z1 - 6*m1*z3**3*z2*z1 - 18*m3*zeta*z3*z2**2*z1 - 18*m1*zeta*z3*z2**2*z1 - 9*m3*z3**2*z2**2*z1 - 18*m1*z3**2*z2**2*z1 - 3*m3*zeta*z2**3*z1 - 2*m1*zeta*z2**3*z1 - 6*m3*z3*z2**3*z1 - 6*m1*z3*z2**3*z1 - 3*m3*zeta*z3**2*z1**2 - 3*m1*zeta*z3**2*z1**2 - m1*z3**3*z1**2 - 18*m3*zeta*z3*z2*z1**2 - 9*m1*zeta*z3*z2*z1**2 - 9*m3*z3**2*z2*z1**2 - 9*m1*z3**2*z2*z1**2 - 9*m3*zeta*z2**2*z1**2 - 3*m1*zeta*z2**2*z1**2 - 18*m3*z3*z2**2*z1**2 - 9*m1*z3*z2**2*z1**2 - 3*m3*z2**3*z1**2 - m1*z2**3*z1**2 - 2*m3*zeta*z3*z1**3 - m3*z3**2*z1**3 - 3*m3*zeta*z2*z1**3 - 6*m3*z3*z2*z1**3 - 3*m3*z2**2*z1**3 + m2*(-zeta + z2)*(z2*z1**2*(3*z2 + 2*z1) + z3**3*(2*z2 + 3*z1) + 3*z3*z1*(3*z2**2 + 6*z2*z1 + z1**2) + 3*z3**2*(z2**2 + 6*z2*z1 + 3*z1**2)) + zeta_conj*(z2**2*z1**2*(z2*z1 + 3*zeta*(z2 + z1)) + z3**3*(z2**3 + 9*z2*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 3*z2**2*(zeta + 3*z1)) + 3*z3**2*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)) + 9*z3*z2*z1*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2))))*z1_conj - z2_conj*(2*m2*zeta*z3**3*z2 + 3*m1*zeta*z3**3*z2 + 3*m3*zeta*z3**2*z2**2 + 3*m2*zeta*z3**2*z2**2 + 9*m1*zeta*z3**2*z2**2 + m2*z3**3*z2**2 + 2*m3*zeta*z3*z2**3 + 3*m1*zeta*z3*z2**3 + m3*z3**2*z2**3 + 3*m2*zeta*z3**3*z1 + 2*m1*zeta*z3**3*z1 + 9*m3*zeta*z3**2*z2*z1 + 18*m2*zeta*z3**2*z2*z1 + 18*m1*zeta*z3**2*z2*z1 + 6*m2*z3**3*z2*z1 - 3*m1*z3**3*z2*z1 +
				18*m3*zeta*z3*z2**2*z1 + 9*m2*zeta*z3*z2**2*z1 + 18*m1*zeta*z3*z2**2*z1 + 9*m3*z3**2*z2**2*z1 + 9*m2*z3**2*z2**2*z1 - 9*m1*z3**2*z2**2*z1 + 3*m3*zeta*z2**3*z1 + 2*m1*zeta*z2**3*z1 + 6*m3*z3*z2**3*z1 - 3*m1*z3*z2**3*z1 + 3*m3*zeta*z3**2*z1**2 + 9*m2*zeta*z3**2*z1**2 + 3*m1*zeta*z3**2*z1**2 + 3*m2*z3**3*z1**2 - 2*m1*z3**3*z1**2 + 18*m3*zeta*z3*z2*z1**2 + 18*m2*zeta*z3*z2*z1**2 + 9*m1*zeta*z3*z2*z1**2 + 9*m3*z3**2*z2*z1**2 + 18*m2*z3**2*z2*z1**2 - 18*m1*z3**2*z2*z1**2 + 9*m3*zeta*z2**2*z1**2 + 3*m2*zeta*z2**2*z1**2 + 3*m1*zeta*z2**2*z1**2 + 18*m3*z3*z2**2*z1**2 + 9*m2*z3*z2**2*z1**2 - 18*m1*z3*z2**2*z1**2 + 3*m3*z2**3*z1**2 - 2*m1*z2**3*z1**2 + 2*m3*zeta*z3*z1**3 + 3*m2*zeta*z3*z1**3 + m3*z3**2*z1**3 + 3*m2*z3**2*z1**3 - 3*m1*z3**2*z1**3 + 3*m3*zeta*z2*z1**3 + 2*m2*zeta*z2*z1**3 + 6*m3*z3*z2*z1**3 + 6*m2*z3*z2*z1**3 - 9*m1*z3*z2*z1**3 + 3*m3*z2**2*z1**3 + m2*z2**2*z1**3 - 3*m1*z2**2*z1**3 - zeta_conj*(z2**2*z1**2*(z2*z1 + 3*zeta*(z2 + z1)) + z3**3*(z2**3 + 9*z2*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 3*z2**2*(zeta + 3*z1)) + 3*z3**2*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)) + 9*z3*z2*z1*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2))) + (z2**2*z1**2*(z2*z1 + 3*zeta*(z2 + z1)) + z3**3*(z2**3 + 9*z2*z1*(zeta + z1) + z1**2*(3*zeta + z1) + 3*z2**2*(zeta + 3*z1)) + 3*z3**2*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)) + 9*z3*z2*z1*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2)))*z1_conj)))

		coeff3 = (m2**3*zeta*z3**3 + 3*m2**2*m1*zeta*z3**3 + 3*m2*m1**2*zeta*z3**3 + m1**3*zeta*z3**3 + 3*m3*m2**2*zeta*z3**2*z2 + 12*m3*m2*m1*zeta*z3**2*z2 + 9*m2**2*m1*zeta*z3**2*z2 + 9*m3*m1**2*zeta*z3**2*z2 + 18*m2*m1**2*zeta*z3**2*z2 + 9*m1**3*zeta*z3**2*z2 - m3*m2**2*z3**3*z2 - m2**3*z3**3*z2 - 4*m3*m2*m1*z3**3*z2 - 2*m2**2*m1*z3**3*z2 - 3*m3*m1**2*z3**3*z2 - m2*m1**2*z3**3*z2 - 3*m2**2*zeta*zeta_conj*z3**3*z2 - 12*m2*m1*zeta*zeta_conj*z3**3*z2 - 9*m1**2*zeta*zeta_conj*z3**3*z2 + 3*m3**2*m2*zeta*z3*z2**2 + 9*m3**2*m1*zeta*z3*z2**2 + 12*m3*m2*m1*zeta*z3*z2**2 + 18*m3*m1**2*zeta*z3*z2**2 + 9*m2*m1**2*zeta*z3*z2**2 + 9*m1**3*zeta*z3*z2**2 - 2*m3**2*m2*z3**2*z2**2 - 2*m3*m2**2*z3**2*z2**2 - 6*m3**2*m1*z3**2*z2**2 - 8*m3*m2*m1*z3**2*z2**2 - 6*m2**2*m1*z3**2*z2**2 - 6*m3*m1**2*z3**2*z2**2 - 6*m2*m1**2*z3**2*z2**2 - 6*m3*m2*zeta*zeta_conj*z3**2*z2**2 - 18*m3*m1*zeta*zeta_conj*z3**2*z2**2 - 18*m2*m1*zeta*zeta_conj*z3**2*z2**2 - 27*m1**2*zeta*zeta_conj*z3**2*z2**2 + 2*m3*m2*zeta_conj*z3**3*z2**2 + 2*m2**2*zeta_conj*z3**3*z2**2 + 6*m3*m1*zeta_conj*z3**3*z2**2 + 2*m2*m1*zeta_conj*z3**3*z2**2 - 3*m1**2*zeta_conj*z3**3*z2**2 + 3*m2*zeta*zeta_conj**2*z3**3*z2**2 + 9*m1*zeta*zeta_conj**2*z3**3*z2**2 + m3**3*zeta*z2**3 + 3*m3**2*m1*zeta*z2**3 + 3*m3*m1**2*zeta*z2**3 + m1**3*zeta*z2**3 - m3**3*z3*z2**3 - m3**2*m2*z3*z2**3 - 2*m3**2*m1*z3*z2**3 - 4*m3*m2*m1*z3*z2**3 - m3*m1**2*z3*z2**3 - 3*m2*m1**2*z3*z2**3 - 3*m3**2*zeta*zeta_conj*z3*z2**3 - 12*m3*m1*zeta*zeta_conj*z3*z2**3 - 9*m1**2*zeta*zeta_conj*z3*z2**3 + 2*m3**2*zeta_conj*z3**2*z2**3 +
				2*m3*m2*zeta_conj*z3**2*z2**3 + 2*m3*m1*zeta_conj*z3**2*z2**3 + 6*m2*m1*zeta_conj*z3**2*z2**3 - 3*m1**2*zeta_conj*z3**2*z2**3 + 3*m3*zeta*zeta_conj**2*z3**2*z2**3 + 9*m1*zeta*zeta_conj**2*z3**2*z2**3 - m3*zeta_conj**2*z3**3*z2**3 - m2*zeta_conj**2*z3**3*z2**3 + 2*m1*zeta_conj**2*z3**3*z2**3 - zeta*zeta_conj**3*z3**3*z2**3 + 9*m3*m2**2*zeta*z3**2*z1 + 9*m2**3*zeta*z3**2*z1 + 12*m3*m2*m1*zeta*z3**2*z1 + 18*m2**2*m1*zeta*z3**2*z1 + 3*m3*m1**2*zeta*z3**2*z1 + 9*m2*m1**2*zeta*z3**2*z1 - 3*m3*m2**2*z3**3*z1 - 4*m3*m2*m1*z3**3*z1 - m2**2*m1*z3**3*z1 - m3*m1**2*z3**3*z1 - 2*m2*m1**2*z3**3*z1 - m1**3*z3**3*z1 - 9*m2**2*zeta*zeta_conj*z3**3*z1 - 12*m2*m1*zeta*zeta_conj*z3**3*z1 - 3*m1**2*zeta*zeta_conj*z3**3*z1 + 18*m3**2*m2*zeta*z3*z2*z1 + 18*m3*m2**2*zeta*z3*z2*z1 + 18*m3**2*m1*zeta*z3*z2*z1 + 48*m3*m2*m1*zeta*z3*z2*z1 + 18*m2**2*m1*zeta*z3*z2*z1 + 18*m3*m1**2*zeta*z3*z2*z1 + 18*m2*m1**2*zeta*z3*z2*z1 - 12*m3**2*m2*z3**2*z2*z1 - 12*m3*m2**2*z3**2*z2*z1 - 9*m2**3*z3**2*z2*z1 - 12*m3**2*m1*z3**2*z2*z1 - 24*m3*m2*m1*z3**2*z2*z1 - 15*m2**2*m1*z3**2*z2*z1 - 12*m3*m1**2*z3**2*z2*z1 - 15*m2*m1**2*z3**2*z2*z1 - 9*m1**3*z3**2*z2*z1 - 36*m3*m2*zeta*zeta_conj*z3**2*z2*z1 - 27*m2**2*zeta*zeta_conj*z3**2*z2*z1 - 36*m3*m1*zeta*zeta_conj*z3**2*z2*z1 - 72*m2*m1*zeta*zeta_conj*z3**2*z2*z1 - 27*m1**2*zeta*zeta_conj*z3**2*z2*z1 + 12*m3*m2*zeta_conj*z3**3*z2*z1 + 3*m2**2*zeta_conj*z3**3*z2*z1 + 12*m3*m1*zeta_conj*z3**3*z2*z1 + 3*m1**2*zeta_conj*z3**3*z2*z1 + 18*m2*zeta*zeta_conj**2*z3**3*z2*z1 + 18*m1*zeta*zeta_conj**2*z3**3*z2*z1 + 9*m3**3*zeta*z2**2*z1 +
				9*m3**2*m2*zeta*z2**2*z1 + 18*m3**2*m1*zeta*z2**2*z1 + 12*m3*m2*m1*zeta*z2**2*z1 + 9*m3*m1**2*zeta*z2**2*z1 + 3*m2*m1**2*zeta*z2**2*z1 - 9*m3**3*z3*z2**2*z1 - 12*m3**2*m2*z3*z2**2*z1 - 12*m3*m2**2*z3*z2**2*z1 - 15*m3**2*m1*z3*z2**2*z1 - 24*m3*m2*m1*z3*z2**2*z1 - 12*m2**2*m1*z3*z2**2*z1 - 15*m3*m1**2*z3*z2**2*z1 - 12*m2*m1**2*z3*z2**2*z1 - 9*m1**3*z3*z2**2*z1 - 27*m3**2*zeta*zeta_conj*z3*z2**2*z1 - 36*m3*m2*zeta*zeta_conj*z3*z2**2*z1 - 72*m3*m1*zeta*zeta_conj*z3*z2**2*z1 - 36*m2*m1*zeta*zeta_conj*z3*z2**2*z1 - 27*m1**2*zeta*zeta_conj*z3*z2**2*z1 + 18*m3**2*zeta_conj*z3**2*z2**2*z1 + 18*m3*m2*zeta_conj*z3**2*z2**2*z1 + 18*m2**2*zeta_conj*z3**2*z2**2*z1 + 18*m3*m1*zeta_conj*z3**2*z2**2*z1 + 18*m2*m1*zeta_conj*z3**2*z2**2*z1 + 9*m1**2*zeta_conj*z3**2*z2**2*z1 + 27*m3*zeta*zeta_conj**2*z3**2*z2**2*z1 + 27*m2*zeta*zeta_conj**2*z3**2*z2**2*z1 + 54*m1*zeta*zeta_conj**2*z3**2*z2**2*z1 - 9*m3*zeta_conj**2*z3**3*z2**2*z1 + 9*m1*zeta_conj**2*z3**3*z2**2*z1 - 9*zeta*zeta_conj**3*z3**3*z2**2*z1 - 3*m3**2*m2*z2**3*z1 - m3**2*m1*z2**3*z1 - 4*m3*m2*m1*z2**3*z1 - 2*m3*m1**2*z2**3*z1 - m2*m1**2*z2**3*z1 - m1**3*z2**3*z1 - 9*m3**2*zeta*zeta_conj*z2**3*z1 - 12*m3*m1*zeta*zeta_conj*z2**3*z1 - 3*m1**2*zeta*zeta_conj*z2**3*z1 + 3*m3**2*zeta_conj*z3*z2**3*z1 + 12*m3*m2*zeta_conj*z3*z2**3*z1 + 12*m2*m1*zeta_conj*z3*z2**3*z1 + 3*m1**2*zeta_conj*z3*z2**3*z1 + 18*m3*zeta*zeta_conj**2*z3*z2**3*z1 + 18*m1*zeta*zeta_conj**2*z3*z2**3*z1 - 9*m2*zeta_conj**2*z3**2*z2**3*z1 + 9*m1*zeta_conj**2*z3**2*z2**3*z1 - 9*zeta*zeta_conj**3*z3**2*z2**3*z1 - 3*zeta_conj**3*z3**3*z2**3*z1 + 9*m3**2*m2*zeta*z3*z1**2 +
				18*m3*m2**2*zeta*z3*z1**2 + 9*m2**3*zeta*z3*z1**2 + 3*m3**2*m1*zeta*z3*z1**2 + 12*m3*m2*m1*zeta*z3*z1**2 + 9*m2**2*m1*zeta*z3*z1**2 - 6*m3**2*m2*z3**2*z1**2 - 6*m3*m2**2*z3**2*z1**2 - 2*m3**2*m1*z3**2*z1**2 - 8*m3*m2*m1*z3**2*z1**2 - 6*m2**2*m1*z3**2*z1**2 - 2*m3*m1**2*z3**2*z1**2 - 6*m2*m1**2*z3**2*z1**2 - 18*m3*m2*zeta*zeta_conj*z3**2*z1**2 - 27*m2**2*zeta*zeta_conj*z3**2*z1**2 - 6*m3*m1*zeta*zeta_conj*z3**2*z1**2 - 18*m2*m1*zeta*zeta_conj*z3**2*z1**2 + 6*m3*m2*zeta_conj*z3**3*z1**2 - 3*m2**2*zeta_conj*z3**3*z1**2 + 2*m3*m1*zeta_conj*z3**3*z1**2 + 2*m2*m1*zeta_conj*z3**3*z1**2 + 2*m1**2*zeta_conj*z3**3*z1**2 + 9*m2*zeta*zeta_conj**2*z3**3*z1**2 + 3*m1*zeta*zeta_conj**2*z3**3*z1**2 + 9*m3**3*zeta*z2*z1**2 + 18*m3**2*m2*zeta*z2*z1**2 + 9*m3*m2**2*zeta*z2*z1**2 + 9*m3**2*m1*zeta*z2*z1**2 + 12*m3*m2*m1*zeta*z2*z1**2 + 3*m2**2*m1*zeta*z2*z1**2 - 9*m3**3*z3*z2*z1**2 - 15*m3**2*m2*z3*z2*z1**2 - 15*m3*m2**2*z3*z2*z1**2 - 9*m2**3*z3*z2*z1**2 - 12*m3**2*m1*z3*z2*z1**2 - 24*m3*m2*m1*z3*z2*z1**2 - 12*m2**2*m1*z3*z2*z1**2 - 12*m3*m1**2*z3*z2*z1**2 - 12*m2*m1**2*z3*z2*z1**2 - 27*m3**2*zeta*zeta_conj*z3*z2*z1**2 - 72*m3*m2*zeta*zeta_conj*z3*z2*z1**2 - 27*m2**2*zeta*zeta_conj*z3*z2*z1**2 - 36*m3*m1*zeta*zeta_conj*z3*z2*z1**2 - 36*m2*m1*zeta*zeta_conj*z3*z2*z1**2 + 18*m3**2*zeta_conj*z3**2*z2*z1**2 + 18*m3*m2*zeta_conj*z3**2*z2*z1**2 + 9*m2**2*zeta_conj*z3**2*z2*z1**2 + 18*m3*m1*zeta_conj*z3**2*z2*z1**2 + 18*m2*m1*zeta_conj*z3**2*z2*z1**2 + 18*m1**2*zeta_conj*z3**2*z2*z1**2 + 27*m3*zeta*zeta_conj**2*z3**2*z2*z1**2 + 54*m2*zeta*zeta_conj**2*z3**2*z2*z1**2 + 
				27*m1*zeta*zeta_conj**2*z3**2*z2*z1**2 - 9*m3*zeta_conj**2*z3**3*z2*z1**2 + 9*m2*zeta_conj**2*z3**3*z2*z1**2 - 9*zeta*zeta_conj**3*z3**3*z2*z1**2 - 6*m3**2*m2*z2**2*z1**2 - 6*m3*m2**2*z2**2*z1**2 - 6*m3**2*m1*z2**2*z1**2 - 8*m3*m2*m1*z2**2*z1**2 - 2*m2**2*m1*z2**2*z1**2 - 6*m3*m1**2*z2**2*z1**2 - 2*m2*m1**2*z2**2*z1**2 - 27*m3**2*zeta*zeta_conj*z2**2*z1**2 - 18*m3*m2*zeta*zeta_conj*z2**2*z1**2 - 18*m3*m1*zeta*zeta_conj*z2**2*z1**2 - 6*m2*m1*zeta*zeta_conj*z2**2*z1**2 + 9*m3**2*zeta_conj*z3*z2**2*z1**2 + 18*m3*m2*zeta_conj*z3*z2**2*z1**2 + 18*m2**2*zeta_conj*z3*z2**2*z1**2 + 18*m3*m1*zeta_conj*z3*z2**2*z1**2 + 18*m2*m1*zeta_conj*z3*z2**2*z1**2 + 18*m1**2*zeta_conj*z3*z2**2*z1**2 + 54*m3*zeta*zeta_conj**2*z3*z2**2*z1**2 + 27*m2*zeta*zeta_conj**2*z3*z2**2*z1**2 + 27*m1*zeta*zeta_conj**2*z3*z2**2*z1**2 - 27*zeta*zeta_conj**3*z3**2*z2**2*z1**2 - 9*zeta_conj**3*z3**3*z2**2*z1**2 - 3*m3**2*zeta_conj*z2**3*z1**2 + 6*m3*m2*zeta_conj*z2**3*z1**2 + 2*m3*m1*zeta_conj*z2**3*z1**2 + 2*m2*m1*zeta_conj*z2**3*z1**2 + 2*m1**2*zeta_conj*z2**3*z1**2 + 9*m3*zeta*zeta_conj**2*z2**3*z1**2 + 3*m1*zeta*zeta_conj**2*z2**3*z1**2 + 9*m3*zeta_conj**2*z3*z2**3*z1**2 - 9*m2*zeta_conj**2*z3*z2**3*z1**2 - 9*zeta*zeta_conj**3*z3*z2**3*z1**2 - 9*zeta_conj**3*z3**2*z2**3*z1**2 + m3**3*zeta*z1**3 + 3*m3**2*m2*zeta*z1**3 + 3*m3*m2**2*zeta*z1**3 + m2**3*zeta*z1**3 - m3**3*z3*z1**3 - 2*m3**2*m2*z3*z1**3 - m3*m2**2*z3*z1**3 - m3**2*m1*z3*z1**3 - 4*m3*m2*m1*z3*z1**3 - 3*m2**2*m1*z3*z1**3 - 3*m3**2*zeta*zeta_conj*z3*z1**3 - 12*m3*m2*zeta*zeta_conj*z3*z1**3 - 9*m2**2*zeta*zeta_conj*z3*z1**3 + 2*m3**2*zeta_conj*z3**2*z1**3 + 2*m3*m2*zeta_conj*z3**2*z1**3 - 
				3*m2**2*zeta_conj*z3**2*z1**3 + 2*m3*m1*zeta_conj*z3**2*z1**3 + 6*m2*m1*zeta_conj*z3**2*z1**3 + 3*m3*zeta*zeta_conj**2*z3**2*z1**3 + 9*m2*zeta*zeta_conj**2*z3**2*z1**3 - m3*zeta_conj**2*z3**3*z1**3 + 2*m2*zeta_conj**2*z3**3*z1**3 - m1*zeta_conj**2*z3**3*z1**3 - zeta*zeta_conj**3*z3**3*z1**3 - m3**2*m2*z2*z1**3 - 2*m3*m2**2*z2*z1**3 - m2**3*z2*z1**3 - 3*m3**2*m1*z2*z1**3 - 4*m3*m2*m1*z2*z1**3 - m2**2*m1*z2*z1**3 - 9*m3**2*zeta*zeta_conj*z2*z1**3 - 12*m3*m2*zeta*zeta_conj*z2*z1**3 - 3*m2**2*zeta*zeta_conj*z2*z1**3 + 3*m3**2*zeta_conj*z3*z2*z1**3 + 3*m2**2*zeta_conj*z3*z2*z1**3 + 12*m3*m1*zeta_conj*z3*z2*z1**3 + 12*m2*m1*zeta_conj*z3*z2*z1**3 + 18*m3*zeta*zeta_conj**2*z3*z2*z1**3 + 18*m2*zeta*zeta_conj**2*z3*z2*z1**3 + 9*m2*zeta_conj**2*z3**2*z2*z1**3 - 9*m1*zeta_conj**2*z3**2*z2*z1**3 - 9*zeta*zeta_conj**3*z3**2*z2*z1**3 - 3*zeta_conj**3*z3**3*z2*z1**3 - 3*m3**2*zeta_conj*z2**2*z1**3 + 2*m3*m2*zeta_conj*z2**2*z1**3 + 2*m2**2*zeta_conj*z2**2*z1**3 + 6*m3*m1*zeta_conj*z2**2*z1**3 + 2*m2*m1*zeta_conj*z2**2*z1**3 + 9*m3*zeta*zeta_conj**2*z2**2*z1**3 + 3*m2*zeta*zeta_conj**2*z2**2*z1**3 + 9*m3*zeta_conj**2*z3*z2**2*z1**3 - 9*m1*zeta_conj**2*z3*z2**2*z1**3 - 9*zeta*zeta_conj**3*z3*z2**2*z1**3 - 9*zeta_conj**3*z3**2*z2**2*z1**3 + 2*m3*zeta_conj**2*z2**3*z1**3 - m2*zeta_conj**2*z2**3*z1**3 - m1*zeta_conj**2*z2**3*z1**3 - zeta*zeta_conj**3*z2**3*z1**3 - 3*zeta_conj**3*z3*z2**3*z1**3 + m2**2*zeta*z3**3*z2*z1_conj + 4*m2*m1*zeta*z3**3*z2*z1_conj + 3*m1**2*zeta*z3**3*z2*z1_conj + 2*m3*m2*zeta*z3**2*z2**2*z1_conj + 6*m3*m1*zeta*z3**2*z2**2*z1_conj + 6*m2*m1*zeta*z3**2*z2**2*z1_conj + 9*m1**2*zeta*z3**2*z2**2*z1_conj - 
				m3*m2*z3**3*z2**2*z1_conj - m2**2*z3**3*z2**2*z1_conj - 3*m3*m1*z3**3*z2**2*z1_conj - m2*m1*z3**3*z2**2*z1_conj + 3*m1**2*z3**3*z2**2*z1_conj - 2*m2*zeta*zeta_conj*z3**3*z2**2*z1_conj - 6*m1*zeta*zeta_conj*z3**3*z2**2*z1_conj + m3**2*zeta*z3*z2**3*z1_conj + 4*m3*m1*zeta*z3*z2**3*z1_conj + 3*m1**2*zeta*z3*z2**3*z1_conj - m3**2*z3**2*z2**3*z1_conj - m3*m2*z3**2*z2**3*z1_conj - m3*m1*z3**2*z2**3*z1_conj - 3*m2*m1*z3**2*z2**3*z1_conj + 3*m1**2*z3**2*z2**3*z1_conj - 2*m3*zeta*zeta_conj*z3**2*z2**3*z1_conj - 6*m1*zeta*zeta_conj*z3**2*z2**3*z1_conj + m3*zeta_conj*z3**3*z2**3*z1_conj + m2*zeta_conj*z3**3*z2**3*z1_conj - 2*m1*zeta_conj*z3**3*z2**3*z1_conj + zeta*zeta_conj**2*z3**3*z2**3*z1_conj + 3*m2**2*zeta*z3**3*z1*z1_conj + 4*m2*m1*zeta*z3**3*z1*z1_conj + m1**2*zeta*z3**3*z1*z1_conj + 12*m3*m2*zeta*z3**2*z2*z1*z1_conj + 9*m2**2*zeta*z3**2*z2*z1*z1_conj + 12*m3*m1*zeta*z3**2*z2*z1*z1_conj + 24*m2*m1*zeta*z3**2*z2*z1*z1_conj + 9*m1**2*zeta*z3**2*z2*z1*z1_conj - 6*m3*m2*z3**3*z2*z1*z1_conj - 3*m2**2*z3**3*z2*z1*z1_conj - 6*m3*m1*z3**3*z2*z1*z1_conj + 2*m2*m1*z3**3*z2*z1*z1_conj + 3*m1**2*z3**3*z2*z1*z1_conj - 12*m2*zeta*zeta_conj*z3**3*z2*z1*z1_conj - 12*m1*zeta*zeta_conj*z3**3*z2*z1*z1_conj + 9*m3**2*zeta*z3*z2**2*z1*z1_conj + 12*m3*m2*zeta*z3*z2**2*z1*z1_conj + 24*m3*m1*zeta*z3*z2**2*z1*z1_conj + 12*m2*m1*zeta*z3*z2**2*z1*z1_conj + 9*m1**2*zeta*z3*z2**2*z1*z1_conj - 
				9*m3**2*z3**2*z2**2*z1*z1_conj - 12*m3*m2*z3**2*z2**2*z1*z1_conj - 9*m2**2*z3**2*z2**2*z1*z1_conj - 6*m3*m1*z3**2*z2**2*z1*z1_conj - 6*m2*m1*z3**2*z2**2*z1*z1_conj + 9*m1**2*z3**2*z2**2*z1*z1_conj - 18*m3*zeta*zeta_conj*z3**2*z2**2*z1*z1_conj - 18*m2*zeta*zeta_conj*z3**2*z2**2*z1*z1_conj - 36*m1*zeta*zeta_conj*z3**2*z2**2*z1*z1_conj + 9*m3*zeta_conj*z3**3*z2**2*z1*z1_conj + 3*m2*zeta_conj*z3**3*z2**2*z1*z1_conj - 12*m1*zeta_conj*z3**3*z2**2*z1*z1_conj + 9*zeta*zeta_conj**2*z3**3*z2**2*z1*z1_conj + 3*m3**2*zeta*z2**3*z1*z1_conj + 4*m3*m1*zeta*z2**3*z1*z1_conj + m1**2*zeta*z2**3*z1*z1_conj - 3*m3**2*z3*z2**3*z1*z1_conj - 6*m3*m2*z3*z2**3*z1*z1_conj + 2*m3*m1*z3*z2**3*z1*z1_conj - 6*m2*m1*z3*z2**3*z1*z1_conj + 3*m1**2*z3*z2**3*z1*z1_conj - 12*m3*zeta*zeta_conj*z3*z2**3*z1*z1_conj - 12*m1*zeta*zeta_conj*z3*z2**3*z1*z1_conj + 3*m3*zeta_conj*z3**2*z2**3*z1*z1_conj + 9*m2*zeta_conj*z3**2*z2**3*z1*z1_conj - 12*m1*zeta_conj*z3**2*z2**3*z1*z1_conj + 9*zeta*zeta_conj**2*z3**2*z2**3*z1*z1_conj + 3*zeta_conj**2*z3**3*z2**3*z1*z1_conj + 6*m3*m2*zeta*z3**2*z1**2*z1_conj + 9*m2**2*zeta*z3**2*z1**2*z1_conj + 2*m3*m1*zeta*z3**2*z1**2*z1_conj + 6*m2*m1*zeta*z3**2*z1**2*z1_conj - 3*m3*m2*z3**3*z1**2*z1_conj - m3*m1*z3**3*z1**2*z1_conj + m2*m1*z3**3*z1**2*z1_conj - 6*m2*zeta*zeta_conj*z3**3*z1**2*z1_conj - 2*m1*zeta*zeta_conj*z3**3*z1**2*z1_conj + 9*m3**2*zeta*z3*z2*z1**2*z1_conj + 24*m3*m2*zeta*z3*z2*z1**2*z1_conj + 
				9*m2**2*zeta*z3*z2*z1**2*z1_conj + 12*m3*m1*zeta*z3*z2*z1**2*z1_conj + 12*m2*m1*zeta*z3*z2*z1**2*z1_conj - 9*m3**2*z3**2*z2*z1**2*z1_conj - 15*m3*m2*z3**2*z2*z1**2*z1_conj - 9*m2**2*z3**2*z2*z1**2*z1_conj - 3*m3*m1*z3**2*z2*z1**2*z1_conj + 3*m2*m1*z3**2*z2*z1**2*z1_conj - 18*m3*zeta*zeta_conj*z3**2*z2*z1**2*z1_conj - 36*m2*zeta*zeta_conj*z3**2*z2*z1**2*z1_conj - 18*m1*zeta*zeta_conj*z3**2*z2*z1**2*z1_conj + 9*m3*zeta_conj*z3**3*z2*z1**2*z1_conj - 3*m2*zeta_conj*z3**3*z2*z1**2*z1_conj - 6*m1*zeta_conj*z3**3*z2*z1**2*z1_conj + 9*zeta*zeta_conj**2*z3**3*z2*z1**2*z1_conj + 9*m3**2*zeta*z2**2*z1**2*z1_conj + 6*m3*m2*zeta*z2**2*z1**2*z1_conj + 6*m3*m1*zeta*z2**2*z1**2*z1_conj + 2*m2*m1*zeta*z2**2*z1**2*z1_conj - 9*m3**2*z3*z2**2*z1**2*z1_conj - 15*m3*m2*z3*z2**2*z1**2*z1_conj - 9*m2**2*z3*z2**2*z1**2*z1_conj + 3*m3*m1*z3*z2**2*z1**2*z1_conj - 3*m2*m1*z3*z2**2*z1**2*z1_conj - 36*m3*zeta*zeta_conj*z3*z2**2*z1**2*z1_conj - 18*m2*zeta*zeta_conj*z3*z2**2*z1**2*z1_conj - 18*m1*zeta*zeta_conj*z3*z2**2*z1**2*z1_conj + 9*m3*zeta_conj*z3**2*z2**2*z1**2*z1_conj + 9*m2*zeta_conj*z3**2*z2**2*z1**2*z1_conj - 18*m1*zeta_conj*z3**2*z2**2*z1**2*z1_conj + 27*zeta*zeta_conj**2*z3**2*z2**2*z1**2*z1_conj + 9*zeta_conj**2*z3**3*z2**2*z1**2*z1_conj - 3*m3*m2*z2**3*z1**2*z1_conj + m3*m1*z2**3*z1**2*z1_conj - m2*m1*z2**3*z1**2*z1_conj - 6*m3*zeta*zeta_conj*z2**3*z1**2*z1_conj - 2*m1*zeta*zeta_conj*z2**3*z1**2*z1_conj - 3*m3*zeta_conj*z3*z2**3*z1**2*z1_conj +
				9*m2*zeta_conj*z3*z2**3*z1**2*z1_conj - 6*m1*zeta_conj*z3*z2**3*z1**2*z1_conj + 9*zeta*zeta_conj**2*z3*z2**3*z1**2*z1_conj + 9*zeta_conj**2*z3**2*z2**3*z1**2*z1_conj + m3**2*zeta*z3*z1**3*z1_conj + 4*m3*m2*zeta*z3*z1**3*z1_conj + 3*m2**2*zeta*z3*z1**3*z1_conj - m3**2*z3**2*z1**3*z1_conj - 2*m3*m2*z3**2*z1**3*z1_conj - 2*m3*zeta*zeta_conj*z3**2*z1**3*z1_conj - 6*m2*zeta*zeta_conj*z3**2*z1**3*z1_conj + m3*zeta_conj*z3**3*z1**3*z1_conj - m2*zeta_conj*z3**3*z1**3*z1_conj + zeta*zeta_conj**2*z3**3*z1**3*z1_conj + 3*m3**2*zeta*z2*z1**3*z1_conj + 4*m3*m2*zeta*z2*z1**3*z1_conj + m2**2*zeta*z2*z1**3*z1_conj - 3*m3**2*z3*z2*z1**3*z1_conj - 4*m3*m2*z3*z2*z1**3*z1_conj - 3*m2**2*z3*z2*z1**3*z1_conj - 12*m3*zeta*zeta_conj*z3*z2*z1**3*z1_conj - 12*m2*zeta*zeta_conj*z3*z2*z1**3*z1_conj + 3*m3*zeta_conj*z3**2*z2*z1**3*z1_conj - 3*m2*zeta_conj*z3**2*z2*z1**3*z1_conj + 9*zeta*zeta_conj**2*z3**2*z2*z1**3*z1_conj + 3*zeta_conj**2*z3**3*z2*z1**3*z1_conj - 2*m3*m2*z2**2*z1**3*z1_conj - m2**2*z2**2*z1**3*z1_conj - 6*m3*zeta*zeta_conj*z2**2*z1**3*z1_conj - 2*m2*zeta*zeta_conj*z2**2*z1**3*z1_conj - 3*m3*zeta_conj*z3*z2**2*z1**3*z1_conj + 3*m2*zeta_conj*z3*z2**2*z1**3*z1_conj + 9*zeta*zeta_conj**2*z3*z2**2*z1**3*z1_conj + 9*zeta_conj**2*z3**2*z2**2*z1**3*z1_conj - m3*zeta_conj*z2**3*z1**3*z1_conj + m2*zeta_conj*z2**3*z1**3*z1_conj + zeta*zeta_conj**2*z2**3*z1**3*z1_conj + 3*zeta_conj**2*z3*z2**3*z1**3*z1_conj + z2_conj*(m2**2*zeta*z3**3*z2 + 4*m2*m1*zeta*z3**3*z2 + 3*m1**2*zeta*z3**3*z2 + 
				2*m3*m2*zeta*z3**2*z2**2 + 6*m3*m1*zeta*z3**2*z2**2 + 6*m2*m1*zeta*z3**2*z2**2 + 9*m1**2*zeta*z3**2*z2**2 - m3*m2*z3**3*z2**2 - 3*m3*m1*z3**3*z2**2 + m2*m1*z3**3*z2**2 + m3**2*zeta*z3*z2**3 + 4*m3*m1*zeta*z3*z2**3 + 3*m1**2*zeta*z3*z2**3 - m3**2*z3**2*z2**3 - 2*m3*m1*z3**2*z2**3 + 3*m2**2*zeta*z3**3*z1 + 4*m2*m1*zeta*z3**3*z1 + m1**2*zeta*z3**3*z1 + 12*m3*m2*zeta*z3**2*z2*z1 + 9*m2**2*zeta*z3**2*z2*z1 + 12*m3*m1*zeta*z3**2*z2*z1 + 24*m2*m1*zeta*z3**2*z2*z1 + 9*m1**2*zeta*z3**2*z2*z1 - 6*m3*m2*z3**3*z2*z1 + 3*m2**2*z3**3*z2*z1 - 6*m3*m1*z3**3*z2*z1 + 2*m2*m1*z3**3*z2*z1 - 3*m1**2*z3**3*z2*z1 + 9*m3**2*zeta*z3*z2**2*z1 + 12*m3*m2*zeta*z3*z2**2*z1 + 24*m3*m1*zeta*z3*z2**2*z1 + 12*m2*m1*zeta*z3*z2**2*z1 + 9*m1**2*zeta*z3*z2**2*z1 - 9*m3**2*z3**2*z2**2*z1 - 3*m3*m2*z3**2*z2**2*z1 - 15*m3*m1*z3**2*z2**2*z1 + 3*m2*m1*z3**2*z2**2*z1 - 9*m1**2*z3**2*z2**2*z1 + 3*m3**2*zeta*z2**3*z1 + 4*m3*m1*zeta*z2**3*z1 + m1**2*zeta*z2**3*z1 - 3*m3**2*z3*z2**3*z1 - 4*m3*m1*z3*z2**3*z1 - 3*m1**2*z3*z2**3*z1 + 6*m3*m2*zeta*z3**2*z1**2 + 9*m2**2*zeta*z3**2*z1**2 + 2*m3*m1*zeta*z3**2*z1**2 + 6*m2*m1*zeta*z3**2*z1**2 - 3*m3*m2*z3**3*z1**2 + 3*m2**2*z3**3*z1**2 - m3*m1*z3**3*z1**2 - m2*m1*z3**3*z1**2 - m1**2*z3**3*z1**2 + 9*m3**2*zeta*z3*z2*z1**2 + 24*m3*m2*zeta*z3*z2*z1**2 + 9*m2**2*zeta*z3*z2*z1**2 + 12*m3*m1*zeta*z3*z2*z1**2 + 12*m2*m1*zeta*z3*z2*z1**2 - 9*m3**2*z3**2*z2*z1**2 - 6*m3*m2*z3**2*z2*z1**2 + 9*m2**2*z3**2*z2*z1**2 - 12*m3*m1*z3**2*z2*z1**2 - 6*m2*m1*z3**2*z2*z1**2 - 9*m1**2*z3**2*z2*z1**2 + 9*m3**2*zeta*z2**2*z1**2 + 
				6*m3*m2*zeta*z2**2*z1**2 + 6*m3*m1*zeta*z2**2*z1**2 + 2*m2*m1*zeta*z2**2*z1**2 - 9*m3**2*z3*z2**2*z1**2 + 3*m3*m2*z3*z2**2*z1**2 - 15*m3*m1*z3*z2**2*z1**2 - 3*m2*m1*z3*z2**2*z1**2 - 9*m1**2*z3*z2**2*z1**2 - 2*m3*m1*z2**3*z1**2 - m1**2*z2**3*z1**2 + m3**2*zeta*z3*z1**3 + 4*m3*m2*zeta*z3*z1**3 + 3*m2**2*zeta*z3*z1**3 - m3**2*z3**2*z1**3 - m3*m2*z3**2*z1**3 + 3*m2**2*z3**2*z1**3 - m3*m1*z3**2*z1**3 - 3*m2*m1*z3**2*z1**3 + 3*m3**2*zeta*z2*z1**3 + 4*m3*m2*zeta*z2*z1**3 + m2**2*zeta*z2*z1**3 - 3*m3**2*z3*z2*z1**3 + 2*m3*m2*z3*z2*z1**3 + 3*m2**2*z3*z2*z1**3 - 6*m3*m1*z3*z2*z1**3 - 6*m2*m1*z3*z2*z1**3 + m3*m2*z2**2*z1**3 - 3*m3*m1*z2**2*z1**3 - m2*m1*z2**2*z1**3 + zeta_conj**2*(zeta*z2**3*z1**3 + 3*z3*z2**2*z1**2*(z2*z1 + 3*zeta*(z2 + z1)) + z3**3*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)) + 9*z3**2*z2*z1*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2))) + zeta_conj*(-(m1*(-(z2**3*z1**2*(-2*zeta + z1)) - 3*z3*z2**2*z1*(z2*(-4*zeta + z1) + 3*z1*(-2*zeta + z1)) + 3*z3**2*z2*(-3*z2*z1*(-4*zeta + z1) - 3*z1**2*(-2*zeta + z1) + z2**2*(2*zeta + z1)) + z3**3*(z2**3 - 3*z2*z1*(-4*zeta + z1) - z1**2*(-2*zeta + z1) + 3*z2**2*(2*zeta + z1)))) - 2*m2*(zeta*z2**2*z1**3 + 3*z3*z2*z1**2*(3*zeta*z2 + 2*zeta*z1 + z2*z1) + 3*z3**2*z1*(zeta*z1**2 + 3*z2**2*(zeta + z1) + 2*z2*z1*(3*zeta + z1)) + z3**3*(6*z2*z1*(zeta + z1) + z1**2*(3*zeta + z1) + z2**2*(zeta + 3*z1))) + m3*(z3**3*(z2**3 + 9*z2**2*z1 + 9*z2*z1**2 + z1**3) - z2**2*z1**2*(z2*z1 + 6*zeta*(z2 + z1)) - 3*z3*z2*z1*(z2*z1*(z2 + z1) + 4*zeta*(z2**2 + 3*z2*z1 + z1**2)) + 
				z3**2*(3*z2*z1*(z2**2 + 3*z2*z1 + z1**2) - 2*zeta*(z2**3 + 9*z2**2*z1 + 9*z2*z1**2 + z1**3)))) + (m2*zeta*z3**3*z2**2 + 3*m1*zeta*z3**3*z2**2 + 3*m1*zeta*z3**2*z2**3 + m1*z3**3*z2**3 + 6*m2*zeta*z3**3*z2*z1 + 6*m1*zeta*z3**3*z2*z1 + 9*m2*zeta*z3**2*z2**2*z1 + 18*m1*zeta*z3**2*z2**2*z1 + 3*m2*z3**3*z2**2*z1 + 6*m1*z3**3*z2**2*z1 + 6*m1*zeta*z3*z2**3*z1 + 6*m1*z3**2*z2**3*z1 + 3*m2*zeta*z3**3*z1**2 + m1*zeta*z3**3*z1**2 + 18*m2*zeta*z3**2*z2*z1**2 + 9*m1*zeta*z3**2*z2*z1**2 + 6*m2*z3**3*z2*z1**2 + 3*m1*z3**3*z2*z1**2 + 9*m2*zeta*z3*z2**2*z1**2 + 9*m1*zeta*z3*z2**2*z1**2 + 9*m2*z3**2*z2**2*z1**2 + 9*m1*z3**2*z2**2*z1**2 + m1*zeta*z2**3*z1**2 + 3*m1*z3*z2**3*z1**2 + 3*m2*zeta*z3**2*z1**3 + m2*z3**3*z1**3 + 6*m2*zeta*z3*z2*z1**3 + 6*m2*z3**2*z2*z1**3 + m2*zeta*z2**2*z1**3 + 3*m2*z3*z2**2*z1**3 - m3*(-zeta + z3)*(3*z2**2*z1**2*(z2 + z1) + 6*z3*z2*z1*(z2**2 + 3*z2*z1 + z1**2) + z3**2*(z2**3 + 9*z2**2*z1 + 9*z2*z1**2 + z1**3)) - zeta_conj*(zeta*z2**3*z1**3 + 3*z3*z2**2*z1**2*(z2*z1 + 3*zeta*(z2 + z1)) + z3**3*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)) + 9*z3**2*z2*z1*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2))))*z1_conj) + z3_conj*(m2**2*zeta*z3**3*z2 + 4*m2*m1*zeta*z3**3*z2 + 3*m1**2*zeta*z3**3*z2 + 2*m3*m2*zeta*z3**2*z2**2 + 6*m3*m1*zeta*z3**2*z2**2 + 6*m2*m1*zeta*z3**2*z2**2 + 9*m1**2*zeta*z3**2*z2**2 - m2**2*z3**3*z2**2 - 2*m2*m1*z3**3*z2**2 - 2*m2*zeta*zeta_conj*z3**3*z2**2 - 6*m1*zeta*zeta_conj*z3**3*z2**2 + m3**2*zeta*z3*z2**3 + 4*m3*m1*zeta*z3*z2**3 + 3*m1**2*zeta*z3*z2**3 - m3*m2*z3**2*z2**3 + 
				m3*m1*z3**2*z2**3 - 3*m2*m1*z3**2*z2**3 - 2*m3*zeta*zeta_conj*z3**2*z2**3 - 6*m1*zeta*zeta_conj*z3**2*z2**3 + m2*zeta_conj*z3**3*z2**3 - m1*zeta_conj*z3**3*z2**3 + zeta*zeta_conj**2*z3**3*z2**3 + 3*m2**2*zeta*z3**3*z1 + 4*m2*m1*zeta*z3**3*z1 + m1**2*zeta*z3**3*z1 + 12*m3*m2*zeta*z3**2*z2*z1 + 9*m2**2*zeta*z3**2*z2*z1 + 12*m3*m1*zeta*z3**2*z2*z1 + 24*m2*m1*zeta*z3**2*z2*z1 + 9*m1**2*zeta*z3**2*z2*z1 - 3*m2**2*z3**3*z2*z1 - 4*m2*m1*z3**3*z2*z1 - 3*m1**2*z3**3*z2*z1 - 12*m2*zeta*zeta_conj*z3**3*z2*z1 - 12*m1*zeta*zeta_conj*z3**3*z2*z1 + 9*m3**2*zeta*z3*z2**2*z1 + 12*m3*m2*zeta*z3*z2**2*z1 + 24*m3*m1*zeta*z3*z2**2*z1 + 12*m2*m1*zeta*z3*z2**2*z1 + 9*m1**2*zeta*z3*z2**2*z1 - 3*m3*m2*z3**2*z2**2*z1 - 9*m2**2*z3**2*z2**2*z1 + 3*m3*m1*z3**2*z2**2*z1 - 15*m2*m1*z3**2*z2**2*z1 - 9*m1**2*z3**2*z2**2*z1 - 18*m3*zeta*zeta_conj*z3**2*z2**2*z1 - 18*m2*zeta*zeta_conj*z3**2*z2**2*z1 - 36*m1*zeta*zeta_conj*z3**2*z2**2*z1 + 3*m2*zeta_conj*z3**3*z2**2*z1 - 3*m1*zeta_conj*z3**3*z2**2*z1 + 9*zeta*zeta_conj**2*z3**3*z2**2*z1 + 3*m3**2*zeta*z2**3*z1 + 4*m3*m1*zeta*z2**3*z1 + m1**2*zeta*z2**3*z1 + 3*m3**2*z3*z2**3*z1 - 6*m3*m2*z3*z2**3*z1 + 2*m3*m1*z3*z2**3*z1 - 6*m2*m1*z3*z2**3*z1 - 3*m1**2*z3*z2**3*z1 - 12*m3*zeta*zeta_conj*z3*z2**3*z1 - 12*m1*zeta*zeta_conj*z3*z2**3*z1 - 6*m3*zeta_conj*z3**2*z2**3*z1 + 9*m2*zeta_conj*z3**2*z2**3*z1 - 3*m1*zeta_conj*z3**2*z2**3*z1 + 9*zeta*zeta_conj**2*z3**2*z2**3*z1 + 3*zeta_conj**2*z3**3*z2**3*z1 + 6*m3*m2*zeta*z3**2*z1**2 + 9*m2**2*zeta*z3**2*z1**2 + 2*m3*m1*zeta*z3**2*z1**2 + 6*m2*m1*zeta*z3**2*z1**2 - 2*m2*m1*z3**3*z1**2 - m1**2*z3**3*z1**2 - 6*m2*zeta*zeta_conj*z3**3*z1**2 -
				2*m1*zeta*zeta_conj*z3**3*z1**2 + 9*m3**2*zeta*z3*z2*z1**2 + 24*m3*m2*zeta*z3*z2*z1**2 + 9*m2**2*zeta*z3*z2*z1**2 + 12*m3*m1*zeta*z3*z2*z1**2 + 12*m2*m1*zeta*z3*z2*z1**2 + 3*m3*m2*z3**2*z2*z1**2 - 9*m2**2*z3**2*z2*z1**2 - 3*m3*m1*z3**2*z2*z1**2 - 15*m2*m1*z3**2*z2*z1**2 - 9*m1**2*z3**2*z2*z1**2 - 18*m3*zeta*zeta_conj*z3**2*z2*z1**2 - 36*m2*zeta*zeta_conj*z3**2*z2*z1**2 - 18*m1*zeta*zeta_conj*z3**2*z2*z1**2 - 3*m2*zeta_conj*z3**3*z2*z1**2 + 3*m1*zeta_conj*z3**3*z2*z1**2 + 9*zeta*zeta_conj**2*z3**3*z2*z1**2 + 9*m3**2*zeta*z2**2*z1**2 + 6*m3*m2*zeta*z2**2*z1**2 + 6*m3*m1*zeta*z2**2*z1**2 + 2*m2*m1*zeta*z2**2*z1**2 + 9*m3**2*z3*z2**2*z1**2 - 6*m3*m2*z3*z2**2*z1**2 - 9*m2**2*z3*z2**2*z1**2 - 6*m3*m1*z3*z2**2*z1**2 - 12*m2*m1*z3*z2**2*z1**2 - 9*m1**2*z3*z2**2*z1**2 - 36*m3*zeta*zeta_conj*z3*z2**2*z1**2 - 18*m2*zeta*zeta_conj*z3*z2**2*z1**2 - 18*m1*zeta*zeta_conj*z3*z2**2*z1**2 - 18*m3*zeta_conj*z3**2*z2**2*z1**2 + 9*m2*zeta_conj*z3**2*z2**2*z1**2 + 9*m1*zeta_conj*z3**2*z2**2*z1**2 + 27*zeta*zeta_conj**2*z3**2*z2**2*z1**2 + 9*zeta_conj**2*z3**3*z2**2*z1**2 + 3*m3**2*z2**3*z1**2 - 3*m3*m2*z2**3*z1**2 - m3*m1*z2**3*z1**2 - m2*m1*z2**3*z1**2 - m1**2*z2**3*z1**2 - 6*m3*zeta*zeta_conj*z2**3*z1**2 - 2*m1*zeta*zeta_conj*z2**3*z1**2 - 12*m3*zeta_conj*z3*z2**3*z1**2 + 9*m2*zeta_conj*z3*z2**3*z1**2 + 3*m1*zeta_conj*z3*z2**3*z1**2 + 9*zeta*zeta_conj**2*z3*z2**3*z1**2 + 9*zeta_conj**2*z3**2*z2**3*z1**2 + m3**2*zeta*z3*z1**3 + 4*m3*m2*zeta*z3*z1**3 + 3*m2**2*zeta*z3*z1**3 + m3*m2*z3**2*z1**3 - m3*m1*z3**2*z1**3 - 3*m2*m1*z3**2*z1**3 - 2*m3*zeta*zeta_conj*z3**2*z1**3 - 6*m2*zeta*zeta_conj*z3**2*z1**3 - m2*zeta_conj*z3**3*z1**3 + 
				m1*zeta_conj*z3**3*z1**3 + zeta*zeta_conj**2*z3**3*z1**3 + 3*m3**2*zeta*z2*z1**3 + 4*m3*m2*zeta*z2*z1**3 + m2**2*zeta*z2*z1**3 + 3*m3**2*z3*z2*z1**3 + 2*m3*m2*z3*z2*z1**3 - 3*m2**2*z3*z2*z1**3 - 6*m3*m1*z3*z2*z1**3 - 6*m2*m1*z3*z2*z1**3 - 12*m3*zeta*zeta_conj*z3*z2*z1**3 - 12*m2*zeta*zeta_conj*z3*z2*z1**3 - 6*m3*zeta_conj*z3**2*z2*z1**3 - 3*m2*zeta_conj*z3**2*z2*z1**3 + 9*m1*zeta_conj*z3**2*z2*z1**3 + 9*zeta*zeta_conj**2*z3**2*z2*z1**3 + 3*zeta_conj**2*z3**3*z2*z1**3 + 3*m3**2*z2**2*z1**3 - m3*m2*z2**2*z1**3 - m2**2*z2**2*z1**3 - 3*m3*m1*z2**2*z1**3 - m2*m1*z2**2*z1**3 - 6*m3*zeta*zeta_conj*z2**2*z1**3 - 2*m2*zeta*zeta_conj*z2**2*z1**3 - 12*m3*zeta_conj*z3*z2**2*z1**3 + 3*m2*zeta_conj*z3*z2**2*z1**3 + 9*m1*zeta_conj*z3*z2**2*z1**3 + 9*zeta*zeta_conj**2*z3*z2**2*z1**3 + 9*zeta_conj**2*z3**2*z2**2*z1**3 - 2*m3*zeta_conj*z2**3*z1**3 + m2*zeta_conj*z2**3*z1**3 + m1*zeta_conj*z2**3*z1**3 + zeta*zeta_conj**2*z2**3*z1**3 + 3*zeta_conj**2*z3*z2**3*z1**3 + (3*m1*zeta*z3**3*z2**2 + m3*zeta*z3**2*z2**3 + 3*m1*zeta*z3**2*z2**3 + m1*z3**3*z2**3 + 6*m1*zeta*z3**3*z2*z1 + 9*m3*zeta*z3**2*z2**2*z1 + 18*m1*zeta*z3**2*z2**2*z1 + 6*m1*z3**3*z2**2*z1 + 6*m3*zeta*z3*z2**3*z1 + 6*m1*zeta*z3*z2**3*z1 + 3*m3*z3**2*z2**3*z1 + 6*m1*z3**2*z2**3*z1 + m1*zeta*z3**3*z1**2 + 9*m3*zeta*z3**2*z2*z1**2 + 9*m1*zeta*z3**2*z2*z1**2 + 3*m1*z3**3*z2*z1**2 + 18*m3*zeta*z3*z2**2*z1**2 + 9*m1*zeta*z3*z2**2*z1**2 + 9*m3*z3**2*z2**2*z1**2 + 9*m1*z3**2*z2**2*z1**2 + 3*m3*zeta*z2**3*z1**2 + m1*zeta*z2**3*z1**2 + 6*m3*z3*z2**3*z1**2 + 3*m1*z3*z2**3*z1**2 + m3*zeta*z3**2*z1**3 + 6*m3*zeta*z3*z2*z1**3 + 3*m3*z3**2*z2*z1**3 + 
				3*m3*zeta*z2**2*z1**3 + 6*m3*z3*z2**2*z1**3 + m3*z2**3*z1**3 - m2*(-zeta + z2)*(z2**2*z1**3 + 3*z3*z2*z1**2*(3*z2 + 2*z1) + 3*z3**2*z1*(3*z2**2 + 6*z2*z1 + z1**2) + z3**3*(z2**2 + 6*z2*z1 + 3*z1**2)) - zeta_conj*(zeta*z2**3*z1**3 + 3*z3*z2**2*z1**2*(z2*z1 + 3*zeta*(z2 + z1)) + z3**3*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)) + 9*z3**2*z2*z1*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2))))*z1_conj + z2_conj*(m2*zeta*z3**3*z2**2 + 3*m1*zeta*z3**3*z2**2 + m3*zeta*z3**2*z2**3 + 3*m1*zeta*z3**2*z2**3 + 6*m2*zeta*z3**3*z2*z1 + 6*m1*zeta*z3**3*z2*z1 + 9*m3*zeta*z3**2*z2**2*z1 + 9*m2*zeta*z3**2*z2**2*z1 + 18*m1*zeta*z3**2*z2**2*z1 + 3*m2*z3**3*z2**2*z1 - 3*m1*z3**3*z2**2*z1 + 6*m3*zeta*z3*z2**3*z1 + 6*m1*zeta*z3*z2**3*z1 + 3*m3*z3**2*z2**3*z1 - 3*m1*z3**2*z2**3*z1 + 3*m2*zeta*z3**3*z1**2 + m1*zeta*z3**3*z1**2 + 9*m3*zeta*z3**2*z2*z1**2 + 18*m2*zeta*z3**2*z2*z1**2 + 9*m1*zeta*z3**2*z2*z1**2 + 6*m2*z3**3*z2*z1**2 - 6*m1*z3**3*z2*z1**2 + 18*m3*zeta*z3*z2**2*z1**2 + 9*m2*zeta*z3*z2**2*z1**2 + 9*m1*zeta*z3*z2**2*z1**2 + 9*m3*z3**2*z2**2*z1**2 + 9*m2*z3**2*z2**2*z1**2 - 18*m1*z3**2*z2**2*z1**2 + 3*m3*zeta*z2**3*z1**2 + m1*zeta*z2**3*z1**2 + 6*m3*z3*z2**3*z1**2 - 6*m1*z3*z2**3*z1**2 + m3*zeta*z3**2*z1**3 + 3*m2*zeta*z3**2*z1**3 + m2*z3**3*z1**3 - m1*z3**3*z1**3 + 6*m3*zeta*z3*z2*z1**3 + 6*m2*zeta*z3*z2*z1**3 + 3*m3*z3**2*z2*z1**3 + 6*m2*z3**2*z2*z1**3 - 9*m1*z3**2*z2*z1**3 + 3*m3*zeta*z2**2*z1**3 + m2*zeta*z2**2*z1**3 + 6*m3*z3*z2**2*z1**3 + 3*m2*z3*z2**2*z1**3 - 9*m1*z3*z2**2*z1**3 + 
				m3*z2**3*z1**3 - m1*z2**3*z1**3 - zeta_conj*(zeta*z2**3*z1**3 + 3*z3*z2**2*z1**2*(z2*z1 + 3*zeta*(z2 + z1)) + z3**3*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)) + 9*z3**2*z2*z1*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2))) + (zeta*z2**3*z1**3 + 3*z3*z2**2*z1**2*(z2*z1 + 3*zeta*(z2 + z1)) + z3**3*(zeta*z1**3 + 9*z2**2*z1*(zeta + z1) + 3*z2*z1**2*(3*zeta + z1) + z2**3*(zeta + 3*z1)) + 9*z3**2*z2*z1*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2)))*z1_conj)))

		coeff2 = (-3*m2**2*m1*zeta*z3**3*z2 - 6*m2*m1**2*zeta*z3**3*z2 - 3*m1**3*zeta*z3**3*z2 - 6*m3*m2*m1*zeta*z3**2*z2**2 - 9*m3*m1**2*zeta*z3**2*z2**2 - 9*m2*m1**2*zeta*z3**2*z2**2 - 9*m1**3*zeta*z3**2*z2**2 + 2*m3*m2*m1*z3**3*z2**2 + 2*m2**2*m1*z3**3*z2**2 + 3*m3*m1**2*z3**3*z2**2 + 2*m2*m1**2*z3**3*z2**2 + 6*m2*m1*zeta*zeta_conj*z3**3*z2**2 + 9*m1**2*zeta*zeta_conj*z3**3*z2**2 - 3*m3**2*m1*zeta*z3*z2**3 - 6*m3*m1**2*zeta*z3*z2**3 - 3*m1**3*zeta*z3*z2**3 + 2*m3**2*m1*z3**2*z2**3 + 2*m3*m2*m1*z3**2*z2**3 + 2*m3*m1**2*z3**2*z2**3 + 3*m2*m1**2*z3**2*z2**3 + 6*m3*m1*zeta*zeta_conj*z3**2*z2**3 + 9*m1**2*zeta*zeta_conj*z3**2*z2**3 - 2*m3*m1*zeta_conj*z3**3*z2**3 - 2*m2*m1*zeta_conj*z3**3*z2**3 + m1**2*zeta_conj*z3**3*z2**3 - 3*m1*zeta*zeta_conj**2*z3**3*z2**3 - 3*m2**3*zeta*z3**3*z1 - 6*m2**2*m1*zeta*z3**3*z1 - 3*m2*m1**2*zeta*z3**3*z1 - 9*m3*m2**2*zeta*z3**2*z2*z1 - 24*m3*m2*m1*zeta*z3**2*z2*z1 - 18*m2**2*m1*zeta*z3**2*z2*z1 - 9*m3*m1**2*zeta*z3**2*z2*z1 - 18*m2*m1**2*zeta*z3**2*z2*z1 + 3*m3*m2**2*z3**3*z2*z1 + 3*m2**3*z3**3*z2*z1 + 8*m3*m2*m1*z3**3*z2*z1 + 5*m2**2*m1*z3**3*z2*z1 + 3*m3*m1**2*z3**3*z2*z1 + 5*m2*m1**2*z3**3*z2*z1 + 3*m1**3*z3**3*z2*z1 + 9*m2**2*zeta*zeta_conj*z3**3*z2*z1 + 24*m2*m1*zeta*zeta_conj*z3**3*z2*z1 + 9*m1**2*zeta*zeta_conj*z3**3*z2*z1 - 9*m3**2*m2*zeta*z3*z2**2*z1 - 18*m3**2*m1*zeta*z3*z2**2*z1 - 24*m3*m2*m1*zeta*z3*z2**2*z1 - 18*m3*m1**2*zeta*z3*z2**2*z1 - 9*m2*m1**2*zeta*z3*z2**2*z1 + 6*m3**2*m2*z3**2*z2**2*z1 + 6*m3*m2**2*z3**2*z2**2*z1 + 12*m3**2*m1*z3**2*z2**2*z1 + 18*m3*m2*m1*z3**2*z2**2*z1 +
				12*m2**2*m1*z3**2*z2**2*z1 + 12*m3*m1**2*z3**2*z2**2*z1 + 12*m2*m1**2*z3**2*z2**2*z1 + 9*m1**3*z3**2*z2**2*z1 + 18*m3*m2*zeta*zeta_conj*z3**2*z2**2*z1 + 36*m3*m1*zeta*zeta_conj*z3**2*z2**2*z1 + 36*m2*m1*zeta*zeta_conj*z3**2*z2**2*z1 + 27*m1**2*zeta*zeta_conj*z3**2*z2**2*z1 - 6*m3*m2*zeta_conj*z3**3*z2**2*z1 - 6*m2**2*zeta_conj*z3**3*z2**2*z1 - 12*m3*m1*zeta_conj*z3**3*z2**2*z1 - 6*m2*m1*zeta_conj*z3**3*z2**2*z1 - 3*m1**2*zeta_conj*z3**3*z2**2*z1 - 9*m2*zeta*zeta_conj**2*z3**3*z2**2*z1 - 18*m1*zeta*zeta_conj**2*z3**3*z2**2*z1 - 3*m3**3*zeta*z2**3*z1 - 6*m3**2*m1*zeta*z2**3*z1 - 3*m3*m1**2*zeta*z2**3*z1 + 3*m3**3*z3*z2**3*z1 + 3*m3**2*m2*z3*z2**3*z1 + 5*m3**2*m1*z3*z2**3*z1 + 8*m3*m2*m1*z3*z2**3*z1 + 5*m3*m1**2*z3*z2**3*z1 + 3*m2*m1**2*z3*z2**3*z1 + 3*m1**3*z3*z2**3*z1 + 9*m3**2*zeta*zeta_conj*z3*z2**3*z1 + 24*m3*m1*zeta*zeta_conj*z3*z2**3*z1 + 9*m1**2*zeta*zeta_conj*z3*z2**3*z1 - 6*m3**2*zeta_conj*z3**2*z2**3*z1 - 6*m3*m2*zeta_conj*z3**2*z2**3*z1 - 6*m3*m1*zeta_conj*z3**2*z2**3*z1 - 12*m2*m1*zeta_conj*z3**2*z2**3*z1 - 3*m1**2*zeta_conj*z3**2*z2**3*z1 - 9*m3*zeta*zeta_conj**2*z3**2*z2**3*z1 - 18*m1*zeta*zeta_conj**2*z3**2*z2**3*z1 + 3*m3*zeta_conj**2*z3**3*z2**3*z1 + 3*m2*zeta_conj**2*z3**3*z2**3*z1 - 3*m1*zeta_conj**2*z3**3*z2**3*z1 + 3*zeta*zeta_conj**3*z3**3*z2**3*z1 - 9*m3*m2**2*zeta*z3**2*z1**2 - 9*m2**3*zeta*z3**2*z1**2 - 6*m3*m2*m1*zeta*z3**2*z1**2 - 9*m2**2*m1*zeta*z3**2*z1**2 + 3*m3*m2**2*z3**3*z1**2 + 2*m3*m2*m1*z3**3*z1**2 + 2*m2**2*m1*z3**3*z1**2 + 2*m2*m1**2*z3**3*z1**2 + 9*m2**2*zeta*zeta_conj*z3**3*z1**2 + 6*m2*m1*zeta*zeta_conj*z3**3*z1**2 - 18*m3**2*m2*zeta*z3*z2*z1**2 - 
				18*m3*m2**2*zeta*z3*z2*z1**2 - 9*m3**2*m1*zeta*z3*z2*z1**2 - 24*m3*m2*m1*zeta*z3*z2*z1**2 - 9*m2**2*m1*zeta*z3*z2*z1**2 + 12*m3**2*m2*z3**2*z2*z1**2 + 12*m3*m2**2*z3**2*z2*z1**2 + 9*m2**3*z3**2*z2*z1**2 + 6*m3**2*m1*z3**2*z2*z1**2 + 18*m3*m2*m1*z3**2*z2*z1**2 + 12*m2**2*m1*z3**2*z2*z1**2 + 6*m3*m1**2*z3**2*z2*z1**2 + 12*m2*m1**2*z3**2*z2*z1**2 + 36*m3*m2*zeta*zeta_conj*z3**2*z2*z1**2 + 27*m2**2*zeta*zeta_conj*z3**2*z2*z1**2 + 18*m3*m1*zeta*zeta_conj*z3**2*z2*z1**2 + 36*m2*m1*zeta*zeta_conj*z3**2*z2*z1**2 - 12*m3*m2*zeta_conj*z3**3*z2*z1**2 - 3*m2**2*zeta_conj*z3**3*z2*z1**2 - 6*m3*m1*zeta_conj*z3**3*z2*z1**2 - 6*m2*m1*zeta_conj*z3**3*z2*z1**2 - 6*m1**2*zeta_conj*z3**3*z2*z1**2 - 18*m2*zeta*zeta_conj**2*z3**3*z2*z1**2 - 9*m1*zeta*zeta_conj**2*z3**3*z2*z1**2 - 9*m3**3*zeta*z2**2*z1**2 - 9*m3**2*m2*zeta*z2**2*z1**2 - 9*m3**2*m1*zeta*z2**2*z1**2 - 6*m3*m2*m1*zeta*z2**2*z1**2 + 9*m3**3*z3*z2**2*z1**2 + 12*m3**2*m2*z3*z2**2*z1**2 + 12*m3*m2**2*z3*z2**2*z1**2 + 12*m3**2*m1*z3*z2**2*z1**2 + 18*m3*m2*m1*z3*z2**2*z1**2 + 6*m2**2*m1*z3*z2**2*z1**2 + 12*m3*m1**2*z3*z2**2*z1**2 + 6*m2*m1**2*z3*z2**2*z1**2 + 27*m3**2*zeta*zeta_conj*z3*z2**2*z1**2 + 36*m3*m2*zeta*zeta_conj*z3*z2**2*z1**2 + 36*m3*m1*zeta*zeta_conj*z3*z2**2*z1**2 + 18*m2*m1*zeta*zeta_conj*z3*z2**2*z1**2 - 18*m3**2*zeta_conj*z3**2*z2**2*z1**2 - 18*m3*m2*zeta_conj*z3**2*z2**2*z1**2 - 18*m2**2*zeta_conj*z3**2*z2**2*z1**2 - 18*m3*m1*zeta_conj*z3**2*z2**2*z1**2 - 18*m2*m1*zeta_conj*z3**2*z2**2*z1**2 - 18*m1**2*zeta_conj*z3**2*z2**2*z1**2 - 27*m3*zeta*zeta_conj**2*z3**2*z2**2*z1**2 - 27*m2*zeta*zeta_conj**2*z3**2*z2**2*z1**2 - 27*m1*zeta*zeta_conj**2*z3**2*z2**2*z1**2 +
				9*m3*zeta_conj**2*z3**3*z2**2*z1**2 + 9*zeta*zeta_conj**3*z3**3*z2**2*z1**2 + 3*m3**2*m2*z2**3*z1**2 + 2*m3**2*m1*z2**3*z1**2 + 2*m3*m2*m1*z2**3*z1**2 + 2*m3*m1**2*z2**3*z1**2 + 9*m3**2*zeta*zeta_conj*z2**3*z1**2 + 6*m3*m1*zeta*zeta_conj*z2**3*z1**2 - 3*m3**2*zeta_conj*z3*z2**3*z1**2 - 12*m3*m2*zeta_conj*z3*z2**3*z1**2 - 6*m3*m1*zeta_conj*z3*z2**3*z1**2 - 6*m2*m1*zeta_conj*z3*z2**3*z1**2 - 6*m1**2*zeta_conj*z3*z2**3*z1**2 - 18*m3*zeta*zeta_conj**2*z3*z2**3*z1**2 - 9*m1*zeta*zeta_conj**2*z3*z2**3*z1**2 + 9*m2*zeta_conj**2*z3**2*z2**3*z1**2 + 9*zeta*zeta_conj**3*z3**2*z2**3*z1**2 + 3*zeta_conj**3*z3**3*z2**3*z1**2 - 3*m3**2*m2*zeta*z3*z1**3 - 6*m3*m2**2*zeta*z3*z1**3 - 3*m2**3*zeta*z3*z1**3 + 2*m3**2*m2*z3**2*z1**3 + 2*m3*m2**2*z3**2*z1**3 + 2*m3*m2*m1*z3**2*z1**3 + 3*m2**2*m1*z3**2*z1**3 + 6*m3*m2*zeta*zeta_conj*z3**2*z1**3 + 9*m2**2*zeta*zeta_conj*z3**2*z1**3 - 2*m3*m2*zeta_conj*z3**3*z1**3 + m2**2*zeta_conj*z3**3*z1**3 - 2*m2*m1*zeta_conj*z3**3*z1**3 - 3*m2*zeta*zeta_conj**2*z3**3*z1**3 - 3*m3**3*zeta*z2*z1**3 - 6*m3**2*m2*zeta*z2*z1**3 - 3*m3*m2**2*zeta*z2*z1**3 + 3*m3**3*z3*z2*z1**3 + 5*m3**2*m2*z3*z2*z1**3 + 5*m3*m2**2*z3*z2*z1**3 + 3*m2**3*z3*z2*z1**3 + 3*m3**2*m1*z3*z2*z1**3 + 8*m3*m2*m1*z3*z2*z1**3 + 3*m2**2*m1*z3*z2*z1**3 + 9*m3**2*zeta*zeta_conj*z3*z2*z1**3 + 24*m3*m2*zeta*zeta_conj*z3*z2*z1**3 + 9*m2**2*zeta*zeta_conj*z3*z2*z1**3 - 6*m3**2*zeta_conj*z3**2*z2*z1**3 - 6*m3*m2*zeta_conj*z3**2*z2*z1**3 - 3*m2**2*zeta_conj*z3**2*z2*z1**3 - 6*m3*m1*zeta_conj*z3**2*z2*z1**3 - 12*m2*m1*zeta_conj*z3**2*z2*z1**3 - 9*m3*zeta*zeta_conj**2*z3**2*z2*z1**3 - 18*m2*zeta*zeta_conj**2*z3**2*z2*z1**3 + 3*m3*zeta_conj**2*z3**3*z2*z1**3 - 3*m2*zeta_conj**2*z3**3*z2*z1**3 +
				3*m1*zeta_conj**2*z3**3*z2*z1**3 + 3*zeta*zeta_conj**3*z3**3*z2*z1**3 + 2*m3**2*m2*z2**2*z1**3 + 2*m3*m2**2*z2**2*z1**3 + 3*m3**2*m1*z2**2*z1**3 + 2*m3*m2*m1*z2**2*z1**3 + 9*m3**2*zeta*zeta_conj*z2**2*z1**3 + 6*m3*m2*zeta*zeta_conj*z2**2*z1**3 - 3*m3**2*zeta_conj*z3*z2**2*z1**3 - 6*m3*m2*zeta_conj*z3*z2**2*z1**3 - 6*m2**2*zeta_conj*z3*z2**2*z1**3 - 12*m3*m1*zeta_conj*z3*z2**2*z1**3 - 6*m2*m1*zeta_conj*z3*z2**2*z1**3 - 18*m3*zeta*zeta_conj**2*z3*z2**2*z1**3 - 9*m2*zeta*zeta_conj**2*z3*z2**2*z1**3 + 9*m1*zeta_conj**2*z3**2*z2**2*z1**3 + 9*zeta*zeta_conj**3*z3**2*z2**2*z1**3 + 3*zeta_conj**3*z3**3*z2**2*z1**3 + m3**2*zeta_conj*z2**3*z1**3 - 2*m3*m2*zeta_conj*z2**3*z1**3 - 2*m3*m1*zeta_conj*z2**3*z1**3 - 3*m3*zeta*zeta_conj**2*z2**3*z1**3 - 3*m3*zeta_conj**2*z3*z2**3*z1**3 + 3*m2*zeta_conj**2*z3*z2**3*z1**3 + 3*m1*zeta_conj**2*z3*z2**3*z1**3 + 3*zeta*zeta_conj**3*z3*z2**3*z1**3 + 3*zeta_conj**3*z3**2*z2**3*z1**3 - 2*m2*m1*zeta*z3**3*z2**2*z1_conj - 3*m1**2*zeta*z3**3*z2**2*z1_conj - 2*m3*m1*zeta*z3**2*z2**3*z1_conj - 3*m1**2*zeta*z3**2*z2**3*z1_conj + m3*m1*z3**3*z2**3*z1_conj + m2*m1*z3**3*z2**3*z1_conj - m1**2*z3**3*z2**3*z1_conj + 2*m1*zeta*zeta_conj*z3**3*z2**3*z1_conj - 3*m2**2*zeta*z3**3*z2*z1*z1_conj - 8*m2*m1*zeta*z3**3*z2*z1*z1_conj - 3*m1**2*zeta*z3**3*z2*z1*z1_conj - 6*m3*m2*zeta*z3**2*z2**2*z1*z1_conj - 12*m3*m1*zeta*z3**2*z2**2*z1*z1_conj - 12*m2*m1*zeta*z3**2*z2**2*z1*z1_conj - 9*m1**2*zeta*z3**2*z2**2*z1*z1_conj + 3*m3*m2*z3**3*z2**2*z1*z1_conj + 3*m2**2*z3**3*z2**2*z1*z1_conj + 6*m3*m1*z3**3*z2**2*z1*z1_conj + 2*m2*m1*z3**3*z2**2*z1*z1_conj -
				3*m1**2*z3**3*z2**2*z1*z1_conj + 6*m2*zeta*zeta_conj*z3**3*z2**2*z1*z1_conj + 12*m1*zeta*zeta_conj*z3**3*z2**2*z1*z1_conj - 3*m3**2*zeta*z3*z2**3*z1*z1_conj - 8*m3*m1*zeta*z3*z2**3*z1*z1_conj - 3*m1**2*zeta*z3*z2**3*z1*z1_conj + 3*m3**2*z3**2*z2**3*z1*z1_conj + 3*m3*m2*z3**2*z2**3*z1*z1_conj + 2*m3*m1*z3**2*z2**3*z1*z1_conj + 6*m2*m1*z3**2*z2**3*z1*z1_conj - 3*m1**2*z3**2*z2**3*z1*z1_conj + 6*m3*zeta*zeta_conj*z3**2*z2**3*z1*z1_conj + 12*m1*zeta*zeta_conj*z3**2*z2**3*z1*z1_conj - 3*m3*zeta_conj*z3**3*z2**3*z1*z1_conj - 3*m2*zeta_conj*z3**3*z2**3*z1*z1_conj + 4*m1*zeta_conj*z3**3*z2**3*z1*z1_conj - 3*zeta*zeta_conj**2*z3**3*z2**3*z1*z1_conj - 3*m2**2*zeta*z3**3*z1**2*z1_conj - 2*m2*m1*zeta*z3**3*z1**2*z1_conj - 12*m3*m2*zeta*z3**2*z2*z1**2*z1_conj - 9*m2**2*zeta*z3**2*z2*z1**2*z1_conj - 6*m3*m1*zeta*z3**2*z2*z1**2*z1_conj - 12*m2*m1*zeta*z3**2*z2*z1**2*z1_conj + 6*m3*m2*z3**3*z2*z1**2*z1_conj + 3*m2**2*z3**3*z2*z1**2*z1_conj + 3*m3*m1*z3**3*z2*z1**2*z1_conj - m2*m1*z3**3*z2*z1**2*z1_conj + 12*m2*zeta*zeta_conj*z3**3*z2*z1**2*z1_conj + 6*m1*zeta*zeta_conj*z3**3*z2*z1**2*z1_conj - 9*m3**2*zeta*z3*z2**2*z1**2*z1_conj - 12*m3*m2*zeta*z3*z2**2*z1**2*z1_conj - 12*m3*m1*zeta*z3*z2**2*z1**2*z1_conj - 6*m2*m1*zeta*z3*z2**2*z1**2*z1_conj + 9*m3**2*z3**2*z2**2*z1**2*z1_conj + 12*m3*m2*z3**2*z2**2*z1**2*z1_conj + 9*m2**2*z3**2*z2**2*z1**2*z1_conj + 3*m3*m1*z3**2*z2**2*z1**2*z1_conj + 3*m2*m1*z3**2*z2**2*z1**2*z1_conj + 18*m3*zeta*zeta_conj*z3**2*z2**2*z1**2*z1_conj +
				18*m2*zeta*zeta_conj*z3**2*z2**2*z1**2*z1_conj + 18*m1*zeta*zeta_conj*z3**2*z2**2*z1**2*z1_conj - 9*m3*zeta_conj*z3**3*z2**2*z1**2*z1_conj - 3*m2*zeta_conj*z3**3*z2**2*z1**2*z1_conj + 6*m1*zeta_conj*z3**3*z2**2*z1**2*z1_conj - 9*zeta*zeta_conj**2*z3**3*z2**2*z1**2*z1_conj - 3*m3**2*zeta*z2**3*z1**2*z1_conj - 2*m3*m1*zeta*z2**3*z1**2*z1_conj + 3*m3**2*z3*z2**3*z1**2*z1_conj + 6*m3*m2*z3*z2**3*z1**2*z1_conj - m3*m1*z3*z2**3*z1**2*z1_conj + 3*m2*m1*z3*z2**3*z1**2*z1_conj + 12*m3*zeta*zeta_conj*z3*z2**3*z1**2*z1_conj + 6*m1*zeta*zeta_conj*z3*z2**3*z1**2*z1_conj - 3*m3*zeta_conj*z3**2*z2**3*z1**2*z1_conj - 9*m2*zeta_conj*z3**2*z2**3*z1**2*z1_conj + 6*m1*zeta_conj*z3**2*z2**3*z1**2*z1_conj - 9*zeta*zeta_conj**2*z3**2*z2**3*z1**2*z1_conj - 3*zeta_conj**2*z3**3*z2**3*z1**2*z1_conj - 2*m3*m2*zeta*z3**2*z1**3*z1_conj - 3*m2**2*zeta*z3**2*z1**3*z1_conj + m3*m2*z3**3*z1**3*z1_conj + 2*m2*zeta*zeta_conj*z3**3*z1**3*z1_conj - 3*m3**2*zeta*z3*z2*z1**3*z1_conj - 8*m3*m2*zeta*z3*z2*z1**3*z1_conj - 3*m2**2*zeta*z3*z2*z1**3*z1_conj + 3*m3**2*z3**2*z2*z1**3*z1_conj + 5*m3*m2*z3**2*z2*z1**3*z1_conj + 3*m2**2*z3**2*z2*z1**3*z1_conj + 6*m3*zeta*zeta_conj*z3**2*z2*z1**3*z1_conj + 12*m2*zeta*zeta_conj*z3**2*z2*z1**3*z1_conj - 3*m3*zeta_conj*z3**3*z2*z1**3*z1_conj + m2*zeta_conj*z3**3*z2*z1**3*z1_conj - 3*zeta*zeta_conj**2*z3**3*z2*z1**3*z1_conj - 3*m3**2*zeta*z2**2*z1**3*z1_conj - 2*m3*m2*zeta*z2**2*z1**3*z1_conj + 3*m3**2*z3*z2**2*z1**3*z1_conj + 5*m3*m2*z3*z2**2*z1**3*z1_conj + 3*m2**2*z3*z2**2*z1**3*z1_conj +
				12*m3*zeta*zeta_conj*z3*z2**2*z1**3*z1_conj + 6*m2*zeta*zeta_conj*z3*z2**2*z1**3*z1_conj - 3*m3*zeta_conj*z3**2*z2**2*z1**3*z1_conj - 3*m2*zeta_conj*z3**2*z2**2*z1**3*z1_conj - 9*zeta*zeta_conj**2*z3**2*z2**2*z1**3*z1_conj - 3*zeta_conj**2*z3**3*z2**2*z1**3*z1_conj + m3*m2*z2**3*z1**3*z1_conj + 2*m3*zeta*zeta_conj*z2**3*z1**3*z1_conj + m3*zeta_conj*z3*z2**3*z1**3*z1_conj - 3*m2*zeta_conj*z3*z2**3*z1**3*z1_conj - 3*zeta*zeta_conj**2*z3*z2**3*z1**3*z1_conj - 3*zeta_conj**2*z3**2*z2**3*z1**3*z1_conj + z2_conj*(-(m2**2*z3*z1*(z3*z1*(3*z2*z1 + z3*(3*z2 + z1)) + 3*zeta*(z2*z1**2 + z3**2*(z2 + z1) + z3*z1*(3*z2 + z1)))) + m2*(-(m1*z3*(-(z1*(3*z2**2*z1**2 + 3*z3*z2*z1*(z2 + 2*z1) + z3**2*(-z2**2 + 2*z2*z1 + z1**2))) + 2*zeta*(3*z2**2*z1**2 + 6*z3*z2*z1*(z2 + z1) + z3**2*(z2**2 + 4*z2*z1 + z1**2)))) + z1*(-(m3*(-(z3*(-(z2**2*z1**2) + z3*z2*z1*(3*z2 + 2*z1) + z3**2*(3*z2**2 + 6*z2*z1 + z1**2))) + 2*zeta*(z2**2*z1**2 + 2*z3*z2*z1*(3*z2 + 2*z1) + z3**2*(3*z2**2 + 6*z2*z1 + z1**2)))) + 2*zeta_conj*z3*(z3*z2*z1*(3*z3*z2 + 2*z3*z1 + 3*z2*z1) + zeta*(3*z2**2*z1**2 + 3*z3*z2*z1*(3*z2 + 2*z1) + z3**2*(3*z2**2 + 6*z2*z1 + z1**2))))) + z2*(-3*m1**2*z3*(zeta - z1)*(z2**2*z1 + z3**2*(z2 + z1) + z3*z2*(z2 + 3*z1)) - z1*(3*m3**2*(zeta - z3)*(z2*z1*(z2 + z1) + z3*(z2**2 + 3*z2*z1 + z1**2)) + 3*zeta_conj**2*z3*(z3*z2*z1*(z2*z1 + z3*(z2 + z1)) + zeta*(z2**2*z1**2 + 3*z3*z2*z1*(z2 + z1) + z3**2*(z2**2 + 3*z2*z1 + z1**2))) - m3*zeta_conj*(-(z3*(-(z2**2*z1**2) + 3*z3*z2*z1*(z2 + z1) + 3*z3**2*(z2**2 + 3*z2*z1 + z1**2))) + 2*zeta*(z2**2*z1**2 + 6*z3*z2*z1*(z2 + z1) + 3*z3**2*(z2**2 + 3*z2*z1 + z1**2)))) +
				m1*(-(m3*(2*zeta - z3 - z1)*(z2**2*z1**2 + 2*z3*z2*z1*(2*z2 + 3*z1) + z3**2*(z2**2 + 6*z2*z1 + 3*z1**2))) + zeta_conj*z3*(-(z1*(3*z2**2*z1**2 + 3*z3*z2*z1*(z2 + 3*z1) + z3**2*(-z2**2 + 3*z2*z1 + 3*z1**2))) + 2*zeta*(3*z2**2*z1**2 + 3*z3*z2*z1*(2*z2 + 3*z1) + z3**2*(z2**2 + 6*z2*z1 + 3*z1**2))))) - (m1*z3*z2*(z3*z2*z1*(2*z3*z2 + 3*z3*z1 + 3*z2*z1) + zeta*(3*z2**2*z1**2 + 3*z3*z2*z1*(2*z2 + 3*z1) + z3**2*(z2**2 + 6*z2*z1 + 3*z1**2))) + z1*(m2*z3*(z3*z2*z1*(3*z3*z2 + 2*z3*z1 + 3*z2*z1) + zeta*(3*z2**2*z1**2 + 3*z3*z2*z1*(3*z2 + 2*z1) + z3**2*(3*z2**2 + 6*z2*z1 + z1**2))) + z2*(m3*(zeta - z3)*(z2**2*z1**2 + 6*z3*z2*z1*(z2 + z1) + 3*z3**2*(z2**2 + 3*z2*z1 + z1**2)) - 3*zeta_conj*z3*(z3*z2*z1*(z2*z1 + z3*(z2 + z1)) + zeta*(z2**2*z1**2 + 3*z3*z2*z1*(z2 + z1) + z3**2*(z2**2 + 3*z2*z1 + z1**2))))))*z1_conj) + z3_conj*(-2*m2*m1*zeta*z3**3*z2**2 - 3*m1**2*zeta*z3**3*z2**2 - 2*m3*m1*zeta*z3**2*z2**3 - 3*m1**2*zeta*z3**2*z2**3 + m2*m1*z3**3*z2**3 + 2*m1*zeta*zeta_conj*z3**3*z2**3 - 3*m2**2*zeta*z3**3*z2*z1 - 8*m2*m1*zeta*z3**3*z2*z1 - 3*m1**2*zeta*z3**3*z2*z1 - 6*m3*m2*zeta*z3**2*z2**2*z1 - 12*m3*m1*zeta*z3**2*z2**2*z1 - 12*m2*m1*zeta*z3**2*z2**2*z1 - 9*m1**2*zeta*z3**2*z2**2*z1 + 3*m2**2*z3**3*z2**2*z1 + 5*m2*m1*z3**3*z2**2*z1 + 3*m1**2*z3**3*z2**2*z1 + 6*m2*zeta*zeta_conj*z3**3*z2**2*z1 + 12*m1*zeta*zeta_conj*z3**3*z2**2*z1 - 3*m3**2*zeta*z3*z2**3*z1 - 8*m3*m1*zeta*z3*z2**3*z1 - 3*m1**2*zeta*z3*z2**3*z1 + 3*m3*m2*z3**2*z2**3*z1 - m3*m1*z3**2*z2**3*z1 + 6*m2*m1*z3**2*z2**3*z1 + 3*m1**2*z3**2*z2**3*z1 + 6*m3*zeta*zeta_conj*z3**2*z2**3*z1 + 12*m1*zeta*zeta_conj*z3**2*z2**3*z1 - 
				3*m2*zeta_conj*z3**3*z2**3*z1 + m1*zeta_conj*z3**3*z2**3*z1 - 3*zeta*zeta_conj**2*z3**3*z2**3*z1 - 3*m2**2*zeta*z3**3*z1**2 - 2*m2*m1*zeta*z3**3*z1**2 - 12*m3*m2*zeta*z3**2*z2*z1**2 - 9*m2**2*zeta*z3**2*z2*z1**2 - 6*m3*m1*zeta*z3**2*z2*z1**2 - 12*m2*m1*zeta*z3**2*z2*z1**2 + 3*m2**2*z3**3*z2*z1**2 + 5*m2*m1*z3**3*z2*z1**2 + 3*m1**2*z3**3*z2*z1**2 + 12*m2*zeta*zeta_conj*z3**3*z2*z1**2 + 6*m1*zeta*zeta_conj*z3**3*z2*z1**2 - 9*m3**2*zeta*z3*z2**2*z1**2 - 12*m3*m2*zeta*z3*z2**2*z1**2 - 12*m3*m1*zeta*z3*z2**2*z1**2 - 6*m2*m1*zeta*z3*z2**2*z1**2 + 3*m3*m2*z3**2*z2**2*z1**2 + 9*m2**2*z3**2*z2**2*z1**2 + 3*m3*m1*z3**2*z2**2*z1**2 + 12*m2*m1*z3**2*z2**2*z1**2 + 9*m1**2*z3**2*z2**2*z1**2 + 18*m3*zeta*zeta_conj*z3**2*z2**2*z1**2 + 18*m2*zeta*zeta_conj*z3**2*z2**2*z1**2 + 18*m1*zeta*zeta_conj*z3**2*z2**2*z1**2 - 3*m2*zeta_conj*z3**3*z2**2*z1**2 - 3*m1*zeta_conj*z3**3*z2**2*z1**2 - 9*zeta*zeta_conj**2*z3**3*z2**2*z1**2 - 3*m3**2*zeta*z2**3*z1**2 - 2*m3*m1*zeta*z2**3*z1**2 - 3*m3**2*z3*z2**3*z1**2 + 6*m3*m2*z3*z2**3*z1**2 + 2*m3*m1*z3*z2**3*z1**2 + 3*m2*m1*z3*z2**3*z1**2 + 3*m1**2*z3*z2**3*z1**2 + 12*m3*zeta*zeta_conj*z3*z2**3*z1**2 + 6*m1*zeta*zeta_conj*z3*z2**3*z1**2 + 6*m3*zeta_conj*z3**2*z2**3*z1**2 - 9*m2*zeta_conj*z3**2*z2**3*z1**2 - 3*m1*zeta_conj*z3**2*z2**3*z1**2 - 9*zeta*zeta_conj**2*z3**2*z2**3*z1**2 - 3*zeta_conj**2*z3**3*z2**3*z1**2 - 2*m3*m2*zeta*z3**2*z1**3 - 3*m2**2*zeta*z3**2*z1**3 + m2*m1*z3**3*z1**3 + 2*m2*zeta*zeta_conj*z3**3*z1**3 - 3*m3**2*zeta*z3*z2*z1**3 - 8*m3*m2*zeta*z3*z2*z1**3 - 3*m2**2*zeta*z3*z2*z1**3 - m3*m2*z3**2*z2*z1**3 + 3*m2**2*z3**2*z2*z1**3 + 3*m3*m1*z3**2*z2*z1**3 + 6*m2*m1*z3**2*z2*z1**3 + 
				6*m3*zeta*zeta_conj*z3**2*z2*z1**3 + 12*m2*zeta*zeta_conj*z3**2*z2*z1**3 + m2*zeta_conj*z3**3*z2*z1**3 - 3*m1*zeta_conj*z3**3*z2*z1**3 - 3*zeta*zeta_conj**2*z3**3*z2*z1**3 - 3*m3**2*zeta*z2**2*z1**3 - 2*m3*m2*zeta*z2**2*z1**3 - 3*m3**2*z3*z2**2*z1**3 + 2*m3*m2*z3*z2**2*z1**3 + 3*m2**2*z3*z2**2*z1**3 + 6*m3*m1*z3*z2**2*z1**3 + 3*m2*m1*z3*z2**2*z1**3 + 12*m3*zeta*zeta_conj*z3*z2**2*z1**3 + 6*m2*zeta*zeta_conj*z3*z2**2*z1**3 + 6*m3*zeta_conj*z3**2*z2**2*z1**3 - 3*m2*zeta_conj*z3**2*z2**2*z1**3 - 9*m1*zeta_conj*z3**2*z2**2*z1**3 - 9*zeta*zeta_conj**2*z3**2*z2**2*z1**3 - 3*zeta_conj**2*z3**3*z2**2*z1**3 - m3**2*z2**3*z1**3 + m3*m2*z2**3*z1**3 + m3*m1*z2**3*z1**3 + 2*m3*zeta*zeta_conj*z2**3*z1**3 + 4*m3*zeta_conj*z3*z2**3*z1**3 - 3*m2*zeta_conj*z3*z2**3*z1**3 - 3*m1*zeta_conj*z3*z2**3*z1**3 - 3*zeta*zeta_conj**2*z3*z2**3*z1**3 - 3*zeta_conj**2*z3**2*z2**3*z1**3 + (m2*z3*(-zeta + z2)*z1*(3*z2**2*z1**2 + 3*z3*z2*z1*(3*z2 + 2*z1) + z3**2*(3*z2**2 + 6*z2*z1 + z1**2)) + 3*zeta_conj*z3*z2*z1*(z3*z2*z1*(z2*z1 + z3*(z2 + z1)) + zeta*(z2**2*z1**2 + 3*z3*z2*z1*(z2 + z1) + z3**2*(z2**2 + 3*z2*z1 + z1**2))) - z2*(m1*z3*(3*zeta*z2**2*z1**2 + 3*z3*z2*z1*(2*zeta*z2 + 3*zeta*z1 + z2*z1) + z3**2*(3*zeta*z1**2 + 3*z2*z1*(2*zeta + z1) + z2**2*(zeta + 2*z1))) + m3*z1*(zeta*z2**2*z1**2 + 2*z3*z2*z1*(z2*z1 + 3*zeta*(z2 + z1)) + 3*z3**2*(z2*z1*(z2 + z1) + zeta*(z2**2 + 3*z2*z1 + z1**2)))))*z1_conj + z2_conj*(-(m1*z3*z2*(zeta - z1)*(3*z2**2*z1**2 + 3*z3*z2*z1*(2*z2 + 3*z1) + z3**2*(z2**2 + 6*z2*z1 + 3*z1**2))) - z1*(m2*z3*(z3*z2*z1*(3*z3*z2 + 2*z3*z1 + 3*z2*z1) + zeta*(3*z2**2*z1**2 + 3*z3*z2*z1*(3*z2 + 2*z1) + z3**2*(3*z2**2 + 6*z2*z1 + z1**2))) + 
				z2*(-3*zeta_conj*z3*(z3*z2*z1*(z2*z1 + z3*(z2 + z1)) + zeta*(z2**2*z1**2 + 3*z3*z2*z1*(z2 + z1) + z3**2*(z2**2 + 3*z2*z1 + z1**2))) + m3*(z3*z2*z1*(2*z2*z1 + 3*z3*(z2 + z1)) + zeta*(z2**2*z1**2 + 6*z3*z2*z1*(z2 + z1) + 3*z3**2*(z2**2 + 3*z2*z1 + z1**2))))) - 3*z3*z2*z1*(z3*z2*z1*(z2*z1 + z3*(z2 + z1)) + zeta*(z2**2*z1**2 + 3*z3*z2*z1*(z2 + z1) + z3**2*(z2**2 + 3*z2*z1 + z1**2)))*z1_conj)))

		coeff1 = (3*m2*m1**2*zeta*z3**3*z2**2 +  3*m1**3*zeta*z3**3*z2**2 +  3*m3*m1**2*zeta*z3**2*z2**3 +  3*m1**3*zeta*z3**2*z2**3 -  m3*m1**2*z3**3*z2**3 -  m2*m1**2*z3**3*z2**3 -  3*m1**2*zeta*zeta_conj*z3**3*z2**3 +  6*m2**2*m1*zeta*z3**3*z2*z1 +  6*m2*m1**2*zeta*z3**3*z2*z1 +  12*m3*m2*m1*zeta*z3**2*z2**2*z1 + 9*m3*m1**2*zeta*z3**2*z2**2*z1 +  9*m2*m1**2*zeta*z3**2*z2**2*z1 -  4*m3*m2*m1*z3**3*z2**2*z1 -  4*m2**2*m1*z3**3*z2**2*z1 -  3*m3*m1**2*z3**3*z2**2*z1 -  4*m2*m1**2*z3**3*z2**2*z1 -  3*m1**3*z3**3*z2**2*z1 -  12*m2*m1*zeta*zeta_conj*z3**3*z2**2*z1 - 9*m1**2*zeta*zeta_conj*z3**3*z2**2*z1 +  6*m3**2*m1*zeta*z3*z2**3*z1 +  6*m3*m1**2*zeta*z3*z2**3*z1 -  4*m3**2*m1*z3**2*z2**3*z1 -  4*m3*m2*m1*z3**2*z2**3*z1 -  4*m3*m1**2*z3**2*z2**3*z1 -
				3*m2*m1**2*z3**2*z2**3*z1 -  3*m1**3*z3**2*z2**3*z1 -  12*m3*m1*zeta*zeta_conj*z3**2*z2**3*z1 - 9*m1**2*zeta*zeta_conj*z3**2*z2**3*z1 +  4*m3*m1*zeta_conj*z3**3*z2**3*z1 +  4*m2*m1*zeta_conj*z3**3*z2**3*z1 +  m1**2*zeta_conj*z3**3*z2**3*z1 +  6*m1*zeta*zeta_conj**2*z3**3*z2**3*z1 + 3*m2**3*zeta*z3**3*z1**2 +  3*m2**2*m1*zeta*z3**3*z1**2 +  9*m3*m2**2*zeta*z3**2*z2*z1**2 +  12*m3*m2*m1*zeta*z3**2*z2*z1**2 + 9*m2**2*m1*zeta*z3**2*z2*z1**2 - 3*m3*m2**2*z3**3*z2*z1**2 - 3*m2**3*z3**3*z2*z1**2 -  4*m3*m2*m1*z3**3*z2*z1**2 -  4*m2**2*m1*z3**3*z2*z1**2 -  4*m2*m1**2*z3**3*z2*z1**2 -  9*m2**2*zeta*zeta_conj*z3**3*z2*z1**2 - 12*m2*m1*zeta*zeta_conj*z3**3*z2*z1**2 +  9*m3**2*m2*zeta*z3*z2**2*z1**2 +  9*m3**2*m1*zeta*z3*z2**2*z1**2 + 
				12*m3*m2*m1*zeta*z3*z2**2*z1**2 - 6*m3**2*m2*z3**2*z2**2*z1**2 - 6*m3*m2**2*z3**2*z2**2*z1**2 - 6*m3**2*m1*z3**2*z2**2*z1**2 - 12*m3*m2*m1*z3**2*z2**2*z1**2 - 6*m2**2*m1*z3**2*z2**2*z1**2 - 6*m3*m1**2*z3**2*z2**2*z1**2 - 6*m2*m1**2*z3**2*z2**2*z1**2 - 18*m3*m2*zeta*zeta_conj*z3**2*z2**2*z1**2 -  18*m3*m1*zeta*zeta_conj*z3**2*z2**2*z1**2 - 18*m2*m1*zeta*zeta_conj*z3**2*z2**2*z1**2 +  6*m3*m2*zeta_conj*z3**3*z2**2*z1**2 + 6*m2**2*zeta_conj*z3**3*z2**2*z1**2 + 6*m3*m1*zeta_conj*z3**3*z2**2*z1**2 +  6*m2*m1*zeta_conj*z3**3*z2**2*z1**2 + 6*m1**2*zeta_conj*z3**3*z2**2*z1**2 + 9*m2*zeta*zeta_conj**2*z3**3*z2**2*z1**2 +  9*m1*zeta*zeta_conj**2*z3**3*z2**2*z1**2 + 3*m3**3*zeta*z2**3*z1**2 +  3*m3**2*m1*zeta*z2**3*z1**2 -  3*m3**3*z3*z2**3*z1**2 - 
				3*m3**2*m2*z3*z2**3*z1**2 -  4*m3**2*m1*z3*z2**3*z1**2 -  4*m3*m2*m1*z3*z2**3*z1**2 -  4*m3*m1**2*z3*z2**3*z1**2 -  9*m3**2*zeta*zeta_conj*z3*z2**3*z1**2 - 12*m3*m1*zeta*zeta_conj*z3*z2**3*z1**2 +  6*m3**2*zeta_conj*z3**2*z2**3*z1**2 +  6*m3*m2*zeta_conj*z3**2*z2**3*z1**2 + 6*m3*m1*zeta_conj*z3**2*z2**3*z1**2 +  6*m2*m1*zeta_conj*z3**2*z2**3*z1**2 + 6*m1**2*zeta_conj*z3**2*z2**3*z1**2 + 9*m3*zeta*zeta_conj**2*z3**2*z2**3*z1**2 +  9*m1*zeta*zeta_conj**2*z3**2*z2**3*z1**2 - 3*m3*zeta_conj**2*z3**3*z2**3*z1**2 - 3*m2*zeta_conj**2*z3**3*z2**3*z1**2 - 3*zeta*zeta_conj**3*z3**3*z2**3*z1**2 +  3*m3*m2**2*zeta*z3**2*z1**3 +  3*m2**3*zeta*z3**2*z1**3 -  m3*m2**2*z3**3*z1**3 -  m2**2*m1*z3**3*z1**3 -  3*m2**2*zeta*zeta_conj*z3**3*z1**3 +  6*m3**2*m2*zeta*z3*z2*z1**3 +
				6*m3*m2**2*zeta*z3*z2*z1**3 -  4*m3**2*m2*z3**2*z2*z1**3 -  4*m3*m2**2*z3**2*z2*z1**3 -  3*m2**3*z3**2*z2*z1**3 -  4*m3*m2*m1*z3**2*z2*z1**3 -  3*m2**2*m1*z3**2*z2*z1**3 -  12*m3*m2*zeta*zeta_conj*z3**2*z2*z1**3 - 9*m2**2*zeta*zeta_conj*z3**2*z2*z1**3 +  4*m3*m2*zeta_conj*z3**3*z2*z1**3 +  m2**2*zeta_conj*z3**3*z2*z1**3 +  4*m2*m1*zeta_conj*z3**3*z2*z1**3 +  6*m2*zeta*zeta_conj**2*z3**3*z2*z1**3 + 3*m3**3*zeta*z2**2*z1**3 +  3*m3**2*m2*zeta*z2**2*z1**3 -  3*m3**3*z3*z2**2*z1**3 -  4*m3**2*m2*z3*z2**2*z1**3 -  4*m3*m2**2*z3*z2**2*z1**3 -  3*m3**2*m1*z3*z2**2*z1**3 -  4*m3*m2*m1*z3*z2**2*z1**3 -  9*m3**2*zeta*zeta_conj*z3*z2**2*z1**3 - 12*m3*m2*zeta*zeta_conj*z3*z2**2*z1**3 +  6*m3**2*zeta_conj*z3**2*z2**2*z1**3 +  6*m3*m2*zeta_conj*z3**2*z2**2*z1**3 + 
				6*m2**2*zeta_conj*z3**2*z2**2*z1**3 + 6*m3*m1*zeta_conj*z3**2*z2**2*z1**3 +  6*m2*m1*zeta_conj*z3**2*z2**2*z1**3 + 9*m3*zeta*zeta_conj**2*z3**2*z2**2*z1**3 +  9*m2*zeta*zeta_conj**2*z3**2*z2**2*z1**3 - 3*m3*zeta_conj**2*z3**3*z2**2*z1**3 - 3*m1*zeta_conj**2*z3**3*z2**2*z1**3 - 3*zeta*zeta_conj**3*z3**3*z2**2*z1**3 -  m3**2*m2*z2**3*z1**3 -  m3**2*m1*z2**3*z1**3 -  3*m3**2*zeta*zeta_conj*z2**3*z1**3 +  m3**2*zeta_conj*z3*z2**3*z1**3 +  4*m3*m2*zeta_conj*z3*z2**3*z1**3 +  4*m3*m1*zeta_conj*z3*z2**3*z1**3 +  6*m3*zeta*zeta_conj**2*z3*z2**3*z1**3 - 3*m2*zeta_conj**2*z3**2*z2**3*z1**3 - 3*m1*zeta_conj**2*z3**2*z2**3*z1**3 - 3*zeta*zeta_conj**3*z3**2*z2**3*z1**3 -  zeta_conj**3*z3**3*z2**3*z1**3 +  m1**2*zeta*z3**3*z2**3*z1_conj +  4*m2*m1*zeta*z3**3*z2**2*z1*z1_conj + 
				3*m1**2*zeta*z3**3*z2**2*z1*z1_conj +  4*m3*m1*zeta*z3**2*z2**3*z1*z1_conj +  3*m1**2*zeta*z3**2*z2**3*z1*z1_conj -  2*m3*m1*z3**3*z2**3*z1*z1_conj -  2*m2*m1*z3**3*z2**3*z1*z1_conj +  m1**2*z3**3*z2**3*z1*z1_conj -  4*m1*zeta*zeta_conj*z3**3*z2**3*z1*z1_conj +  3*m2**2*zeta*z3**3*z2*z1**2*z1_conj +  4*m2*m1*zeta*z3**3*z2*z1**2*z1_conj +  6*m3*m2*zeta*z3**2*z2**2*z1**2*z1_conj +  6*m3*m1*zeta*z3**2*z2**2*z1**2*z1_conj +  6*m2*m1*zeta*z3**2*z2**2*z1**2*z1_conj -  3*m3*m2*z3**3*z2**2*z1**2*z1_conj -  3*m2**2*z3**3*z2**2*z1**2*z1_conj -  3*m3*m1*z3**3*z2**2*z1**2*z1_conj -  m2*m1*z3**3*z2**2*z1**2*z1_conj -  6*m2*zeta*zeta_conj*z3**3*z2**2*z1**2*z1_conj - 
				6*m1*zeta*zeta_conj*z3**3*z2**2*z1**2*z1_conj +  3*m3**2*zeta*z3*z2**3*z1**2*z1_conj +  4*m3*m1*zeta*z3*z2**3*z1**2*z1_conj -  3*m3**2*z3**2*z2**3*z1**2*z1_conj -  3*m3*m2*z3**2*z2**3*z1**2*z1_conj -  m3*m1*z3**2*z2**3*z1**2*z1_conj -  3*m2*m1*z3**2*z2**3*z1**2*z1_conj -  6*m3*zeta*zeta_conj*z3**2*z2**3*z1**2*z1_conj -  6*m1*zeta*zeta_conj*z3**2*z2**3*z1**2*z1_conj +  3*m3*zeta_conj*z3**3*z2**3*z1**2*z1_conj +  3*m2*zeta_conj*z3**3*z2**3*z1**2*z1_conj -  2*m1*zeta_conj*z3**3*z2**3*z1**2*z1_conj +  3*zeta*zeta_conj**2*z3**3*z2**3*z1**2*z1_conj +  m2**2*zeta*z3**3*z1**3*z1_conj +  4*m3*m2*zeta*z3**2*z2*z1**3*z1_conj +  3*m2**2*zeta*z3**2*z2*z1**3*z1_conj -  2*m3*m2*z3**3*z2*z1**3*z1_conj - 
				m2**2*z3**3*z2*z1**3*z1_conj -  4*m2*zeta*zeta_conj*z3**3*z2*z1**3*z1_conj +  3*m3**2*zeta*z3*z2**2*z1**3*z1_conj +  4*m3*m2*zeta*z3*z2**2*z1**3*z1_conj -  3*m3**2*z3**2*z2**2*z1**3*z1_conj -  4*m3*m2*z3**2*z2**2*z1**3*z1_conj -  3*m2**2*z3**2*z2**2*z1**3*z1_conj -  6*m3*zeta*zeta_conj*z3**2*z2**2*z1**3*z1_conj -  6*m2*zeta*zeta_conj*z3**2*z2**2*z1**3*z1_conj +  3*m3*zeta_conj*z3**3*z2**2*z1**3*z1_conj +  m2*zeta_conj*z3**3*z2**2*z1**3*z1_conj +  3*zeta*zeta_conj**2*z3**3*z2**2*z1**3*z1_conj +  m3**2*zeta*z2**3*z1**3*z1_conj -  m3**2*z3*z2**3*z1**3*z1_conj -  2*m3*m2*z3*z2**3*z1**3*z1_conj -  4*m3*zeta*zeta_conj*z3*z2**3*z1**3*z1_conj +  m3*zeta_conj*z3**2*z2**3*z1**3*z1_conj + 
				3*m2*zeta_conj*z3**2*z2**3*z1**3*z1_conj +  3*zeta*zeta_conj**2*z3**2*z2**3*z1**3*z1_conj +  zeta_conj**2*z3**3*z2**3*z1**3*z1_conj +  z2_conj*(m1**2*z3**2*z2**2*(zeta - z1)*(3*z2*z1 + z3*(z2 + 3*z1)) +  m1*z3*z2*z1*(m2*z3*(zeta*(6*z2*z1 + 4*z3*(z2 + z1)) - z1*(3*z2*z1 + z3*(z2 + 2*z1)) ) +  z2*(m3*(2*zeta - z3 - z1)*(2*z3*z2 + 3*z3*z1 +  2*z2*z1) +  zeta_conj*z3*(z1*(z3*z2 + 3*z3*z1 +  3*z2*z1) -  2*zeta*(2*z3*z2 + 3*z3*z1 +  3*z2*z1)))) +  z1**2*(m2**2*z3**2*(z3*z2*z1 +  zeta*(3*z3*z2 + z3*z1 +  3*z2*z1)) -  m2*z3*z2*(m3*(z3*(3*z3*z2 + 2*z3*z1 +  z2*z1) -  2*zeta*(3*z3*z2 + 2*z3*z1 +  2*z2*z1)) +  2*zeta_conj*z3*(z3*z2*z1 +  zeta*(3*z3*z2 + 2*z3*z1 +  3*z2*z1))) +  z2**2*(m3**2*(zeta - z3)*(z2*z1 + 
				3*z3*(z2 + z1)) + zeta_conj**2*z3**2*(z3*z2*z1 +  3*zeta*(z2*z1 + z3*(z2 + z1))) + m3*zeta_conj*z3*(z3*(z2*z1 +  3*z3*(z2 + z1)) -  2*zeta*(2*z2*z1 +  3*z3*(z2 + z1))))) +  z3*z2*z1*(m1*z3*z2*(z3*z2*z1 +  zeta*(2*z3*z2 + 3*z3*z1 +  3*z2*z1)) +  z1*(m2*z3*(z3*z2*z1 +  zeta*(3*z3*z2 + 2*z3*z1 +  3*z2*z1)) +  z2*(m3*(zeta - z3)*(2*z2*z1 +  3*z3*(z2 + z1)) -  zeta_conj*z3*(z3*z2*z1 +  3*zeta*(z2*z1 +  z3*(z2 + z1))))))*z1_conj) +  z3_conj*(m1**2*zeta*z3**3*z2**3 +  4*m2*m1*zeta*z3**3*z2**2*z1 +  3*m1**2*zeta*z3**3*z2**2*z1 +  4*m3*m1*zeta*z3**2*z2**3*z1 +  3*m1**2*zeta*z3**2*z2**3*z1 -  2*m2*m1*z3**3*z2**3*z1 -  m1**2*z3**3*z2**3*z1 -  4*m1*zeta*zeta_conj*z3**3*z2**3*z1 +  3*m2**2*zeta*z3**3*z2*z1**2 + 
				4*m2*m1*zeta*z3**3*z2*z1**2 +  6*m3*m2*zeta*z3**2*z2**2*z1**2 +  6*m3*m1*zeta*z3**2*z2**2*z1**2 +  6*m2*m1*zeta*z3**2*z2**2*z1**2 -  3*m2**2*z3**3*z2**2*z1**2 -  4*m2*m1*z3**3*z2**2*z1**2 -  3*m1**2*z3**3*z2**2*z1**2 -  6*m2*zeta*zeta_conj*z3**3*z2**2*z1**2 -  6*m1*zeta*zeta_conj*z3**3*z2**2*z1**2 +  3*m3**2*zeta*z3*z2**3*z1**2 +  4*m3*m1*zeta*z3*z2**3*z1**2 -  3*m3*m2*z3**2*z2**3*z1**2 -  m3*m1*z3**2*z2**3*z1**2 -  3*m2*m1*z3**2*z2**3*z1**2 -  3*m1**2*z3**2*z2**3*z1**2 -  6*m3*zeta*zeta_conj*z3**2*z2**3*z1**2 -  6*m1*zeta*zeta_conj*z3**2*z2**3*z1**2 +  3*m2*zeta_conj*z3**3*z2**3*z1**2 +  m1*zeta_conj*z3**3*z2**3*z1**2 +  3*zeta*zeta_conj**2*z3**3*z2**3*z1**2 +  m2**2*zeta*z3**3*z1**3 +  4*m3*m2*zeta*z3**2*z2*z1**3 +  3*m2**2*zeta*z3**2*z2*z1**3 - 
				m2**2*z3**3*z2*z1**3 -  2*m2*m1*z3**3*z2*z1**3 -  4*m2*zeta*zeta_conj*z3**3*z2*z1**3 +  3*m3**2*zeta*z3*z2**2*z1**3 +  4*m3*m2*zeta*z3*z2**2*z1**3 -  m3*m2*z3**2*z2**2*z1**3 -  3*m2**2*z3**2*z2**2*z1**3 -  3*m3*m1*z3**2*z2**2*z1**3 -  3*m2*m1*z3**2*z2**2*z1**3 -  6*m3*zeta*zeta_conj*z3**2*z2**2*z1**3 -  6*m2*zeta*zeta_conj*z3**2*z2**2*z1**3 +  m2*zeta_conj*z3**3*z2**2*z1**3 +  3*m1*zeta_conj*z3**3*z2**2*z1**3 +  3*zeta*zeta_conj**2*z3**3*z2**2*z1**3 +  m3**2*zeta*z2**3*z1**3 +  m3**2*z3*z2**3*z1**3 -  2*m3*m2*z3*z2**3*z1**3 -  2*m3*m1*z3*z2**3*z1**3 -  4*m3*zeta*zeta_conj*z3*z2**3*z1**3 -  2*m3*zeta_conj*z3**2*z2**3*z1**3 +  3*m2*zeta_conj*z3**2*z2**3*z1**3 +  3*m1*zeta_conj*z3**2*z2**3*z1**3 +  3*zeta*zeta_conj**2*z3**2*z2**3*z1**3 +  zeta_conj**2*z3**3*z2**3*z1**3 +
				z3*z2*z1*(m2*z3*(zeta - z2)*z1*(3*z3*z2 + 2*z3*z1 +  3*z2*z1) -  zeta_conj*z3*z2*z1*(z3*z2*z1 +  3*zeta*(z2*z1 + z3*(z2 + z1))) +  z2*(m1*z3*(z3*z2*z1 +  zeta*(2*z3*z2 + 3*z3*z1 +  3*z2*z1)) +  m3*z1*(z3*z2*z1 +  zeta*(2*z2*z1 +  3*z3*(z2 + z1)))))*z1_conj +  z3*z2*z1*z2_conj*(m1*z3*z2*(zeta - z1)*(2*z3*z2 + 3*z3*z1 +  3*z2*z1) +  z1*(m2*z3*(z3*z2*z1 +  zeta*(3*z3*z2 + 2*z3*z1 +  3*z2*z1)) +  z2*(-(zeta_conj*z3*(z3*z2*z1 +  3*zeta*(z2*z1 +  z3*(z2 + z1)))) +  m3*(z3*z2*z1 +  zeta*(2*z2*z1 +  3*z3*(z2 + z1))))) +  z3*z2*z1*(z3*z2*z1 +  3*zeta*(z2*z1 + z3*(z2 + z1)))*z1_conj)))

		coeff0 = ((m1*z3*z2 +  (m2*z3 + (m3 - zeta_conj*z3)*z2)*z1 )*((m1*z3*z2 +  (m2*z3 +  (m3 - zeta_conj*z3)*z2)*z1)*(((-(m3*zeta) + m3*z3 +  zeta*zeta_conj*z3)*z2 +  m2*z3*(-zeta + z2))*z1 +  m1*z3*z2*(-zeta + z1)) +  z3*z2*z1*(-(m1*zeta*z3*z2) +  ((-(m3*zeta) + m3*z3 +  zeta*zeta_conj*z3)*z2 +  m2*z3*(-zeta + z2))*z1)*z1_conj) +  z3*z2*z1*z2_conj*((m1*z3*z2 +  (m2*z3 +  (m3 - zeta_conj*z3)*z2)*z1)*((-(m2*zeta*z3) +  (-(m3*zeta) + m3*z3 +  zeta*zeta_conj*z3)*z2)*z1 +  m1*z3*z2*(-zeta + z1)) +  z3*z2*z1*(zeta*zeta_conj*z3*z2*z1 +  m3*(-zeta + z3)*z2*z1 -  zeta*z3*(m1*z2 + m2*z1))*z1_conj) +  z3*z2*z1*z3_conj*((m1*z3*z2 +  (m2*z3 +  (m3 - zeta_conj*z3)*z2)*z1)*((zeta*(-m3 + zeta_conj*z3)*z2 +  m2*z3*(-zeta + z2))*z1 +
				m1*z3*z2*(-zeta + z1)) +  z3*z2*z1*(zeta*zeta_conj*z3*z2*z1 +  m2*z3*(-zeta + z2)*z1 -  zeta*z2*(m1*z3 + m3*z1))*z1_conj +  z3*z2*z1*z2_conj*(-(zeta*(m2*z3 + m3*z2 -  zeta_conj*z3*z2)*z1) +  m1*z3*z2*(-zeta + z1) -  zeta*z3*z2*z1*z1_conj)))

	elif calc == 'Rhie2002':

		cc1 = z1
		cc2 = z2
		cc3 = z3
		cc4 = z4

		aa = -(z1+z2+z3) 
		bb = z1*z2 + z1*z3 + z2*z3 
		cc = -z1*z2*z3
		dd = m1*z2*z3 + m2*z1*z3 + m3*z1*z2

		hh39 = 1. + 0j
		hh38 = 3.*aa
		hh37 = 3.*bb + 3.*aa*aa 
		hh36 = 3.*cc + 6.*aa*bb + aa*aa*aa
		hh35 = 6.*aa*cc + 3.*bb*bb + 3.*aa*aa*bb
		hh34 = 6.*bb*cc + 3.*aa*aa*cc + 3.*aa*bb*bb
		hh33 = 3.*cc*cc + 6.*aa*bb*cc + bb*bb*bb
		hh32 = 3.*aa*cc*cc + 3.*bb*bb*cc
		hh31 = 3.*bb*cc*cc
		hh30 = cc*cc*cc

		hh28 = 1. + 0j
		hh27 = 3.*aa
		hh26 = dd + 2.*bb + 3.*aa*aa
		hh25 = 2.*aa*dd + 4.*aa*bb + aa*aa*aa + 2.*cc
		hh24 = 2.*dd*bb + dd*aa*aa + 4.*aa*cc + 2.*aa*aa*bb + bb*bb
		hh23 = 2.*dd*cc + 2.*dd*aa*bb + 2.*aa*aa*cc + aa*bb*bb + 2.*bb*cc
		hh22 = 2.*cc*aa*dd + dd*bb*bb + 2.*aa*bb*cc + cc*cc
		hh21 = 2.*bb*cc*dd + aa*cc*cc
		hh20 = cc*cc*dd
		hh17 = 1. + 0j
		hh16 = 3.*aa
		hh15 = 2.*dd + 3.*aa*aa + bb
		hh14 = 4.*aa*dd + aa*aa*aa + 2.*aa*bb + cc
		hh13 = dd*dd + 2.*aa*aa*dd + 2.*bb*dd + bb*aa*aa + 2.*aa*cc
		hh12 = aa*dd*dd + 2.*aa*bb*dd + 2.*cc*dd + cc*aa*aa
		hh11 = bb*dd*dd + 2.*aa*cc*dd
		hh10 = cc*dd*dd

		hh06 = 1. + 0j
		hh05 = 3.*aa
		hh04 = 3.*dd + 3.*aa*aa
		hh03 = 6.*aa*dd + aa*aa*aa
		hh02 = 3.*dd*dd + 3.*aa*aa*dd
		hh01 = 3.*aa*dd*dd
		hh00 = dd*dd*dd

		ww  = zeta
		ww1 = zeta - z1
		ww2 = zeta - z2
		ww3 = zeta - z3

		wwbar = np.conj(ww)
		ww1bar = np.conj(ww1)
		ww2bar = np.conj(ww2)
		ww3bar = np.conj(ww3)

		wwaa = ww1bar+ww2bar+ww3bar
		wwbb = ww1bar*ww2bar + ww2bar*ww3bar + ww1bar*ww3bar
		wwcc = ww1bar*ww2bar*ww3bar
		wwdd = m1*ww2bar*ww3bar + m2*ww1bar*ww3bar + m3*ww1bar*ww2bar

		coeff10 = hh39*wwcc
		coeff9  = hh38*wwcc + hh28*wwbb - (ww*wwcc+wwdd)*hh39
		coeff8  = hh37*wwcc + hh27*wwbb + hh17*wwaa - (ww*wwcc + wwdd)*hh38 - (ww*wwbb + wwaa - wwbar)*hh28
		coeff7  = hh36*wwcc + hh26*wwbb + hh16*wwaa + hh06 - (ww*wwcc + wwdd)*hh37 - (ww*wwbb + wwaa-wwbar)*hh27 - (ww*wwaa + 1.)*hh17 
		coeff6  = hh35*wwcc + hh25*wwbb + hh15*wwaa + hh05 - (ww*wwcc + wwdd)*hh36 - (ww*wwbb + wwaa-wwbar)*hh26 - (ww*wwaa + 1.)*hh16  - ww*hh06 
		coeff5  = hh34*wwcc + hh24*wwbb + hh14*wwaa + hh04 - (ww*wwcc + wwdd)*hh35 - (ww*wwbb + wwaa-wwbar)*hh25 - (ww*wwaa + 1.)*hh15  - ww*hh05
		coeff4  = hh33*wwcc + hh23*wwbb + hh13*wwaa + hh03 - (ww*wwcc + wwdd)*hh34 - (ww*wwbb + wwaa-wwbar)*hh24 - (ww*wwaa + 1.)*hh14  - ww*hh04
		coeff3  = hh32*wwcc + hh22*wwbb + hh12*wwaa + hh02 - (ww*wwcc + wwdd)*hh33 - (ww*wwbb + wwaa-wwbar)*hh23 - (ww*wwaa + 1.)*hh13  - ww*hh03
		coeff2  = hh31*wwcc + hh21*wwbb + hh11*wwaa + hh01 - (ww*wwcc + wwdd)*hh32 - (ww*wwbb + wwaa-wwbar)*hh22 - (ww*wwaa + 1.)*hh12  - ww*hh02
		coeff1  = hh30*wwcc + hh20*wwbb + hh10*wwaa + hh00 - (ww*wwcc + wwdd)*hh31 - (ww*wwbb + wwaa-wwbar)*hh21 - (ww*wwaa + 1.)*hh11  - ww*hh01
		coeff0  = -(ww*wwcc + wwdd)*hh30 - (ww*wwbb + wwaa-wwbar)*hh20 - (ww*wwaa + 1.)*hh10  - ww*hh00

	else:
		raise ValueError('Not able to retreive coefficients derived for {} frame'.
							 format(calc))

	coeff_array = np.array([coeff10, coeff9, coeff8, coeff7, coeff6, coeff5,
						   coeff4, coeff3, coeff2, coeff1, coeff0])
	return coeff_array

